{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport useStyles from './topstyles';\nimport jsPDF from 'jspdf';\nconst MESSAGE_MAX_LENGTH = 450;\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const containerRef = useRef();\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  const handleDownload = () => {\n    const pdf = new jsPDF();\n    const container = containerRef.current; // Generate the PDF from the container's HTML\n\n    pdf.fromHTML(container, 15, 15); // Download the PDF\n\n    pdf.save('top_posts.pdf');\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Download as PDF\"), /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, sortedPosts.map(post => /*#__PURE__*/React.createElement(Grid, {\n    key: post._id,\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, \"Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10), \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Total Likes: \", post.likeCount))))))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Card","CardContent","Typography","getTopPosts","useStyles","jsPDF","MESSAGE_MAX_LENGTH","Top5","dispatch","posts","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","containerRef","handleDownload","pdf","container","current","fromHTML","save","truncateText","text","length","substring","map","post","_id","card","reviewTitle","title","reviewerName","name","postedAt","createdAt","reviewMessage","message","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport useStyles from './topstyles';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450;\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  const handleDownload = () => {\r\n    const pdf = new jsPDF();\r\n    const container = containerRef.current;\r\n\r\n    // Generate the PDF from the container's HTML\r\n    pdf.fromHTML(container, 15, 15);\r\n\r\n    // Download the PDF\r\n    pdf.save('top_posts.pdf');\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n      <button onClick={handleDownload}>Download as PDF</button>\r\n      <div ref={containerRef}>\r\n        <Grid container spacing={3}>\r\n          {sortedPosts.map((post) => (\r\n            <Grid key={post._id} item xs={12} sm={6} md={4} lg={3}>\r\n              <Card className={classes.card}>\r\n                <CardContent>\r\n                  <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n                    Review Title: {post.title}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n                    Review posted by: {post.name}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n                    Review posted at: {post.createdAt.substring(0, 10)} {/* Limit to 10 characters */}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n                    Review Message: {truncateText(post.message)}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n                    Total Likes: {post.likeCount}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}