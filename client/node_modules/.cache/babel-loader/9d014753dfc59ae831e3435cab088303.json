{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!postData.title || !postData.message || postData.tags.length === 0) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    if (postData.title.match(/\\d/)) {\n      toast.error('Title cannot contain numbers');\n      return;\n    }\n\n    if (postData.message.length > 500) {\n      toast.error('Maximum message length exceeded (500 characters)');\n      return;\n    }\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n      toast.success('Post created successfully');\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n      toast.success('Post updated successfully');\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to post your own review in TourGenie Review Center.\"));\n  }\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : 'Creating a Review'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => {\n      const value = e.target.value;\n\n      if (value.match(/\\d/)) {\n        toast.error('Title cannot contain numbers');\n        return;\n      }\n\n      setPostData({ ...postData,\n        title: value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px 0',\n      width: '94%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(ChipInput, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags\",\n    fullWidth: true,\n    value: postData.tags,\n    onAdd: chip => handleAddChip(chip),\n    onDelete: chip => handleDeleteChip(chip),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 1\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["D:/review center/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","ChipInput","toast","ToastContainer","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","length","error","match","name","result","success","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","root","form","value","target","padding","width","chip","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' });\n  };\n\n  useEffect(() => {\n    if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!postData.title || !postData.message || postData.tags.length === 0) {\n      toast.error('Please fill in all fields');\n      return;\n    }\n\n    if (postData.title.match(/\\d/)) {\n      toast.error('Title cannot contain numbers');\n      return;\n    }\n\n    if (postData.message.length > 500) {\n      toast.error('Maximum message length exceeded (500 characters)');\n      return;\n    }\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n      toast.success('Post created successfully');\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n      toast.success('Post updated successfully');\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to post your own review in TourGenie Review Center.\n        </Typography>\n      </Paper>\n    );\n  }\n\n  const handleAddChip = (tag) => {\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\n  };\n\n  const handleDeleteChip = (chipToDelete) => {\n    setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\n  };\n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating a Review'}</Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => {\n            const value = e.target.value;\n            if (value.match(/\\d/)) {\n              toast.error('Title cannot contain numbers');\n              return;\n            }\n            setPostData({ ...postData, title: value });\n          }}\n        />\n        <TextField\n        name=\"message\"\nvariant=\"outlined\"\nlabel=\"Message\"\nfullWidth\nmultiline\nrows={4}\nvalue={postData.message}\nonChange={(e) => setPostData({ ...postData, message: e.target.value })}\n/>\n<div style={{ padding: '5px 0', width: '94%' }}>\n<ChipInput\nname=\"tags\"\nvariant=\"outlined\"\nlabel=\"Tags\"\nfullWidth\nvalue={postData.tags}\nonAdd={(chip) => handleAddChip(chip)}\nonDelete={(chip) => handleDeleteChip(chip)}\n/>\n</div>\n<div className={classes.fileInput}>\n<FileBase\ntype=\"file\"\nmultiple={false}\nonDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\n/>\n</div>\n<Button\n       className={classes.buttonSubmit}\n       variant=\"contained\"\n       color=\"primary\"\n       size=\"large\"\n       type=\"submit\"\n       fullWidth\n     >\nSubmit\n</Button>\n<Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>\nClear\n</Button>\n</form>\n<ToastContainer />\n</Paper>\n);\n};\n\nexport default Form;\n         \n"]},"metadata":{},"sourceType":"module"}