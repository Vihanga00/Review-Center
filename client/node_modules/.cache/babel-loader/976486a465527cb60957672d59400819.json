{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport { saveAs } from 'file-saver';\nimport { PDFDownloadLink, PDFViewer, Document, Page, Text } from '@react-pdf/renderer';\nimport useStyles from './topstyles';\nconst MESSAGE_MAX_LENGTH = 450;\n\nconst PDFDocument = ({\n  posts\n}) => /*#__PURE__*/React.createElement(Document, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Page, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, posts.map(post => /*#__PURE__*/React.createElement(Text, {\n  key: post._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, post.title) // Render other post details as needed\n)));\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const pdfRef = useRef();\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  const handleDownloadPDF = () => {\n    const blob = pdfRef.current.toBlob();\n    saveAs(blob, 'top_posts.pdf');\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(PDFViewer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PDFDocument, {\n    posts: sortedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownloadPDF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Download PDF\")), sortedPosts.map(post => /*#__PURE__*/React.createElement(Grid, {\n    key: post._id,\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10), \" \"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"Total Likes: \", post.likeCount))))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Card","CardContent","Typography","getTopPosts","saveAs","PDFDownloadLink","PDFViewer","Document","Page","Text","useStyles","MESSAGE_MAX_LENGTH","PDFDocument","posts","map","post","_id","title","Top5","dispatch","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","pdfRef","truncateText","text","length","substring","handleDownloadPDF","blob","current","toBlob","card","reviewTitle","reviewerName","name","postedAt","createdAt","reviewMessage","message","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport { saveAs } from 'file-saver';\r\nimport { PDFDownloadLink, PDFViewer, Document, Page, Text } from '@react-pdf/renderer';\r\nimport useStyles from './topstyles';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450;\r\n\r\nconst PDFDocument = ({ posts }) => (\r\n  <Document>\r\n    <Page>\r\n      {posts.map((post) => (\r\n        <Text key={post._id}>{post.title}</Text>\r\n        // Render other post details as needed\r\n      ))}\r\n    </Page>\r\n  </Document>\r\n);\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const pdfRef = useRef();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const blob = pdfRef.current.toBlob();\r\n    saveAs(blob, 'top_posts.pdf');\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12}>\r\n        <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n        <PDFViewer>\r\n          <PDFDocument posts={sortedPosts} />\r\n        </PDFViewer>\r\n        <button onClick={handleDownloadPDF}>Download PDF</button>\r\n      </Grid>\r\n      {sortedPosts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={6} md={4} lg={3}>\r\n          <Card className={classes.card}>\r\n            <CardContent>\r\n              <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n                Review Title: {post.title}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n                Review posted by: {post.name}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n                Review posted at: {post.createdAt.substring(0, 10)} {/* Limit to 10 characters */}\r\n              </Typography>\r\n              <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n                Review Message: {truncateText(post.message)}\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n                Total Likes: {post.likeCount}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}