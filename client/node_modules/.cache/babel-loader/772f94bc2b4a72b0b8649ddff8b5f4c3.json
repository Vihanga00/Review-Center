{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\TopPosts.js\";\nimport React from 'react';\nimport { Card, CardContent, Typography, ButtonBase, CardActions, Button } from '@material-ui/core/';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst TopPosts = ({\n  topPosts\n}) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const openPost = id => {\n    history.push(`/posts/${id}`);\n  };\n\n  const handleLike = id => {\n    dispatch(likePost(id));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, topPosts.map(post => /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    component: \"span\",\n    name: \"test\",\n    className: classes.cardAction,\n    onClick: () => openPost(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, moment(post.createdAt).fromNow())), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, post.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, post.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, post.message.split(' ').splice(0, 20).join(' '), \"...\"))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => handleLike(post._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }), \"\\xA0\", post.likes.length, \" \", post.likes.length === 1 ? 'Like' : 'Likes'), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), \"\\xA0Delete\")))));\n};\n\nexport default TopPosts;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/TopPosts.js"],"names":["React","Card","CardContent","Typography","ButtonBase","CardActions","Button","moment","useDispatch","useHistory","likePost","deletePost","useStyles","TopPosts","topPosts","dispatch","history","classes","openPost","id","push","handleLike","map","post","card","_id","cardAction","overlay","name","createdAt","fromNow","details","tags","tag","title","message","split","splice","join","cardActions","likes","length"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardContent, Typography, ButtonBase, CardActions, Button } from '@material-ui/core/';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst TopPosts = ({ topPosts }) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const openPost = (id) => {\r\n    history.push(`/posts/${id}`);\r\n  };\r\n\r\n  const handleLike = (id) => {\r\n    dispatch(likePost(id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {topPosts.map((post) => (\r\n        <Card className={classes.card} raised elevation={6} key={post._id}>\r\n          <ButtonBase\r\n            component=\"span\"\r\n            name=\"test\"\r\n            className={classes.cardAction}\r\n            onClick={() => openPost(post._id)}\r\n          >\r\n            <div className={classes.overlay}>\r\n              <Typography variant=\"h6\">{post.name}</Typography>\r\n              <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.details}>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n                {post.tags.map((tag) => `#${tag} `)}\r\n              </Typography>\r\n            </div>\r\n            <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\r\n              {post.title}\r\n            </Typography>\r\n            <CardContent>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {post.message.split(' ').splice(0, 20).join(' ')}...\r\n              </Typography>\r\n            </CardContent>\r\n          </ButtonBase>\r\n          <CardActions className={classes.cardActions}>\r\n            <Button size=\"small\" color=\"primary\" onClick={() => handleLike(post._id)}>\r\n              <ThumbUpAltIcon fontSize=\"small\" />\r\n              &nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}\r\n            </Button>\r\n            <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n              <DeleteIcon fontSize=\"small\" />\r\n              &nbsp;Delete\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopPosts;\r\n"]},"metadata":{},"sourceType":"module"}