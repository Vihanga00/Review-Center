{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Card, CardContent, Typography, Button } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport useStyles from './topstyles';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nconst MESSAGE_MAX_LENGTH = 450;\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  const handleDownload = () => {\n    const container = containerRef.current;\n    const cards = container.getElementsByClassName(classes.card);\n    const pdf = new jsPDF();\n    Array.from(cards).forEach((card, index) => {\n      html2canvas(card).then(canvas => {\n        const imgData = canvas.toDataURL('image/png');\n        const imgProps = pdf.getImageProperties(imgData);\n        const pdfWidth = pdf.internal.pageSize.getWidth();\n        const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n\n        if (index !== 0) {\n          pdf.addPage();\n        }\n\n        pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n\n        if (index === cards.length - 1) {\n          pdf.save('top_posts.pdf');\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Download as PDF\"), sortedPosts.map((post, index) => /*#__PURE__*/React.createElement(Card, {\n    key: post._id,\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, index + 1, \". Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Total Likes: \", post.likeCount)))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Card","CardContent","Typography","Button","getTopPosts","useStyles","html2canvas","jsPDF","MESSAGE_MAX_LENGTH","Top5","dispatch","posts","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","containerRef","truncateText","text","length","substring","handleDownload","container","current","cards","getElementsByClassName","card","pdf","Array","from","forEach","index","then","canvas","imgData","toDataURL","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addPage","addImage","save","map","post","_id","reviewTitle","title","reviewerName","name","postedAt","createdAt","reviewMessage","message","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Card, CardContent, Typography, Button } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport useStyles from './topstyles';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450;\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    const container = containerRef.current;\r\n    const cards = container.getElementsByClassName(classes.card);\r\n\r\n    const pdf = new jsPDF();\r\n    Array.from(cards).forEach((card, index) => {\r\n      html2canvas(card).then((canvas) => {\r\n        const imgData = canvas.toDataURL('image/png');\r\n        const imgProps = pdf.getImageProperties(imgData);\r\n        const pdfWidth = pdf.internal.pageSize.getWidth();\r\n        const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n        if (index !== 0) {\r\n          pdf.addPage();\r\n        }\r\n        pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\r\n\r\n        if (index === cards.length - 1) {\r\n          pdf.save('top_posts.pdf');\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div ref={containerRef}>\r\n      <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n      \r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleDownload}>\r\n        Download as PDF\r\n      </Button>\r\n\r\n      {sortedPosts.map((post, index) => (\r\n        <Card key={post._id} className={classes.card}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n              {index + 1}. Review Title: {post.title}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n              Review posted by: {post.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n              Review posted at: {post.createdAt.substring(0, 10)}\r\n            </Typography>\r\n            <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n              Review Message: {truncateText(post.message)}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n              Total Likes: {post.likeCount}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}