{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Typography, Button, Container } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport useStyles from './topstyles';\nimport jsPDF from 'jspdf';\nconst MESSAGE_MAX_LENGTH = 450; // Adjust the maximum length as per your requirement\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  const handleDownload = () => {\n    const pdf = new jsPDF();\n    const pageWidth = pdf.internal.pageSize.getWidth();\n    const pageHeight = pdf.internal.pageSize.getHeight();\n    const leftMargin = 20;\n    const rightMargin = pageWidth - leftMargin;\n    const topMargin = 20;\n    const bottomMargin = pageHeight - topMargin;\n    let yPos = topMargin; // Add page border\n\n    pdf.setDrawColor(0); // Black color\n\n    pdf.rect(0, 0, pageWidth, pageHeight, 'S'); // Add heading\n\n    pdf.setFontSize(16);\n    pdf.setFont('helvetica', 'bold');\n    pdf.text('Best 5 Experiences of TourGenie based on the Reviews', leftMargin, yPos);\n    yPos += 15; // Add image\n\n    const imageURL = '/tourgenie.png';\n    const imageWidth = 80;\n    const imageHeight = 80;\n    pdf.addImage(imageURL, 'PNG', leftMargin, yPos, imageWidth, imageHeight);\n    sortedPosts.forEach((post, index) => {\n      if (index !== 0) {\n        yPos += 10;\n      }\n\n      const {\n        title,\n        name,\n        createdAt,\n        likeCount\n      } = post; // Add border and background color to the post container\n\n      pdf.setFillColor(230);\n      pdf.rect(leftMargin, yPos, rightMargin - leftMargin, 40, 'F');\n      pdf.setFontSize(14);\n      pdf.setFont('helvetica', 'normal'); // Add border and background color to the review title\n\n      pdf.setFillColor(200);\n      pdf.rect(leftMargin, yPos, rightMargin - leftMargin, 10, 'F'); // Set title style\n\n      pdf.setTextColor(0); // Black color\n\n      pdf.setFontStyle('bold'); // Bold font\n      // Add review title text\n\n      pdf.text(`${index + 1}. Review Title: ${title}`, leftMargin + 2, yPos + 8); // Reset font style\n\n      pdf.setFontStyle('normal'); // Normal font\n\n      pdf.setFontSize(12);\n      pdf.setTextColor(0); // Add review details\n\n      pdf.text(`Review posted by: ${name}`, leftMargin + 5, yPos + 20);\n      pdf.text(`Review posted at: ${createdAt.substring(0, 10)}`, leftMargin + 5, yPos + 30);\n      pdf.text(`Total Likes: ${likeCount}`, leftMargin + 5, yPos + 40);\n      yPos += 50;\n\n      if (yPos + 30 > bottomMargin) {\n        pdf.addPage();\n        yPos = topMargin;\n      }\n    });\n    pdf.save('top_posts.pdf');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"st\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Download as PDF\"), sortedPosts.map((post, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: post._id,\n    className: classes.postContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, index > 0 && /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, index + 1, \". Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, \"Total Likes: \", post.likeCount))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Typography","Button","Container","getTopPosts","useStyles","jsPDF","MESSAGE_MAX_LENGTH","Top5","dispatch","posts","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","containerRef","truncateText","text","length","substring","handleDownload","pdf","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","leftMargin","rightMargin","topMargin","bottomMargin","yPos","setDrawColor","rect","setFontSize","setFont","imageURL","imageWidth","imageHeight","addImage","forEach","post","index","title","name","createdAt","setFillColor","setTextColor","setFontStyle","addPage","save","map","_id","postContainer","divider","reviewTitle","reviewerName","postedAt","reviewMessage","message","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Typography, Button, Container } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport useStyles from './topstyles';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450; // Adjust the maximum length as per your requirement\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n  const handleDownload = () => {\r\n    const pdf = new jsPDF();\r\n    \r\n  \r\n    const pageWidth = pdf.internal.pageSize.getWidth();\r\n    const pageHeight = pdf.internal.pageSize.getHeight();\r\n  \r\n    const leftMargin = 20;\r\n    const rightMargin = pageWidth - leftMargin;\r\n    const topMargin = 20;\r\n    const bottomMargin = pageHeight - topMargin;\r\n  \r\n    let yPos = topMargin;\r\n  \r\n    // Add page border\r\n    pdf.setDrawColor(0); // Black color\r\n    pdf.rect(0, 0, pageWidth, pageHeight, 'S');\r\n  \r\n    // Add heading\r\n    pdf.setFontSize(16);\r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.text('Best 5 Experiences of TourGenie based on the Reviews', leftMargin, yPos);\r\n    yPos += 15;\r\n  \r\n    // Add image\r\n    const imageURL = '/tourgenie.png';\r\n    const imageWidth = 80;\r\n    const imageHeight = 80;\r\n    pdf.addImage(imageURL, 'PNG', leftMargin, yPos, imageWidth, imageHeight);\r\n  \r\n    sortedPosts.forEach((post, index) => {\r\n      if (index !== 0) {\r\n        yPos += 10;\r\n      }\r\n  \r\n      const { title, name, createdAt, likeCount } = post;\r\n  \r\n      // Add border and background color to the post container\r\n      pdf.setFillColor(230);\r\n      pdf.rect(leftMargin, yPos, rightMargin - leftMargin, 40, 'F');\r\n  \r\n      pdf.setFontSize(14);\r\n      pdf.setFont('helvetica', 'normal');\r\n  \r\n      // Add border and background color to the review title\r\n      pdf.setFillColor(200);\r\n      pdf.rect(leftMargin, yPos, rightMargin - leftMargin, 10, 'F');\r\n  \r\n      // Set title style\r\n      pdf.setTextColor(0); // Black color\r\n      pdf.setFontStyle('bold'); // Bold font\r\n  \r\n      // Add review title text\r\n      pdf.text(`${index + 1}. Review Title: ${title}`, leftMargin + 2, yPos + 8);\r\n  \r\n      // Reset font style\r\n      pdf.setFontStyle('normal'); // Normal font\r\n  \r\n      pdf.setFontSize(12);\r\n      pdf.setTextColor(0);\r\n  \r\n      // Add review details\r\n      pdf.text(`Review posted by: ${name}`, leftMargin + 5, yPos + 20);\r\n      pdf.text(`Review posted at: ${createdAt.substring(0, 10)}`, leftMargin + 5, yPos + 30);\r\n      pdf.text(`Total Likes: ${likeCount}`, leftMargin + 5, yPos + 40);\r\n  \r\n      yPos += 50;\r\n      if (yPos + 30 > bottomMargin) {\r\n        pdf.addPage();\r\n        yPos = topMargin;\r\n      }\r\n    });\r\n\r\n    pdf.save('top_posts.pdf');\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <Container maxWidth=\"st\">\r\n      <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleDownload}>\r\n        Download as PDF\r\n      </Button>\r\n\r\n      {sortedPosts.map((post, index) => (\r\n        <div key={post._id} className={classes.postContainer}>\r\n          {index > 0 && <hr className={classes.divider} />}\r\n          <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n            {index + 1}. Review Title: {post.title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n            Review posted by: {post.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n            Review posted at: {post.createdAt.substring(0, 10)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n            Review Message: {truncateText(post.message)}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n            Total Likes: {post.likeCount}\r\n</Typography>\r\n</div>\r\n))}\r\n</Container>\r\n);\r\n\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}