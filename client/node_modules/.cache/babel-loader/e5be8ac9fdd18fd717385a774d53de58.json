{"ast":null,"code":"import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse';\nimport parseUnit from 'postcss-value-parser/lib/unit';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine'; // https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\n\nvar flexDefaults = [1, 1, 0];\nvar flexAuto = [1, 1, 'auto'];\n\nvar expandFlex = function expandFlex(key, value) {\n  var defaults = flexDefaults;\n  var matches = [];\n\n  if (value === 'auto') {\n    defaults = flexAuto;\n  } else {\n    matches = (\"\" + value).split(' ');\n  }\n\n  var flexGrow = matches[0] || defaults[0];\n  var flexShrink = matches[1] || defaults[1];\n  var flexBasis = matches[2] || defaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n/* eslint-disable no-plusplus */\n\n\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\n\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\n\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      expandsTo = _ref.expandsTo,\n      _ref$maxValues = _ref.maxValues,\n      maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n      _ref$autoSupported = _ref.autoSupported,\n      autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n\n  return function (model, value) {\n    var _ref2;\n\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i]; // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value); // when unit isn't specified this condition is true\n\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    } // checks that we have enough parsed values\n\n\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n\n    var first = parts[0];\n\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\n\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\n\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n\n  return value;\n};\n\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n        second = _ref.second,\n        third = _ref.third,\n        fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n        second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n        second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\n\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\n\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\n\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n}; // Transforms shorthand transformOrigin values\n\n\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\n\nvar expandGap = function expandGap(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    rowGap: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    columnGap: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar shorthands = {\n  flex: expandFlex,\n  gap: expandGap,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\n\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n/**\n * Expand the shorthand properties.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\n\n\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n\n  return resolvedStyle;\n};\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\n\n\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\n\n\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\n\n\nvar flatten = compose(mergeStyles, compact, castArray);\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\n\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n\n    case 'mm':\n      return scalar.value * mmFactor;\n\n    case 'cm':\n      return scalar.value * cmFactor;\n\n    case 'vh':\n      return scalar.value * (container.height / 100);\n\n    case 'vw':\n      return scalar.value * (container.width / 100);\n\n    default:\n      return scalar.value;\n  }\n};\n\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\n\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\n\n\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/); // Handle \"initial\", \"inherit\", \"unset\".\n\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n\n  var parsed = [];\n\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n\n    if (transform) {\n      var _transform$split = transform.split('('),\n          name = _transform$split[0],\n          rawValue = _transform$split[1];\n\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n\n  return parsed;\n};\n\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n      angle = _unitsRegexp$exec[1],\n      unit = _unitsRegexp$exec[2];\n\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\n\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n      value = _ref.value;\n\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n          return Number.parseFloat(num);\n        }),\n            scaleX = _value$map[0],\n            _value$map$ = _value$map[1],\n            scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\n\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\n\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\n\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\n\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\n\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value, 10);\n  return value;\n};\n\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n\n    case 'right':\n    case 'bottom':\n      return '100%';\n\n    case 'center':\n      return '50%';\n\n    default:\n      return null;\n  }\n};\n\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\n\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n/**\n * Transform styles values\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\n\n\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n\n    return resolvedStyle;\n  };\n};\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\n\n\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n\n    if (/@media/.test(key)) {\n      var _matchMedia;\n\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\n\n\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n};\n\nexport { resolveStyles as default, flatten, processTransform, transformColor };","map":{"version":3,"sources":["D:/review center/client/node_modules/@react-pdf/stylesheet/lib/index.es.js"],"names":["compose","castArray","parse$1","parseUnit","hlsToHex","colorString","_extends","matchMedia","flexDefaults","flexAuto","expandFlex","key","value","defaults","matches","split","flexGrow","flexShrink","flexBasis","BOX_MODEL_UNITS","logError","style","console","error","repeat","length","expandBoxModel","_temp","_ref","expandsTo","_ref$maxValues","maxValues","_ref$autoSupported","autoSupported","model","_ref2","nodes","parts","i","node","type","push","result","includes","unit","first","second","third","fourth","processMargin","marginTop","marginRight","marginBottom","marginLeft","processMarginVertical","processMarginHorizontal","_ref3","processMarginSingle","BORDER_SHORTHAND_REGEX","matchBorderShorthand","match","expandBorders","color","width","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","processPadding","paddingTop","paddingRight","paddingBottom","paddingLeft","processPaddingVertical","processPaddingHorizontal","processPaddingSingle","expandObjectPosition","objectPositionX","objectPositionY","Y_AXIS_SHORTHANDS","top","bottom","sortTransformOriginPair","a","b","getTransformOriginPair","values","pair","sort","expandTransformOrigin","transformOriginX","transformOriginY","expandGap","rowGap","columnGap","shorthands","flex","gap","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderStyle","borderWidth","objectPosition","transformOrigin","expandStyle","expand","propsArray","Object","keys","resolvedStyle","extended","j","propName","propValue","compact","array","filter","Boolean","mergeStyles","styles","reduce","acc","s","Array","isArray","flatten","forEach","undefined","parseValue","exec","parseFloat","transformUnit","container","scalar","dpi","mmFactor","cmFactor","height","isRgb","test","isHsl","parseRgb","rgb","get","to","hex","parseHsl","hsl","map","Math","round","apply","toUpperCase","transformColor","parse","transformString","transforms","trim","parsed","transform","_transform$split","name","rawValue","splitChar","indexOf","val","operation","parseAngle","unitsRegexp","_unitsRegexp$exec","angle","number","Number","PI","normalizeTransformOperation","_value$map","num","scaleX","_value$map$","scaleY","normalize","operations","processTransform","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","processFontWeight","lv","toLowerCase","matchNumber","castFloat","offsetKeyword","transformObjectPosition","transformTransformOrigin","handlers","fontWeight","transformStyle","transformed","resolveMediaQueries","_extends2","_matchMedia","resolveStyles","computeMediaQueries","default"],"mappings":"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","sourcesContent":["import { compose, castArray } from '@react-pdf/fns';\nimport parse$1 from 'postcss-value-parser/lib/parse';\nimport parseUnit from 'postcss-value-parser/lib/unit';\nimport hlsToHex from 'hsl-to-hex';\nimport colorString from 'color-string';\nimport _extends from '@babel/runtime/helpers/extends';\nimport matchMedia from 'media-engine';\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/flex#values\n\n// TODO: change flex defaults to [0, 1, 'auto'] as in spec in next major release\nvar flexDefaults = [1, 1, 0];\nvar flexAuto = [1, 1, 'auto'];\nvar expandFlex = function expandFlex(key, value) {\n  var defaults = flexDefaults;\n  var matches = [];\n  if (value === 'auto') {\n    defaults = flexAuto;\n  } else {\n    matches = (\"\" + value).split(' ');\n  }\n  var flexGrow = matches[0] || defaults[0];\n  var flexShrink = matches[1] || defaults[1];\n  var flexBasis = matches[2] || defaults[2];\n  return {\n    flexGrow: flexGrow,\n    flexShrink: flexShrink,\n    flexBasis: flexBasis\n  };\n};\n\n/* eslint-disable no-plusplus */\nvar BOX_MODEL_UNITS = 'px,in,mm,cm,pt,%,vw,vh';\nvar logError = function logError(style, value) {\n  console.error(\"\\n    @react-pdf/stylesheet parsing error:\\n\\n    \" + style + \": \" + value + \",\\n    \" + ' '.repeat(style.length + 2) + \"^\\n    Unsupported \" + style + \" value format\\n  \");\n};\nvar expandBoxModel = function expandBoxModel(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    expandsTo = _ref.expandsTo,\n    _ref$maxValues = _ref.maxValues,\n    maxValues = _ref$maxValues === void 0 ? 1 : _ref$maxValues,\n    _ref$autoSupported = _ref.autoSupported,\n    autoSupported = _ref$autoSupported === void 0 ? false : _ref$autoSupported;\n  return function (model, value) {\n    var _ref2;\n    var nodes = parse$1(\"\" + value);\n    var parts = [];\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n\n      // value contains `calc`, `url` or other css function\n      // `,`, `/` or strings that unsupported by margin and padding\n      if (node.type === 'function' || node.type === 'string' || node.type === 'div') {\n        logError(model, value);\n        return {};\n      }\n      if (node.type === 'word') {\n        if (node.value === 'auto' && autoSupported) {\n          parts.push(node.value);\n        } else {\n          var result = parseUnit(node.value);\n\n          // when unit isn't specified this condition is true\n          if (result && BOX_MODEL_UNITS.includes(result.unit)) {\n            parts.push(node.value);\n          } else {\n            logError(model, value);\n            return {};\n          }\n        }\n      }\n    }\n\n    // checks that we have enough parsed values\n    if (parts.length > maxValues) {\n      logError(model, value);\n      return {};\n    }\n    var first = parts[0];\n    if (expandsTo) {\n      var second = parts[1] || parts[0];\n      var third = parts[2] || parts[0];\n      var fourth = parts[3] || parts[1] || parts[0];\n      return expandsTo({\n        first: first,\n        second: second,\n        third: third,\n        fourth: fourth\n      });\n    }\n    return _ref2 = {}, _ref2[model] = first, _ref2;\n  };\n};\n\nvar processMargin = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      marginTop: first,\n      marginRight: second,\n      marginBottom: third,\n      marginLeft: fourth\n    };\n  },\n  maxValues: 4,\n  autoSupported: true\n});\nvar processMarginVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      marginTop: first,\n      marginBottom: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      marginRight: first,\n      marginLeft: second\n    };\n  },\n  maxValues: 2,\n  autoSupported: true\n});\nvar processMarginSingle = expandBoxModel({\n  autoSupported: true\n});\n\nvar BORDER_SHORTHAND_REGEX = /(-?\\d+(\\.\\d+)?(px|in|mm|cm|pt|vw|vh|px)?)\\s(\\S+)\\s(.+)/;\nvar matchBorderShorthand = function matchBorderShorthand(value) {\n  return value.match(BORDER_SHORTHAND_REGEX) || [];\n};\nvar expandBorders = function expandBorders(key, value) {\n  var match = matchBorderShorthand(\"\" + value);\n  if (match) {\n    var color = match[5] || value;\n    var style = match[4] || value;\n    var width = match[1] || value;\n    if (key.match(/(Top|Right|Bottom|Left)$/)) {\n      var _ref;\n      return _ref = {}, _ref[key + \"Color\"] = color, _ref[key + \"Style\"] = style, _ref[key + \"Width\"] = width, _ref;\n    }\n    if (key.match(/Color$/)) {\n      return {\n        borderTopColor: color,\n        borderRightColor: color,\n        borderBottomColor: color,\n        borderLeftColor: color\n      };\n    }\n    if (key.match(/Style$/)) {\n      return {\n        borderTopStyle: style,\n        borderRightStyle: style,\n        borderBottomStyle: style,\n        borderLeftStyle: style\n      };\n    }\n    if (key.match(/Width$/)) {\n      return {\n        borderTopWidth: width,\n        borderRightWidth: width,\n        borderBottomWidth: width,\n        borderLeftWidth: width\n      };\n    }\n    if (key.match(/Radius$/)) {\n      return {\n        borderTopLeftRadius: value,\n        borderTopRightRadius: value,\n        borderBottomRightRadius: value,\n        borderBottomLeftRadius: value\n      };\n    }\n    return {\n      borderTopColor: color,\n      borderTopStyle: style,\n      borderTopWidth: width,\n      borderRightColor: color,\n      borderRightStyle: style,\n      borderRightWidth: width,\n      borderBottomColor: color,\n      borderBottomStyle: style,\n      borderBottomWidth: width,\n      borderLeftColor: color,\n      borderLeftStyle: style,\n      borderLeftWidth: width\n    };\n  }\n  return value;\n};\n\nvar processPadding = expandBoxModel({\n  expandsTo: function expandsTo(_ref) {\n    var first = _ref.first,\n      second = _ref.second,\n      third = _ref.third,\n      fourth = _ref.fourth;\n    return {\n      paddingTop: first,\n      paddingRight: second,\n      paddingBottom: third,\n      paddingLeft: fourth\n    };\n  },\n  maxValues: 4\n});\nvar processPaddingVertical = expandBoxModel({\n  expandsTo: function expandsTo(_ref2) {\n    var first = _ref2.first,\n      second = _ref2.second;\n    return {\n      paddingTop: first,\n      paddingBottom: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingHorizontal = expandBoxModel({\n  expandsTo: function expandsTo(_ref3) {\n    var first = _ref3.first,\n      second = _ref3.second;\n    return {\n      paddingRight: first,\n      paddingLeft: second\n    };\n  },\n  maxValues: 2\n});\nvar processPaddingSingle = expandBoxModel();\n\nvar expandObjectPosition = function expandObjectPosition(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    objectPositionX: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    objectPositionY: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar Y_AXIS_SHORTHANDS = {\n  top: true,\n  bottom: true\n};\nvar sortTransformOriginPair = function sortTransformOriginPair(a, b) {\n  if (Y_AXIS_SHORTHANDS[a]) return 1;\n  if (Y_AXIS_SHORTHANDS[b]) return -1;\n  return 0;\n};\nvar getTransformOriginPair = function getTransformOriginPair(values) {\n  if (!values || values.length === 0) return ['center', 'center'];\n  var pair = values.length === 1 ? [values[0], 'center'] : values;\n  return pair.sort(sortTransformOriginPair);\n};\n\n// Transforms shorthand transformOrigin values\nvar expandTransformOrigin = function expandTransformOrigin(key, value) {\n  var match = (\"\" + value).split(' ');\n  var pair = getTransformOriginPair(match);\n  return {\n    transformOriginX: pair[0],\n    transformOriginY: pair[1]\n  };\n};\n\nvar expandGap = function expandGap(key, value) {\n  var match = (\"\" + value).split(' ');\n  return {\n    rowGap: (match === null || match === void 0 ? void 0 : match[0]) || value,\n    columnGap: (match === null || match === void 0 ? void 0 : match[1]) || value\n  };\n};\n\nvar shorthands = {\n  flex: expandFlex,\n  gap: expandGap,\n  margin: processMargin,\n  marginHorizontal: processMarginHorizontal,\n  marginVertical: processMarginVertical,\n  marginTop: processMarginSingle,\n  marginRight: processMarginSingle,\n  marginBottom: processMarginSingle,\n  marginLeft: processMarginSingle,\n  padding: processPadding,\n  paddingHorizontal: processPaddingHorizontal,\n  paddingVertical: processPaddingVertical,\n  paddingTop: processPaddingSingle,\n  paddingRight: processPaddingSingle,\n  paddingBottom: processPaddingSingle,\n  paddingLeft: processPaddingSingle,\n  border: expandBorders,\n  borderTop: expandBorders,\n  borderRight: expandBorders,\n  borderBottom: expandBorders,\n  borderLeft: expandBorders,\n  borderColor: expandBorders,\n  borderRadius: expandBorders,\n  borderStyle: expandBorders,\n  borderWidth: expandBorders,\n  objectPosition: expandObjectPosition,\n  transformOrigin: expandTransformOrigin\n};\n\n/**\n * Transforms style key-value\n *\n * @param {String} key style key\n * @param {String} value style value\n * @returns {String | Number} transformed style values\n */\nvar expandStyle = function expandStyle(key, value) {\n  var _ref;\n  return shorthands[key] ? shorthands[key](key, value) : (_ref = {}, _ref[key] = value, _ref);\n};\n\n/**\n * Expand the shorthand properties.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nvar expand = function expand(style) {\n  if (!style) return style;\n  var propsArray = Object.keys(style);\n  var resolvedStyle = {};\n  for (var i = 0; i < propsArray.length; i += 1) {\n    var key = propsArray[i];\n    var value = style[key];\n    var extended = expandStyle(key, value);\n    var keys = Object.keys(extended);\n    for (var j = 0; j < keys.length; j += 1) {\n      var propName = keys[j];\n      var propValue = extended[propName];\n      resolvedStyle[propName] = propValue;\n    }\n  }\n  return resolvedStyle;\n};\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nvar compact = function compact(array) {\n  return array.filter(Boolean);\n};\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nvar mergeStyles = function mergeStyles(styles) {\n  return styles.reduce(function (acc, style) {\n    var s = Array.isArray(style) ? flatten(style) : style;\n    Object.keys(s).forEach(function (key) {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n    return acc;\n  }, {});\n};\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nvar flatten = compose(mergeStyles, compact, castArray);\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nvar parseValue = function parseValue(value) {\n  var match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw|px)?$/g.exec(value);\n  return match ? {\n    value: parseFloat(match[1], 10),\n    unit: match[2] || 'pt'\n  } : {\n    value: value,\n    unit: undefined\n  };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nvar transformUnit = function transformUnit(container, value) {\n  var scalar = parseValue(value);\n  var dpi = container.dpi || 72;\n  var mmFactor = 1 / 25.4 * dpi;\n  var cmFactor = 1 / 2.54 * dpi;\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * dpi;\n    case 'mm':\n      return scalar.value * mmFactor;\n    case 'cm':\n      return scalar.value * cmFactor;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n};\n\nvar isRgb = function isRgb(value) {\n  return /rgba?/g.test(value);\n};\nvar isHsl = function isHsl(value) {\n  return /hsla?/g.test(value);\n};\n\n/**\n * Transform rgb color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nvar parseRgb = function parseRgb(value) {\n  var rgb = colorString.get.rgb(value);\n  return colorString.to.hex(rgb);\n};\n\n/**\n * Transform Hsl color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nvar parseHsl = function parseHsl(value) {\n  var hsl = colorString.get.hsl(value).map(Math.round);\n  var hex = hlsToHex.apply(void 0, hsl);\n  return hex.toUpperCase();\n};\n\n/**\n * Transform given color to hexa\n *\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nvar transformColor = function transformColor(value) {\n  if (isRgb(value)) return parseRgb(value);\n  if (isHsl(value)) return parseHsl(value);\n  return value;\n};\n\nvar parse = function parse(transformString) {\n  var transforms = transformString.trim().split(/\\) |\\)/);\n\n  // Handle \"initial\", \"inherit\", \"unset\".\n  if (transforms.length === 1) {\n    return [[transforms[0], true]];\n  }\n  var parsed = [];\n  for (var i = 0; i < transforms.length; i += 1) {\n    var transform = transforms[i];\n    if (transform) {\n      var _transform$split = transform.split('('),\n        name = _transform$split[0],\n        rawValue = _transform$split[1];\n      var splitChar = rawValue.indexOf(',') >= 0 ? ',' : ' ';\n      var value = rawValue.split(splitChar).map(function (val) {\n        return val.trim();\n      });\n      parsed.push({\n        operation: name,\n        value: value\n      });\n    }\n  }\n  return parsed;\n};\nvar parseAngle = function parseAngle(value) {\n  var unitsRegexp = /(-?\\d*\\.?\\d*)(\\w*)?/i;\n  var _unitsRegexp$exec = unitsRegexp.exec(value),\n    angle = _unitsRegexp$exec[1],\n    unit = _unitsRegexp$exec[2];\n  var number = Number.parseFloat(angle);\n  return unit === 'rad' ? number * 180 / Math.PI : number;\n};\nvar normalizeTransformOperation = function normalizeTransformOperation(_ref) {\n  var operation = _ref.operation,\n    value = _ref.value;\n  switch (operation) {\n    case 'scale':\n      {\n        var _value$map = value.map(function (num) {\n            return Number.parseFloat(num);\n          }),\n          scaleX = _value$map[0],\n          _value$map$ = _value$map[1],\n          scaleY = _value$map$ === void 0 ? scaleX : _value$map$;\n        return {\n          operation: 'scale',\n          value: [scaleX, scaleY]\n        };\n      }\n    case 'scaleX':\n      {\n        return {\n          operation: 'scale',\n          value: [Number.parseFloat(value), 1]\n        };\n      }\n    case 'scaleY':\n      {\n        return {\n          operation: 'scale',\n          value: [1, Number.parseFloat(value)]\n        };\n      }\n    case 'rotate':\n      {\n        return {\n          operation: 'rotate',\n          value: [parseAngle(value)]\n        };\n      }\n    case 'translate':\n      {\n        return {\n          operation: 'translate',\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n    case 'translateX':\n      {\n        return {\n          operation: 'translate',\n          value: [Number.parseFloat(value), 0]\n        };\n      }\n    case 'translateY':\n      {\n        return {\n          operation: 'translate',\n          value: [0, Number.parseFloat(value)]\n        };\n      }\n    case 'skew':\n      {\n        return {\n          operation: 'skew',\n          value: value.map(parseAngle)\n        };\n      }\n    case 'skewX':\n      {\n        return {\n          operation: 'skew',\n          value: [parseAngle(value), 0]\n        };\n      }\n    case 'skewY':\n      {\n        return {\n          operation: 'skew',\n          value: [0, parseAngle(value)]\n        };\n      }\n    default:\n      {\n        return {\n          operation: operation,\n          value: value.map(function (num) {\n            return Number.parseFloat(num);\n          })\n        };\n      }\n  }\n};\nvar normalize = function normalize(operations) {\n  return operations.map(function (operation) {\n    return normalizeTransformOperation(operation);\n  });\n};\nvar processTransform = function processTransform(value) {\n  if (typeof value !== 'string') return value;\n  return normalize(parse(value));\n};\n\nvar FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900\n};\nvar processFontWeight = function processFontWeight(value) {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  var lv = value.toLowerCase();\n  if (FONT_WEIGHTS[lv]) return FONT_WEIGHTS[lv];\n  return value;\n};\n\nvar matchNumber = function matchNumber(value) {\n  return typeof value === 'string' && /^-?\\d*\\.?\\d*$/.test(value);\n};\nvar castFloat = function castFloat(value) {\n  if (typeof value !== 'string') return value;\n  if (matchNumber(value)) return parseFloat(value, 10);\n  return value;\n};\n\nvar offsetKeyword = function offsetKeyword(value) {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return null;\n  }\n};\n\nvar transformObjectPosition = function transformObjectPosition(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar transformTransformOrigin = function transformTransformOrigin(value) {\n  return offsetKeyword(value) || castFloat(value);\n};\n\nvar handlers = {\n  transform: processTransform,\n  fontWeight: processFontWeight,\n  objectPositionX: transformObjectPosition,\n  objectPositionY: transformObjectPosition,\n  transformOriginX: transformTransformOrigin,\n  transformOriginY: transformTransformOrigin\n};\nvar transformStyle = function transformStyle(key, value, container) {\n  var result = handlers[key] ? handlers[key](value) : value;\n  return transformColor(transformUnit(container, castFloat(result)));\n};\n\n/**\n * Transform styles values\n *\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nvar transform = function transform(container) {\n  return function (style) {\n    if (!style) return style;\n    var propsArray = Object.keys(style);\n    var resolvedStyle = {};\n    for (var i = 0; i < propsArray.length; i += 1) {\n      var key = propsArray[i];\n      var value = style[key];\n      var transformed = transformStyle(key, value, container);\n      resolvedStyle[key] = transformed;\n    }\n    return resolvedStyle;\n  };\n};\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nvar resolveMediaQueries = function resolveMediaQueries(container, styles) {\n  return Object.keys(styles).reduce(function (acc, key) {\n    var _extends2;\n    if (/@media/.test(key)) {\n      var _matchMedia;\n      return _extends({}, acc, matchMedia((_matchMedia = {}, _matchMedia[key] = styles[key], _matchMedia), container));\n    }\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = styles[key], _extends2));\n  }, {});\n};\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nvar resolveStyles = function resolveStyles(container, style) {\n  var computeMediaQueries = function computeMediaQueries(value) {\n    return resolveMediaQueries(container, value);\n  };\n  return compose(transform(container), expand, computeMediaQueries, flatten)(style);\n};\n\nexport { resolveStyles as default, flatten, processTransform, transformColor };\n"]},"metadata":{},"sourceType":"module"}