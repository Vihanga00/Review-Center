{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Post\\\\Post.js\";\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  var _user$result, _user$result2, _user$result3;\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [likes, setLikes] = useState(post === null || post === void 0 ? void 0 : post.likes);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const userId = (user === null || user === void 0 ? void 0 : user.result.googleId) || (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id);\n  const hasLikedPost = post.likes && post.likes.find(like => like === userId);\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      setLikes(post.likes.filter(id => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find(like => like === userId) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), \"\\xA0\", likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }), \"\\xA0\", likes.length, \" \", likes.length === 1 ? 'Like' : 'Likes');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), \"\\xA0Like\");\n  };\n\n  const openPost = e => {\n    e.stopPropagation();\n    history.push(`/posts/${post._id}`);\n  };\n\n  const updatePost = e => {\n    e.stopPropagation();\n    setCurrentId(post._id);\n    dispatch(openModal());\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    component: \"span\",\n    name: \"test\",\n    className: classes.cardAction,\n    onClick: openPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    title: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, moment(post.createdAt).fromNow())), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, post.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, post.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, post.message.split(' ').splice(0, 20).join(' '), \"...\"))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: !(user === null || user === void 0 ? void 0 : user.result),\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Likes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), ((user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.googleId) === (post === null || post === void 0 ? void 0 : post.creator) || (user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3._id) === (post === null || post === void 0 ? void 0 : post.creator)) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: handleEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }), \"\\xA0Edit\"), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(post._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), \"\\xA0Delete\"))));\n};\n\nexport default Post;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Post/Post.js"],"names":["React","useState","Card","CardActions","CardContent","CardMedia","Button","Typography","ButtonBase","ThumbUpAltIcon","DeleteIcon","MoreHorizIcon","ThumbUpAltOutlined","useDispatch","moment","useHistory","EditIcon","likePost","deletePost","useStyles","Post","post","setCurrentId","user","JSON","parse","localStorage","getItem","likes","setLikes","dispatch","history","classes","userId","result","googleId","_id","hasLikedPost","find","like","handleLike","filter","id","Likes","length","openPost","e","stopPropagation","push","updatePost","openModal","card","cardAction","media","selectedFile","title","overlay","name","createdAt","fromNow","details","tags","map","tag","message","split","splice","join","cardActions","creator","handleEdit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport { likePost, deletePost } from '../../../actions/posts';\n\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId }) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [likes, setLikes] = useState(post?.likes);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const userId = user?.result.googleId || user?.result?._id;\n  const hasLikedPost = post.likes && post.likes.find((like) => like === userId);\n\n  const handleLike = async () => {\n    dispatch(likePost(post._id));\n\n    if (hasLikedPost) {\n      setLikes(post.likes.filter((id) => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find((like) => like === userId) ? (\n        <>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;\n          {likes.length} {likes.length === 1 ? 'Like' : 'Likes'}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  const openPost = (e) => {\n    e.stopPropagation();\n    history.push(`/posts/${post._id}`);\n  };\n\n  const updatePost = (e) => {\n    e.stopPropagation();\n    setCurrentId(post._id);\n    dispatch(openModal());\n  };\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      <ButtonBase component=\"span\" name=\"test\" className={classes.cardAction} onClick={openPost}>\n        <CardMedia\n          className={classes.media}\n          image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\n          title={post.title}\n        />\n        <div className={classes.overlay}>\n          <Typography variant=\"h6\">{post.name}</Typography>\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n        </div>\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\n          {post.title}\n        </Typography>\n        <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {post.message.split(' ').splice(0, 20).join(' ')}...\n          </Typography>\n        </CardContent>\n      </ButtonBase>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\n          <Likes />\n        </Button>\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\n          <>\n            <Button size=\"small\" color=\"primary\" onClick={handleEdit}>\n              <EditIcon fontSize=\"small\" />\n              &nbsp;Edit\n            </Button>\n            <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n              <DeleteIcon fontSize=\"small\" />\n              &nbsp;Delete\n            </Button>\n          </>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n\n"]},"metadata":{},"sourceType":"module"}