{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Typography, Button, Container } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport useStyles from './topstyles';\nimport jsPDF from 'jspdf';\nconst MESSAGE_MAX_LENGTH = 450; // Adjust the maximum length as per your requirement\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  const handleDownload = () => {\n    const pdf = new jsPDF('p', 'pt', 'a4');\n    const pageHeight = pdf.internal.pageSize.height;\n    const pageWidth = pdf.internal.pageSize.width;\n    let yPos = 50;\n    const margin = 40;\n    const contentWidth = pageWidth - 2 * margin; // Heading text\n\n    pdf.setFontSize(18);\n    pdf.setFont('helvetica', 'bold');\n    pdf.setTextColor('#000');\n    pdf.text('Best 5 Experiences to have with TourGenie according to the Customer Reviews', margin, yPos, {\n      width: contentWidth,\n      align: 'center'\n    });\n    yPos += 40;\n    sortedPosts.forEach((post, index) => {\n      if (index !== 0) {\n        yPos += 10;\n      }\n\n      const {\n        title,\n        name,\n        createdAt,\n        message,\n        likeCount\n      } = post;\n      pdf.setFontSize(14);\n      pdf.setFont('helvetica', 'normal');\n      pdf.setTextColor('#000');\n      pdf.text(`${index + 1}. Review Title: ${title}`, margin, yPos, {\n        width: contentWidth\n      });\n      pdf.setFontSize(12);\n      pdf.text(`Review posted by: ${name}`, margin, yPos + 20, {\n        width: contentWidth\n      });\n      pdf.text(`Review posted at: ${createdAt.substring(0, 10)}`, margin, yPos + 40, {\n        width: contentWidth\n      });\n      pdf.text(`Review Message: ${truncateText(message)}`, margin, yPos + 60, {\n        width: contentWidth\n      });\n      pdf.text(`Total Likes: ${likeCount}`, margin, yPos + 80, {\n        width: contentWidth\n      });\n      yPos += 120;\n    });\n    pdf.save('top_posts.pdf');\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"st\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Download as PDF\"), sortedPosts.map((post, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: post._id,\n    className: classes.postContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, index > 0 && /*#__PURE__*/React.createElement(\"hr\", {\n    className: classes.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, index + 1, \". Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Total Likes: \", post.likeCount))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Typography","Button","Container","getTopPosts","useStyles","jsPDF","MESSAGE_MAX_LENGTH","Top5","dispatch","posts","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","containerRef","truncateText","text","length","substring","handleDownload","pdf","pageHeight","internal","pageSize","height","pageWidth","width","yPos","margin","contentWidth","setFontSize","setFont","setTextColor","align","forEach","post","index","title","name","createdAt","message","save","map","_id","postContainer","divider","reviewTitle","reviewerName","postedAt","reviewMessage","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Typography, Button, Container } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport useStyles from './topstyles';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450; // Adjust the maximum length as per your requirement\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n  const handleDownload = () => {\r\n    const pdf = new jsPDF('p', 'pt', 'a4');\r\n  \r\n    const pageHeight = pdf.internal.pageSize.height;\r\n    const pageWidth = pdf.internal.pageSize.width;\r\n  \r\n    let yPos = 50;\r\n    const margin = 40;\r\n    const contentWidth = pageWidth - 2 * margin;\r\n  \r\n    // Heading text\r\n    pdf.setFontSize(18);\r\n    pdf.setFont('helvetica', 'bold');\r\n    pdf.setTextColor('#000');\r\n    pdf.text('Best 5 Experiences to have with TourGenie according to the Customer Reviews', margin, yPos, { width: contentWidth, align: 'center' });\r\n  \r\n    yPos += 40;\r\n  \r\n    sortedPosts.forEach((post, index) => {\r\n      if (index !== 0) {\r\n        yPos += 10;\r\n      }\r\n  \r\n      const { title, name, createdAt, message, likeCount } = post;\r\n  \r\n      pdf.setFontSize(14);\r\n      pdf.setFont('helvetica', 'normal');\r\n      pdf.setTextColor('#000');\r\n      pdf.text(`${index + 1}. Review Title: ${title}`, margin, yPos, { width: contentWidth });\r\n      pdf.setFontSize(12);\r\n      pdf.text(`Review posted by: ${name}`, margin, yPos + 20, { width: contentWidth });\r\n      pdf.text(`Review posted at: ${createdAt.substring(0, 10)}`, margin, yPos + 40, { width: contentWidth });\r\n      pdf.text(`Review Message: ${truncateText(message)}`, margin, yPos + 60, { width: contentWidth });\r\n      pdf.text(`Total Likes: ${likeCount}`, margin, yPos + 80, { width: contentWidth });\r\n  \r\n      yPos += 120;\r\n    });\r\n  \r\n    pdf.save('top_posts.pdf');\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Container maxWidth=\"st\">\r\n      <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={handleDownload}>\r\n        Download as PDF\r\n      </Button>\r\n\r\n      {sortedPosts.map((post, index) => (\r\n        <div key={post._id} className={classes.postContainer}>\r\n          {index > 0 && <hr className={classes.divider} />}\r\n          <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n            {index + 1}. Review Title: {post.title}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n            Review posted by: {post.name}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n            Review posted at: {post.createdAt.substring(0, 10)}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n            Review Message: {truncateText(post.message)}\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n            Total Likes: {post.likeCount}\r\n</Typography>\r\n</div>\r\n))}\r\n</Container>\r\n);\r\n\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}