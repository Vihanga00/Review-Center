{"ast":null,"code":"import { GET_TOP_POSTS, GET_TOP_POSTS_SUCCESS, GET_TOP_POSTS_FAILURE } from '../constants/actionTypes';\nimport * as api from '../api/index';\nexport const getTopPosts = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsByCreator = name => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsByCreator(name);\n    dispatch({\n      type: FETCH_BY_CREATOR,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/review center/client/src/actions/getTopPosts.js"],"names":["GET_TOP_POSTS","GET_TOP_POSTS_SUCCESS","GET_TOP_POSTS_FAILURE","api","getTopPosts","id","dispatch","type","START_LOADING","data","fetchPost","FETCH_POST","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","FETCH_ALL","END_LOADING","getPostsByCreator","name","fetchPostsByCreator","FETCH_BY_CREATOR"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,qBAAxB,EAA+CC,qBAA/C,QAA4E,0BAA5E;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AAIA,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMN,GAAG,CAACO,SAAJ,CAAcL,EAAd,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEI,UAAR;AAAoBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEJ;AAAR;AAA7B,KAAD,CAAR;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAF;AAAQU,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAAR,QAAiD,MAAMjB,GAAG,CAACkB,UAAJ,CAAeH,IAAf,CAA7D;AAEAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEe,SAAR;AAAmBV,MAAAA,OAAO,EAAE;AAAEH,QAAAA,IAAF;AAAQU,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAA5B,KAAD,CAAR;AACAd,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEgB;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOT,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMU,iBAAiB,GAAIC,IAAD,IAAU,MAAOnB,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC;AAAR,KAAD,CAAR;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAR,QAAqB,MAAMN,GAAG,CAACuB,mBAAJ,CAAwBD,IAAxB,CAAjC;AAEAnB,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEoB,gBAAR;AAA0Bf,MAAAA,OAAO,EAAE;AAAEH,QAAAA;AAAF;AAAnC,KAAD,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEgB;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOT,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM","sourcesContent":["import { GET_TOP_POSTS, GET_TOP_POSTS_SUCCESS, GET_TOP_POSTS_FAILURE } from '../constants/actionTypes';\r\nimport * as api from '../api/index';\r\n\r\n\r\n\r\nexport const getTopPosts = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsByCreator = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsByCreator(name);\r\n\r\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}