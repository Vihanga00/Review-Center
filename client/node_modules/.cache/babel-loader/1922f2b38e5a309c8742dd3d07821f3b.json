{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\api\\\\index.js\";\nimport axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsByCreator = name => API.get(`/posts/creator?name=${name}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, {\n  value\n});\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\nconst store = createStore(reducers, {}, compose(applyMiddleware(thunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"sources":["D:/review center/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsByCreator","name","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","comment","value","updatePost","updatedPost","deletePost","delete","React","ReactDOM","Provider","createStore","applyMiddleware","compose","thunk","reducers","App","store","render","document","getElementById","signIn","formData","signUp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AAEAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCF,IAAAA,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;AACD;;AAED,SAAOP,GAAP;AACD,CAND;AAQA,OAAO,MAAMQ,SAAS,GAAIC,EAAD,IAAQf,GAAG,CAACgB,GAAJ,CAAS,UAASD,EAAG,EAArB,CAA1B;AACP,OAAO,MAAME,UAAU,GAAIC,IAAD,IAAUlB,GAAG,CAACgB,GAAJ,CAAS,eAAcE,IAAK,EAA5B,CAA7B;AACP,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,IAAUpB,GAAG,CAACgB,GAAJ,CAAS,uBAAsBI,IAAK,EAApC,CAAtC;AACP,OAAO,MAAMC,kBAAkB,GAAIC,WAAD,IAAiBtB,GAAG,CAACgB,GAAJ,CAAS,6BAA4BM,WAAW,CAACC,MAAZ,IAAsB,MAAO,SAAQD,WAAW,CAACE,IAAK,EAA3F,CAA5C;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAa1B,GAAG,CAAC2B,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAIb,EAAD,IAAQf,GAAG,CAAC6B,KAAJ,CAAW,UAASd,EAAG,WAAvB,CAAzB;AACP,OAAO,MAAMe,OAAO,GAAG,CAACC,KAAD,EAAQhB,EAAR,KAAef,GAAG,CAAC2B,IAAJ,CAAU,UAASZ,EAAG,cAAtB,EAAqC;AAAEgB,EAAAA;AAAF,CAArC,CAA/B;AACP,OAAO,MAAMC,UAAU,GAAG,CAACjB,EAAD,EAAKkB,WAAL,KAAqBjC,GAAG,CAAC6B,KAAJ,CAAW,UAASd,EAAG,EAAvB,EAA0BkB,WAA1B,CAAxC;AACP,OAAO,MAAMC,UAAU,GAAInB,EAAD,IAAQf,GAAG,CAACmC,MAAJ,CAAY,UAASpB,EAAG,EAAxB,CAA3B;AACP,OAAOqB,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AAEA,MAAMC,KAAK,GAAGN,WAAW,CAACI,QAAD,EAAW,EAAX,EAAeF,OAAO,CAACD,eAAe,CAACE,KAAD,CAAhB,CAAtB,CAAzB;AAEAL,QAAQ,CAACS,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOA,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAclD,GAAG,CAAC2B,IAAJ,CAAS,cAAT,EAAyBuB,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAclD,GAAG,CAAC2B,IAAJ,CAAS,cAAT,EAAyBuB,QAAzB,CAA7B","sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsByCreator = (name) => API.get(`/posts/creator?name=${name}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, {}, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n"]},"metadata":{},"sourceType":"module"}