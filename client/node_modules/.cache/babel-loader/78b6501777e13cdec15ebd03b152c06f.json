{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\Top5.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\nimport { getTopPosts } from '../../actions/getTopPosts';\nimport useStyles from './topstyles';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf';\nconst MESSAGE_MAX_LENGTH = 450;\n\nconst Top5 = () => {\n  const dispatch = useDispatch();\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\n  const classes = useStyles();\n  const containerRef = useRef(null);\n  useEffect(() => {\n    dispatch(getTopPosts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  const truncateText = text => {\n    if (text.length <= MESSAGE_MAX_LENGTH) {\n      return text;\n    }\n\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\n  };\n\n  const handleDownload = () => {\n    const container = containerRef.current; // Create a new div to hold the PDF content\n\n    const pdfContent = document.createElement('div');\n    pdfContent.style.backgroundColor = '#f5f5f5'; // Set background color (optional)\n\n    pdfContent.style.padding = '20px'; // Set padding (optional)\n    // Iterate over the sorted posts and create a PDF card for each post\n\n    sortedPosts.forEach(post => {\n      const card = document.createElement('div');\n      card.style.marginBottom = '20px'; // Adjust margin between cards (optional)\n\n      const title = document.createElement('h2');\n      title.textContent = `Review Title: ${post.title}`;\n      card.appendChild(title);\n      const name = document.createElement('p');\n      name.textContent = `Review posted by: ${post.name}`;\n      card.appendChild(name);\n      const createdAt = document.createElement('p');\n      createdAt.textContent = `Review posted at: ${post.createdAt.substring(0, 10)}`;\n      card.appendChild(createdAt);\n      const message = document.createElement('p');\n      message.textContent = `Review Message: ${truncateText(post.message)}`;\n      card.appendChild(message);\n      const likeCount = document.createElement('p');\n      likeCount.textContent = `Total Likes: ${post.likeCount}`;\n      card.appendChild(likeCount);\n      pdfContent.appendChild(card);\n    }); // Generate the PDF from the styled content\n\n    html2canvas(pdfContent).then(canvas => {\n      const imgData = canvas.toDataURL('image/png');\n      const pdf = new jsPDF();\n      const imgProps = pdf.getImageProperties(imgData);\n      const pdfWidth = pdf.internal.pageSize.getWidth();\n      const pdfHeight = imgProps.height * pdfWidth / imgProps.width;\n      pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\n      pdf.save('top_posts.pdf');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Best 5 Experiences to have with TourGenie according to the Customer Reviews\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDownload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Download as PDF\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    ref: containerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, sortedPosts.map(post => /*#__PURE__*/React.createElement(Grid, {\n    key: post._id,\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    className: classes.reviewTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Review Title: \", post.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    color: \"textSecondary\",\n    className: classes.reviewerName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Review posted by: \", post.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.postedAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Review posted at: \", post.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    className: classes.reviewMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Review Message: \", truncateText(post.message)), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    color: \"textSecondary\",\n    className: classes.totalLikes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Total Likes: \", post.likeCount)))))));\n};\n\nexport default Top5;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/Top5.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","CircularProgress","Grid","Card","CardContent","Typography","getTopPosts","useStyles","html2canvas","jsPDF","MESSAGE_MAX_LENGTH","Top5","dispatch","posts","isLoading","state","sortedPosts","sort","a","b","likeCount","classes","containerRef","truncateText","text","length","substring","handleDownload","container","current","pdfContent","document","createElement","style","backgroundColor","padding","forEach","post","card","marginBottom","title","textContent","appendChild","name","createdAt","message","then","canvas","imgData","toDataURL","pdf","imgProps","getImageProperties","pdfWidth","internal","pageSize","getWidth","pdfHeight","height","width","addImage","save","map","_id","reviewTitle","reviewerName","postedAt","reviewMessage","totalLikes"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CircularProgress, Grid, Card, CardContent, Typography } from '@material-ui/core';\r\nimport { getTopPosts } from '../../actions/getTopPosts';\r\nimport useStyles from './topstyles';\r\nimport html2canvas from 'html2canvas';\r\nimport jsPDF from 'jspdf';\r\n\r\nconst MESSAGE_MAX_LENGTH = 450;\r\n\r\nconst Top5 = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const sortedPosts = [...posts].sort((a, b) => b.likeCount - a.likeCount);\r\n  const classes = useStyles();\r\n  const containerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopPosts());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Grid container justify=\"center\" alignItems=\"center\">\r\n        <CircularProgress />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  const truncateText = (text) => {\r\n    if (text.length <= MESSAGE_MAX_LENGTH) {\r\n      return text;\r\n    }\r\n    return `${text.substring(0, MESSAGE_MAX_LENGTH)}...`;\r\n  };\r\n\r\n  const handleDownload = () => {\r\n  const container = containerRef.current;\r\n\r\n  // Create a new div to hold the PDF content\r\n  const pdfContent = document.createElement('div');\r\n  pdfContent.style.backgroundColor = '#f5f5f5'; // Set background color (optional)\r\n  pdfContent.style.padding = '20px'; // Set padding (optional)\r\n\r\n  // Iterate over the sorted posts and create a PDF card for each post\r\n  sortedPosts.forEach((post) => {\r\n    const card = document.createElement('div');\r\n    card.style.marginBottom = '20px'; // Adjust margin between cards (optional)\r\n\r\n    const title = document.createElement('h2');\r\n    title.textContent = `Review Title: ${post.title}`;\r\n    card.appendChild(title);\r\n\r\n    const name = document.createElement('p');\r\n    name.textContent = `Review posted by: ${post.name}`;\r\n    card.appendChild(name);\r\n\r\n    const createdAt = document.createElement('p');\r\n    createdAt.textContent = `Review posted at: ${post.createdAt.substring(0, 10)}`;\r\n    card.appendChild(createdAt);\r\n\r\n    const message = document.createElement('p');\r\n    message.textContent = `Review Message: ${truncateText(post.message)}`;\r\n    card.appendChild(message);\r\n\r\n    const likeCount = document.createElement('p');\r\n    likeCount.textContent = `Total Likes: ${post.likeCount}`;\r\n    card.appendChild(likeCount);\r\n\r\n    pdfContent.appendChild(card);\r\n  });\r\n\r\n  // Generate the PDF from the styled content\r\n  html2canvas(pdfContent).then((canvas) => {\r\n    const imgData = canvas.toDataURL('image/png');\r\n    const pdf = new jsPDF();\r\n    const imgProps = pdf.getImageProperties(imgData);\r\n    const pdfWidth = pdf.internal.pageSize.getWidth();\r\n    const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\r\n\r\n    pdf.addImage(imgData, 'PNG', 0, 0, pdfWidth, pdfHeight);\r\n    pdf.save('top_posts.pdf');\r\n  });\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <h1>Best 5 Experiences to have with TourGenie according to the Customer Reviews</h1>\r\n      <button onClick={handleDownload}>Download as PDF</button>\r\n\r\n      <Grid container spacing={3} ref={containerRef}>\r\n        {sortedPosts.map((post) => (\r\n          <Grid key={post._id} item xs={12} sm={6} md={4} lg={3}>\r\n            <Card className={classes.card}>\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\" className={classes.reviewTitle}>\r\n                  Review Title: {post.title}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" className={classes.reviewerName}>\r\n                  Review posted by: {post.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.postedAt}>\r\n                  Review posted at: {post.createdAt.substring(0, 10)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\" className={classes.reviewMessage}>\r\n                  Review Message: {truncateText(post.message)}\r\n                </Typography>\r\n                <Typography variant=\"subtitle2\" color=\"textSecondary\" className={classes.totalLikes}>\r\n                  Total Likes: {post.likeCount}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Top5;\r\n"]},"metadata":{},"sourceType":"module"}