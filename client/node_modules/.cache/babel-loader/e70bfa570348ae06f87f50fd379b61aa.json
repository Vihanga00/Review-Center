{"ast":null,"code":"import { upperFirst, capitalize, last, pick, compose, mapValues, matchPercent, evolve, isNil, get, castArray, omit, asyncCompose } from '@react-pdf/fns';\nimport * as P from '@react-pdf/primitives';\nimport { TextInstance } from '@react-pdf/primitives';\nimport stylesheet, { transformColor, processTransform, flatten } from '@react-pdf/stylesheet';\nimport layoutEngine, { linebreaker, justification, textDecoration, scriptItemizer, wordHyphenation } from '@react-pdf/textkit';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport { PDFFont } from '@react-pdf/pdfkit';\nimport _regeneratorRuntime from '@babel/runtime/helpers/regeneratorRuntime';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _extends from '@babel/runtime/helpers/extends';\nimport emojiRegex from 'emoji-regex';\nimport resolveImage from '@react-pdf/image';\nimport Yoga from '@react-pdf/yoga';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\n\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var string = '';\n  var runs = [];\n  fragments.forEach(function (fragment) {\n    string += fragment.string;\n    runs.push({\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    });\n    offset += fragment.string.length;\n  });\n  return {\n    string: string,\n    runs: runs\n  };\n};\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\n\n\nvar transformText = function transformText(text, transformation) {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n\n    case 'lowercase':\n      return text.toLowerCase();\n\n    case 'capitalize':\n      return capitalize(text);\n\n    case 'upperfirst':\n      return upperFirst(text);\n\n    default:\n      return text;\n  }\n};\n\nvar StandardFont = /*#__PURE__*/function () {\n  function StandardFont(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  var _proto = StandardFont.prototype;\n\n  _proto.encode = function encode(str) {\n    return this.src.encode(str);\n  };\n\n  _proto.layout = function layout(str) {\n    var _this = this;\n\n    var _this$encode = this.encode(str),\n        encoded = _this$encode[0],\n        positions = _this$encode[1];\n\n    return {\n      positions: positions,\n      stringIndices: positions.map(function (_, i) {\n        return i;\n      }),\n      glyphs: encoded.map(function (g, i) {\n        var glyph = _this.getGlyph(parseInt(g, 16));\n\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  };\n\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    var glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  };\n\n  _proto.getGlyph = function getGlyph(id) {\n    return {\n      id: id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  };\n\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  } // Based on empirical observation\n  ;\n\n  _createClass(StandardFont, [{\n    key: \"ascent\",\n    get: function get() {\n      return 900;\n    } // Based on empirical observation\n\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return 650;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return 550;\n\n        default:\n          return 690;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return 440;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return 390;\n\n        default:\n          return 490;\n      }\n    } // Based on empirical observation\n\n  }, {\n    key: \"descent\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return -220;\n\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return -230;\n\n        default:\n          return -200;\n      }\n    }\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n\n  return StandardFont;\n}();\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\n\nvar getFontSize = function getFontSize(node) {\n  return node.attributes.fontSize || 12;\n};\n\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new StandardFont(name);\n  fontCache[name] = font;\n  return font;\n};\n\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\n\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\n\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n        runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n\n      var chars = string.slice(run.start, run.end);\n\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont); // If the default font does not have a glyph and the fallback font does, we use it\n\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run); // If anything that would impact res has changed, update it\n\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n\n        index += char.length;\n      }\n    }\n\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize(last(runs));\n\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar isTextInstance$4 = function isTextInstance(node) {\n  return node.type === P.TextInstance;\n};\n\nvar engines$1 = {\n  linebreaker: linebreaker,\n  justification: justification,\n  textDecoration: textDecoration,\n  scriptItemizer: scriptItemizer,\n  wordHyphenation: wordHyphenation,\n  fontSubstitution: fontSubstitution\n};\nvar engine$1 = layoutEngine(engines$1);\n\nvar getFragments$1 = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n      _instance$props$fill = _instance$props.fill,\n      fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n      _instance$props$fontF = _instance$props.fontFamily,\n      fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n      fontWeight = _instance$props.fontWeight,\n      fontStyle = _instance$props.fontStyle,\n      _instance$props$fontS = _instance$props.fontSize,\n      fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n      textDecorationColor = _instance$props.textDecorationColor,\n      textDecorationStyle = _instance$props.textDecorationStyle,\n      textTransform = _instance$props.textTransform,\n      opacity = _instance$props.opacity;\n  var _textDecoration = instance.props.textDecoration;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: _textDecoration === 'underline' || _textDecoration === 'underline line-through' || _textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: _textDecoration === 'line-through' || _textDecoration === 'underline line-through' || _textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n\n    if (isTextInstance$4(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n\n  return fragments;\n};\n\nvar getAttributedString$1 = function getAttributedString(fontStore, instance) {\n  return fromFragments(getFragments$1(fontStore, instance));\n};\n\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\n\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var _node$props, _node$props2;\n\n    var attributedString = getAttributedString$1(fontStore, node);\n    var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n    var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = engine$1(attributedString, container, layoutOptions).flat();\n    return Object.assign({}, node, {\n      lines: lines\n    });\n  };\n};\n\nvar layoutText$1 = function layoutText(fontStore, node) {\n  if (!node.children) return node;\n  var children = node.children.map(layoutTspan(fontStore));\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar isDefs = function isDefs(node) {\n  return node.type === P.Defs;\n};\n\nvar getDefs = function getDefs(node) {\n  var children = node.children || [];\n  var defs = children.find(isDefs) || {};\n  var values = defs.children || [];\n  return values.reduce(function (acc, value) {\n    var _value$props;\n\n    var id = (_value$props = value.props) === null || _value$props === void 0 ? void 0 : _value$props.id;\n    if (id) acc[id] = value;\n    return acc;\n  }, {});\n};\n\nvar isNotDefs = function isNotDefs(node) {\n  return node.type !== P.Defs;\n};\n\nvar detachDefs = function detachDefs(node) {\n  if (!node.children) return node;\n  var children = node.children.filter(isNotDefs);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\n\nvar replaceDef = function replaceDef(defs, value) {\n  if (!value) return undefined;\n  if (!URL_REGEX.test(value)) return value;\n  var match = value.match(URL_REGEX);\n  return defs[match[1]];\n};\n\nvar parseNodeDefs = function parseNodeDefs(defs) {\n  return function (node) {\n    var _node$props, _node$props2;\n\n    var fill = replaceDef(defs, (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fill);\n    var clipPath = replaceDef(defs, (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.clipPath);\n    var props = Object.assign({}, node.props, {\n      fill: fill,\n      clipPath: clipPath\n    });\n    var children = node.children ? node.children.map(parseNodeDefs(defs)) : undefined;\n    return Object.assign({}, node, {\n      props: props,\n      children: children\n    });\n  };\n};\n\nvar parseDefs = function parseDefs(root) {\n  if (!root.children) return root;\n  var defs = getDefs(root);\n  var children = root.children.map(parseNodeDefs(defs));\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar replaceDefs = function replaceDefs(node) {\n  return detachDefs(parseDefs(node));\n};\n\nvar parseViewbox = function parseViewbox(value) {\n  if (!value) return null;\n  var values = value.split(/[,\\s]+/).map(parseFloat);\n  if (values.length !== 4) return null;\n  return {\n    minX: values[0],\n    minY: values[1],\n    maxX: values[2],\n    maxY: values[3]\n  };\n};\n\nvar getContainer$1 = function getContainer(node) {\n  var viewbox = parseViewbox(node.props.viewBox);\n\n  if (viewbox) {\n    return {\n      width: viewbox.maxX,\n      height: viewbox.maxY\n    };\n  }\n\n  if (node.props.width && node.props.height) {\n    return {\n      width: parseFloat(node.props.width),\n      height: parseFloat(node.props.height)\n    };\n  }\n\n  return {\n    width: 0,\n    height: 0\n  };\n};\n\nvar SVG_INHERITED_PROPS = ['x', 'y', 'clipPath', 'clipRule', 'opacity', 'fill', 'fillOpacity', 'fillRule', 'stroke', 'strokeLinecap', 'strokeLinejoin', 'strokeOpacity', 'strokeWidth', 'textAnchor', 'dominantBaseline', 'color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\n\nvar getInheritProps = function getInheritProps(node) {\n  var props = node.props || {};\n  return pick(SVG_INHERITED_PROPS, props);\n};\n\nvar inheritProps = function inheritProps(node) {\n  if (!node.children) return node;\n  var inheritedProps = getInheritProps(node);\n  var children = node.children.map(function (child) {\n    var props = Object.assign({}, inheritedProps, child.props || {});\n    var newChild = Object.assign({}, child, {\n      props: props\n    });\n    return inheritProps(newChild);\n  });\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar parseAspectRatio = function parseAspectRatio(value) {\n  var match = value.replace(/[\\s\\r\\t\\n]+/gm, ' ').replace(/^defer\\s/, '').split(' ');\n  var align = match[0] || 'xMidYMid';\n  var meetOrSlice = match[1] || 'meet';\n  return {\n    align: align,\n    meetOrSlice: meetOrSlice\n  };\n};\n\nvar STYLE_PROPS = ['width', 'height', 'color', 'stroke', 'strokeWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'fill', 'fillRule', 'clipPath', 'offset', 'transform', 'strokeLinejoin', 'strokeLinecap', 'strokeDasharray'];\nvar VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nvar HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\n\nvar isType$3 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\n\nvar isSvg$3 = isType$3(P.Svg);\nvar isText$4 = isType$3(P.Text);\nvar isTextInstance$3 = isType$3(P.TextInstance);\n\nvar transformPercent = function transformPercent(container) {\n  return function (props) {\n    return mapValues(props, function (value, key) {\n      var match = matchPercent(value);\n\n      if (match && VERTICAL_PROPS.includes(key)) {\n        return match.percent * container.height;\n      }\n\n      if (match && HORIZONTAL_PROPS.includes(key)) {\n        return match.percent * container.width;\n      }\n\n      return value;\n    });\n  };\n};\n\nvar parsePercent = function parsePercent(value) {\n  var match = matchPercent(value);\n  return match ? match.percent : parseFloat(value);\n};\n\nvar parseProps = function parseProps(container) {\n  return function (node) {\n    var props = transformPercent(container)(node.props);\n    props = evolve({\n      x: parseFloat,\n      x1: parseFloat,\n      x2: parseFloat,\n      y: parseFloat,\n      y1: parseFloat,\n      y2: parseFloat,\n      r: parseFloat,\n      rx: parseFloat,\n      ry: parseFloat,\n      cx: parseFloat,\n      cy: parseFloat,\n      width: parseFloat,\n      height: parseFloat,\n      offset: parsePercent,\n      fill: transformColor,\n      opacity: parsePercent,\n      stroke: transformColor,\n      stopOpacity: parsePercent,\n      stopColor: transformColor,\n      transform: processTransform\n    }, props);\n    return Object.assign({}, node, {\n      props: props\n    });\n  };\n};\n\nvar mergeStyles$1 = function mergeStyles(node) {\n  var style = node.style || {};\n  var props = Object.assign({}, style, node.props);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\n\nvar removeNoneValues = function removeNoneValues(node) {\n  var removeNone = function removeNone(value) {\n    return value === 'none' ? null : value;\n  };\n\n  var props = mapValues(node.props, removeNone);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\n\nvar pickStyleProps = function pickStyleProps(node) {\n  var props = node.props || {};\n  var styleProps = pick(STYLE_PROPS, props);\n  var style = Object.assign({}, styleProps, node.style || {});\n  return Object.assign({}, node, {\n    style: style\n  });\n};\n\nvar parseSvgProps = function parseSvgProps(node) {\n  var props = evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: parseViewbox,\n    preserveAspectRatio: parseAspectRatio\n  }, node.props);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\n\nvar wrapBetweenTspan = function wrapBetweenTspan(node) {\n  return {\n    type: P.Tspan,\n    props: {},\n    children: [node]\n  };\n};\n\nvar addMissingTspan = function addMissingTspan(node) {\n  if (!isText$4(node)) return node;\n  if (!node.children) return node;\n\n  var resolveChild = function resolveChild(child) {\n    return isTextInstance$3(child) ? wrapBetweenTspan(child) : child;\n  };\n\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar parseText = function parseText(fontStore) {\n  return function (node) {\n    if (isText$4(node)) return layoutText$1(fontStore, node);\n    if (!node.children) return node;\n    var children = node.children.map(parseText(fontStore));\n    return Object.assign({}, node, {\n      children: children\n    });\n  };\n};\n\nvar resolveSvgNode = function resolveSvgNode(container) {\n  return compose(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles$1);\n};\n\nvar resolveChildren = function resolveChildren(container) {\n  return function (node) {\n    if (!node.children) return node;\n    var resolveChild = compose(resolveChildren(container), resolveSvgNode(container));\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n      children: children\n    });\n  };\n};\n\nvar resolveSvgRoot = function resolveSvgRoot(node, fontStore) {\n  var container = getContainer$1(node);\n  return compose(replaceDefs, parseText(fontStore), parseSvgProps, pickStyleProps, inheritProps, resolveChildren(container))(node);\n};\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveSvg = function resolveSvg(node, fontStore) {\n  if (!node.children) return node;\n\n  var resolveChild = function resolveChild(child) {\n    return resolveSvg(child, fontStore);\n  };\n\n  var root = isSvg$3(node) ? resolveSvgRoot(node, fontStore) : node;\n  var children = root.children.map(resolveChild);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar getZIndex = function getZIndex(node) {\n  return node.style.zIndex;\n};\n\nvar shouldSort = function shouldSort(node) {\n  return node.type !== P.Document && node.type !== P.Svg;\n};\n\nvar sortZIndex = function sortZIndex(a, b) {\n  var za = getZIndex(a);\n  var zb = getZIndex(b);\n  if (!za && !zb) return 0;\n  if (!za) return 1;\n  if (!zb) return -1;\n  return zb - za;\n};\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar resolveZIndex = function resolveZIndex(node) {\n  if (!node.children) return node;\n  var sortedChildren = shouldSort(node) ? node.children.sort(sortZIndex) : node.children;\n  var children = sortedChildren.map(resolveZIndex);\n  return Object.assign({}, node, {\n    children: children\n  });\n}; // Caches emoji images data\n\n\nvar emojis = {};\nvar regex = emojiRegex();\n\nvar reflect = function reflect(promise) {\n  return function () {\n    return promise.apply(void 0, arguments).then(function (v) {\n      return v;\n    }, function (e) {\n      return e;\n    });\n  };\n}; // Returns a function to be able to mock resolveImage.\n\n\nvar makeFetchEmojiImage = function makeFetchEmojiImage() {\n  return reflect(resolveImage);\n};\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\n\n\nvar _removeNoColor = function _removeNoColor(x) {\n  return x !== '️';\n};\n\nvar getCodePoints = function getCodePoints(string) {\n  return Array.from(string).filter(_removeNoColor).map(function (char) {\n    return char.codePointAt(0).toString(16);\n  }).join('-');\n};\n\nvar buildEmojiUrl = function buildEmojiUrl(emoji, source) {\n  var url = source.url,\n      format = source.format,\n      builder = source.builder;\n\n  if (typeof builder === 'function') {\n    return builder(getCodePoints(emoji));\n  }\n\n  return \"\" + url + getCodePoints(emoji) + \".\" + format;\n};\n\nvar fetchEmojis = function fetchEmojis(string, source) {\n  if (!source || !source.url && !source.builder) return [];\n  var promises = [];\n  Array.from(string.matchAll(regex)).forEach(function (match) {\n    var emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      var emojiUrl = buildEmojiUrl(emoji, source);\n      emojis[emoji] = {\n        loading: true\n      };\n      var fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(fetchEmojiImage({\n        uri: emojiUrl\n      }).then(function (image) {\n        emojis[emoji].loading = false;\n        emojis[emoji].data = image.data;\n      }));\n    }\n  });\n  return promises;\n};\n\nvar embedEmojis = function embedEmojis(fragments) {\n  var result = [];\n\n  var _loop = function _loop() {\n    var fragment = fragments[i];\n    var lastIndex = 0;\n    Array.from(fragment.string.matchAll(regex)).forEach(function (match) {\n      var index = match.index;\n      var emoji = match[0];\n      var emojiSize = fragment.attributes.fontSize;\n      var chunk = fragment.string.slice(lastIndex, index + match[0].length); // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: _extends({}, fragment.attributes, {\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data\n            }\n          })\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    });\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes\n      });\n    }\n  };\n\n  for (var i = 0; i < fragments.length; i += 1) {\n    _loop();\n  }\n\n  return result;\n};\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String | Object} image src\n */\n\n\nvar getSource = function getSource(node) {\n  var _node$props, _node$props2, _node$props3;\n\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.src) || ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.source) || ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.href);\n};\n/**\n * Resolves `src` to `@react-pdf/image` interface.\n *\n * Also it handles factories and async sources.\n *\n * @param {string | Object | Function} src\n * @returns {object} resolved src\n */\n\n\nvar resolveSource = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(src) {\n    var source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof src === 'function')) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return src();\n\n        case 3:\n          _context.t0 = _context.sent;\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.next = 8;\n          return src;\n\n        case 8:\n          _context.t0 = _context.sent;\n\n        case 9:\n          source = _context.t0;\n          return _context.abrupt(\"return\", typeof source === 'string' ? {\n            uri: source\n          } : source);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function resolveSource(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\n\n\nvar fetchImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node) {\n    var src, cache, source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          src = getSource(node);\n          cache = node.props.cache;\n\n          if (src) {\n            _context.next = 5;\n            break;\n          }\n\n          console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n          return _context.abrupt(\"return\");\n\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return resolveSource(src);\n\n        case 8:\n          source = _context.sent;\n\n          if (source) {\n            _context.next = 11;\n            break;\n          }\n\n          throw new Error(\"Image's \\\"src\\\" or \\\"source\\\" prop returned \" + source);\n\n        case 11:\n          _context.next = 13;\n          return resolveImage(source, {\n            cache: cache\n          });\n\n        case 13:\n          node.image = _context.sent;\n          node.image.key = source.data ? source.data.toString() : source.uri;\n          _context.next = 21;\n          break;\n\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](5);\n          node.image = {\n            width: 0,\n            height: 0,\n            key: null\n          };\n          console.warn(_context.t0.message);\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[5, 17]]);\n  }));\n\n  return function fetchImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isImage$2 = function isImage(node) {\n  return node.type === P.Image;\n};\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\n\n\nvar fetchAssets = function fetchAssets(fontStore, node) {\n  var _node$children;\n\n  var promises = [];\n  var listToExplore = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.slice(0)) || [];\n  var emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n\n  while (listToExplore.length > 0) {\n    var _n$style;\n\n    var n = listToExplore.shift();\n\n    if (isImage$2(n)) {\n      promises.push(fetchImage(n));\n    }\n\n    if (fontStore && (_n$style = n.style) !== null && _n$style !== void 0 && _n$style.fontFamily) {\n      promises.push(fontStore.load(n.style));\n    }\n\n    if (typeof n === 'string') {\n      promises.push.apply(promises, fetchEmojis(n, emojiSource));\n    }\n\n    if (typeof n.value === 'string') {\n      promises.push.apply(promises, fetchEmojis(n.value, emojiSource));\n    }\n\n    if (n.children) {\n      n.children.forEach(function (childNode) {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\n\n\nvar resolveAssets = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node, fontStore) {\n    var promises;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          promises = fetchAssets(fontStore, node);\n          _context.next = 3;\n          return Promise.all(promises);\n\n        case 3:\n          return _context.abrupt(\"return\", node);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n\n  return function resolveAssets(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isLink$1 = function isLink(node) {\n  return node.type === P.Link;\n};\n\nvar DEFAULT_LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline'\n};\n/**\n * Computes styles using stylesheet\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} computed styles\n */\n\nvar computeStyle = function computeStyle(container, node) {\n  var baseStyle = node.style;\n\n  if (isLink$1(node)) {\n    baseStyle = Array.isArray(node.style) ? [DEFAULT_LINK_STYLES].concat(node.style) : [DEFAULT_LINK_STYLES, node.style];\n  }\n\n  return stylesheet(container, baseStyle);\n};\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\n\n\nvar resolveNodeStyles = function resolveNodeStyles(container) {\n  return function (node) {\n    var style = computeStyle(container, node);\n    if (!node.children) return Object.assign({}, node, {\n      style: style\n    });\n    var children = node.children.map(resolveNodeStyles(container));\n    return Object.assign({}, node, {\n      style: style,\n      children: children\n    });\n  };\n};\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\n\n\nvar resolvePageStyles = function resolvePageStyles(page) {\n  var _page$props, _page$box, _page$box2, _page$props2;\n\n  var dpi = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.dpi) || 72;\n  var width = ((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.width) || page.style.width;\n  var height = ((_page$box2 = page.box) === null || _page$box2 === void 0 ? void 0 : _page$box2.height) || page.style.height;\n  var orientation = ((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.orientation) || 'portrait';\n  var container = {\n    width: width,\n    height: height,\n    orientation: orientation,\n    dpi: dpi\n  };\n  return resolveNodeStyles(container)(page);\n};\n/**\n * Resolves document styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\n\n\nvar resolveStyles = function resolveStyles(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePageStyles);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar getTransformStyle = function getTransformStyle(s) {\n  return function (node) {\n    var _node$style, _node$style2;\n\n    return isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style[s]) ? '50%' : (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2[s];\n  };\n};\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\n\n\nvar getOrigin = function getOrigin(node) {\n  if (!node.box) return {};\n  var _node$box = node.box,\n      left = _node$box.left,\n      top = _node$box.top,\n      width = _node$box.width,\n      height = _node$box.height;\n  var transformOriginX = getTransformStyle('transformOriginX')(node);\n  var transformOriginY = getTransformStyle('transformOriginY')(node);\n  var percentX = matchPercent(transformOriginX);\n  var percentY = matchPercent(transformOriginY);\n  var offsetX = percentX ? width * percentX.percent : transformOriginX;\n  var offsetY = percentY ? height * percentY.percent : transformOriginY;\n  return {\n    left: left + offsetX,\n    top: top + offsetY\n  };\n};\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\n\n\nvar resolveNodeOrigin = function resolveNodeOrigin(node) {\n  var origin = getOrigin(node);\n  var newNode = Object.assign({}, node, {\n    origin: origin\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(resolveNodeOrigin);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\n\n\nvar resolveOrigin = function resolveOrigin(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolveNodeOrigin);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n/* eslint-disable no-plusplus */\n\n/* eslint-disable prefer-const */\n\n/* eslint-disable prefer-destructuring */\n\n\nvar getBookmarkValue = function getBookmarkValue(title) {\n  return typeof title === 'string' ? {\n    title: title,\n    fit: false,\n    expanded: false\n  } : title;\n};\n\nvar resolveBookmarks = function resolveBookmarks(node) {\n  var refs = 0;\n  var children = (node.children || []).slice(0);\n  var listToExplore = children.map(function (value) {\n    return {\n      value: value,\n      parent: null\n    };\n  });\n\n  var _loop = function _loop() {\n    var _child$props;\n\n    var element = listToExplore.shift();\n    var child = element.value;\n    var parent = element.parent;\n\n    if ((_child$props = child.props) !== null && _child$props !== void 0 && _child$props.bookmark) {\n      var _parent;\n\n      var bookmark = getBookmarkValue(child.props.bookmark);\n      var ref = refs++;\n\n      var newHierarchy = _extends({\n        ref: ref,\n        parent: (_parent = parent) === null || _parent === void 0 ? void 0 : _parent.ref\n      }, bookmark);\n\n      child.props.bookmark = newHierarchy;\n      parent = newHierarchy;\n    }\n\n    if (child.children) {\n      child.children.forEach(function (childNode) {\n        listToExplore.push({\n          value: childNode,\n          parent: parent\n        });\n      });\n    }\n  };\n\n  while (listToExplore.length > 0) {\n    _loop();\n  }\n\n  return node;\n};\n\nvar VALID_ORIENTATIONS = ['portrait', 'landscape'];\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\n\nvar getOrientation = function getOrientation(page) {\n  var _page$props;\n\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.orientation) || 'portrait';\n  return VALID_ORIENTATIONS.includes(value) ? value : 'portrait';\n};\n/**\n * Return true if page is landscape\n *\n * @param {Object} page instance\n * @returns {Boolean} is page landscape\n */\n\n\nvar isLandscape = function isLandscape(page) {\n  return getOrientation(page) === 'landscape';\n};\n\nvar PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n  ID1: [153, 243]\n};\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\n\nvar toSizeObject = function toSizeObject(v) {\n  return {\n    width: v[0],\n    height: v[1]\n  };\n};\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\n\n\nvar flipSizeObject = function flipSizeObject(v) {\n  return {\n    width: v.height,\n    height: v.width\n  };\n};\n/**\n * Adjust page size to passed DPI\n *\n * @param {Object} size object\n * @param {number} dpi\n * @returns {Object} adjusted size object\n */\n\n\nvar adjustDpi = function adjustDpi(v, dpi) {\n  return {\n    width: v.width ? v.width * dpi : v.width,\n    height: v.height ? v.height * dpi : v.height\n  };\n};\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\n\n\nvar getStringSize = function getStringSize(v) {\n  return toSizeObject(PAGE_SIZES[v.toUpperCase()]);\n};\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\n\n\nvar getNumberSize = function getNumberSize(n) {\n  return toSizeObject([n]);\n};\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\n\n\nvar getSize = function getSize(page) {\n  var _page$props, _page$props2;\n\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.size) || 'A4';\n  var dpi = parseFloat(((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.dpi) || 72);\n  var type = typeof value;\n  var size = value;\n\n  if (type === 'string') {\n    size = getStringSize(value);\n  } else if (Array.isArray(value)) {\n    size = toSizeObject(value);\n  } else if (type === 'number') {\n    size = getNumberSize(value);\n  }\n\n  size = adjustDpi(size, dpi / 72);\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\n\n\nvar resolvePageSize = function resolvePageSize(page) {\n  var size = getSize(page);\n  var style = flatten(page.style || {});\n  return _extends({}, page, {\n    style: _extends({}, style, size)\n  });\n};\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\n\n\nvar resolvePageSizes = function resolvePageSizes(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePageSize);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar isFixed = function isFixed(node) {\n  var _node$props;\n\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fixed) === true;\n};\n/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {Number} height\n */\n\n\nvar lineIndexAtHeight = function lineIndexAtHeight(node, height) {\n  var y = 0;\n  if (!node.lines) return 0;\n\n  for (var i = 0; i < node.lines.length; i += 1) {\n    var line = node.lines[i];\n    if (y + line.box.height > height) return i;\n    y += line.box.height;\n  }\n\n  return node.lines.length;\n};\n/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\n\n\nvar heightAtLineIndex = function heightAtLineIndex(node, index) {\n  var counter = 0;\n  if (!node.lines) return counter;\n\n  for (var i = 0; i < index; i += 1) {\n    var line = node.lines[i];\n    if (!line) break;\n    counter += line.box.height;\n  }\n\n  return counter;\n};\n\nvar getLineBreak = function getLineBreak(node, height) {\n  var top = get(node, ['box', 'top'], 0);\n  var widows = get(node, ['props', 'widows'], 2);\n  var orphans = get(node, ['props', 'orphans'], 2);\n  var linesQuantity = node.lines.length;\n  var slicedLine = lineIndexAtHeight(node, height - top);\n\n  if (slicedLine === 0) {\n    return 0;\n  }\n\n  if (linesQuantity < orphans) {\n    return linesQuantity;\n  }\n\n  if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  }\n\n  if (linesQuantity === orphans + widows) {\n    return orphans;\n  }\n\n  if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n\n  return slicedLine;\n}; // Also receives contentArea in case it's needed\n\n\nvar splitText = function splitText(node, height) {\n  var slicedLineIndex = getLineBreak(node, height);\n  var currentHeight = heightAtLineIndex(node, slicedLineIndex);\n  var nextHeight = node.box.height - currentHeight;\n  var current = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      height: currentHeight,\n      borderBottomWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginBottom: 0,\n      paddingBottom: 0,\n      borderBottomWidth: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }),\n    lines: node.lines.slice(0, slicedLineIndex)\n  });\n  var next = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      top: 0,\n      height: nextHeight,\n      borderTopWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginTop: 0,\n      paddingTop: 0,\n      borderTopWidth: 0,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    }),\n    lines: node.lines.slice(slicedLineIndex)\n  });\n  return [current, next];\n};\n\nvar getTop$1 = function getTop(node) {\n  var _node$box;\n\n  return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\n\nvar hasFixedHeight = function hasFixedHeight(node) {\n  var _node$style;\n\n  return !isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height);\n};\n\nvar splitNode = function splitNode(node, height) {\n  if (!node) return [null, null];\n  var nodeTop = getTop$1(node);\n  var current = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      borderBottomWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginBottom: 0,\n      paddingBottom: 0,\n      borderBottomWidth: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    })\n  });\n  current.style.height = height - nodeTop;\n  var nextHeight = hasFixedHeight(node) ? node.box.height - (height - nodeTop) : null;\n  var next = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      top: 0,\n      borderTopWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginTop: 0,\n      paddingTop: 0,\n      borderTopWidth: 0,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    })\n  });\n\n  if (nextHeight) {\n    next.style.height = nextHeight;\n  }\n\n  return [current, next];\n};\n\nvar NON_WRAP_TYPES = [P.Svg, P.Note, P.Image, P.Canvas];\n\nvar getWrap = function getWrap(node) {\n  var _node$props;\n\n  if (NON_WRAP_TYPES.includes(node.type)) return false;\n  return isNil((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.wrap) ? true : node.props.wrap;\n};\n\nvar getComputedPadding = function getComputedPadding(node, edge) {\n  var yogaNode = node.yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\n\n\nvar getPadding = function getPadding(node) {\n  var style = node.style,\n      box = node.box;\n  var paddingTop = getComputedPadding(node, Yoga.EDGE_TOP) || (box === null || box === void 0 ? void 0 : box.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingRight = getComputedPadding(node, Yoga.EDGE_RIGHT) || (box === null || box === void 0 ? void 0 : box.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingBottom = getComputedPadding(node, Yoga.EDGE_BOTTOM) || (box === null || box === void 0 ? void 0 : box.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingLeft = getComputedPadding(node, Yoga.EDGE_LEFT) || (box === null || box === void 0 ? void 0 : box.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  return {\n    paddingTop: paddingTop,\n    paddingRight: paddingRight,\n    paddingBottom: paddingBottom,\n    paddingLeft: paddingLeft\n  };\n};\n\nvar getWrapArea = function getWrapArea(page) {\n  var _page$style;\n\n  var _getPadding = getPadding(page),\n      paddingBottom = _getPadding.paddingBottom;\n\n  var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n  return height - paddingBottom;\n};\n\nvar getContentArea = function getContentArea(page) {\n  var _page$style;\n\n  var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n\n  var _getPadding = getPadding(page),\n      paddingTop = _getPadding.paddingTop,\n      paddingBottom = _getPadding.paddingBottom;\n\n  return height - paddingBottom - paddingTop;\n};\n\nvar _excluded = [\"style\", \"children\"];\n\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\n\nvar isNumber = function isNumber(value) {\n  return typeof value === 'number';\n};\n\nvar isFragment = function isFragment(value) {\n  return value && value.type === Symbol.for('react.fragment');\n};\n/**\n * Transforms a react element instance to internal element format.\n *\n * Can return multiple instances in the case of arrays or fragments.\n *\n * @param {Object} React element\n * @returns {Array} parsed react elements\n */\n\n\nvar createInstances = function createInstances(element) {\n  if (!element) return [];\n\n  if (isString(element) || isNumber(element)) {\n    return [{\n      type: TextInstance,\n      value: \"\" + element\n    }];\n  }\n\n  if (isFragment(element)) {\n    return createInstances(element.props.children);\n  }\n\n  if (Array.isArray(element)) {\n    return element.reduce(function (acc, el) {\n      return acc.concat(createInstances(el));\n    }, []);\n  }\n\n  if (!isString(element.type)) {\n    return createInstances(element.type(element.props));\n  }\n\n  var type = element.type,\n      _element$props = element.props,\n      _element$props$style = _element$props.style,\n      style = _element$props$style === void 0 ? {} : _element$props$style,\n      _element$props$childr = _element$props.children,\n      children = _element$props$childr === void 0 ? [] : _element$props$childr,\n      props = _objectWithoutPropertiesLoose(_element$props, _excluded);\n\n  var nextChildren = castArray(children).reduce(function (acc, child) {\n    return acc.concat(createInstances(child));\n  }, []);\n  return [{\n    type: type,\n    style: style,\n    props: props,\n    box: {},\n    children: nextChildren\n  }];\n};\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\n\n\nvar getNodesHeight = function getNodesHeight(nodes) {\n  var max = 0;\n  var min = Infinity;\n  if (!nodes || nodes.length === 0) return 0;\n\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n/* eslint-disable no-continue */\n\n\nvar getBreak = function getBreak(node) {\n  var _node$props;\n\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.break) || false;\n};\n\nvar getMinPresenceAhead = function getMinPresenceAhead(node) {\n  var _node$props2;\n\n  return (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.minPresenceAhead;\n};\n\nvar defaultPresenceAhead = function defaultPresenceAhead(element) {\n  return function (height) {\n    return Math.min(element.box.height, height);\n  };\n};\n\nvar getPresenceAhead = function getPresenceAhead(elements, height) {\n  var result = 0;\n\n  for (var i = 0; i < elements.length; i += 1) {\n    var element = elements[i];\n    if (!element.box) continue;\n    var isElementInside = height > element.box.top;\n    var presenceAhead = element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nvar shouldBreak = function shouldBreak(child, futureElements, height) {\n  var minPresenceAhead = getMinPresenceAhead(child);\n  var presenceAhead = getPresenceAhead(futureElements, height);\n  var futureHeight = getNodesHeight(futureElements);\n  var shouldSplit = height < child.box.top + child.box.height;\n  var shouldWrap = getWrap(child);\n  return getBreak(child) || !shouldWrap && shouldSplit || minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead;\n};\n\nvar IGNORABLE_CODEPOINTS = [8232, // LINE_SEPARATOR\n8233 // PARAGRAPH_SEPARATOR\n];\n\nvar buildSubsetForFont = function buildSubsetForFont(font) {\n  return IGNORABLE_CODEPOINTS.reduce(function (acc, codePoint) {\n    if (font && font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n\n    return [].concat(acc, [String.fromCharCode(codePoint)]);\n  }, []);\n};\n\nvar ignoreChars = function ignoreChars(fragments) {\n  return fragments.map(function (fragment) {\n    var charSubset = buildSubsetForFont(fragment.attributes.font);\n    var subsetRegex = new RegExp(charSubset.join('|'));\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes\n    };\n  });\n};\n\nvar PREPROCESSORS = [ignoreChars, embedEmojis];\n\nvar isImage$1 = function isImage(node) {\n  return node.type === P.Image;\n};\n\nvar isTextInstance$2 = function isTextInstance(node) {\n  return node.type === P.TextInstance;\n};\n/**\n * Get textkit fragments of given node object\n *\n * @param {Object} font store\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\n\n\nvar getFragments = function getFragments(fontStore, instance, parentLink, level) {\n  var _instance$props, _instance$props2;\n\n  if (level === void 0) {\n    level = 0;\n  }\n\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$style = instance.style,\n      _instance$style$color = _instance$style.color,\n      color = _instance$style$color === void 0 ? 'black' : _instance$style$color,\n      _instance$style$fontF = _instance$style.fontFamily,\n      fontFamily = _instance$style$fontF === void 0 ? 'Helvetica' : _instance$style$fontF,\n      fontWeight = _instance$style.fontWeight,\n      fontStyle = _instance$style.fontStyle,\n      _instance$style$fontS = _instance$style.fontSize,\n      fontSize = _instance$style$fontS === void 0 ? 18 : _instance$style$fontS,\n      _instance$style$textA = _instance$style.textAlign,\n      textAlign = _instance$style$textA === void 0 ? 'left' : _instance$style$textA,\n      lineHeight = _instance$style.lineHeight,\n      textDecoration = _instance$style.textDecoration,\n      textDecorationColor = _instance$style.textDecorationColor,\n      textDecorationStyle = _instance$style.textDecorationStyle,\n      textTransform = _instance$style.textTransform,\n      letterSpacing = _instance$style.letterSpacing,\n      textIndent = _instance$style.textIndent,\n      opacity = _instance$style.opacity,\n      verticalAlign = _instance$style.verticalAlign;\n  var opts = {\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  };\n  var obj = fontStore ? fontStore.getFont(opts) : null;\n  var font = obj ? obj.data : fontFamily; // Don't pass main background color to textkit. Will be rendered by the render package instead\n\n  var backgroundColor = level === 0 ? null : instance.style.backgroundColor;\n  var attributes = {\n    font: font,\n    color: color,\n    opacity: opacity,\n    fontSize: fontSize,\n    backgroundColor: backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    characterSpacing: letterSpacing,\n    strikeStyle: textDecorationStyle,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeColor: textDecorationColor || color,\n    underlineColor: textDecorationColor || color,\n    link: parentLink || ((_instance$props = instance.props) === null || _instance$props === void 0 ? void 0 : _instance$props.src) || ((_instance$props2 = instance.props) === null || _instance$props2 === void 0 ? void 0 : _instance$props2.href),\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n    verticalAlign: verticalAlign\n  };\n\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n\n    if (isImage$1(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: _extends({}, attributes, {\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data\n          }\n        })\n      });\n    } else if (isTextInstance$2(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      var _fragments;\n\n      (_fragments = fragments).push.apply(_fragments, getFragments(fontStore, child, attributes.link, level + 1));\n    }\n  }\n\n  for (var _i = 0; _i < PREPROCESSORS.length; _i += 1) {\n    var preprocessor = PREPROCESSORS[_i];\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} font store\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\n\n\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  var fragments = getFragments(fontStore, instance);\n  return fromFragments(fragments);\n};\n\nvar engines = {\n  linebreaker: linebreaker,\n  justification: justification,\n  textDecoration: textDecoration,\n  scriptItemizer: scriptItemizer,\n  wordHyphenation: wordHyphenation,\n  fontSubstitution: fontSubstitution\n};\nvar engine = layoutEngine(engines);\n\nvar getMaxLines = function getMaxLines(node) {\n  var _node$style;\n\n  return (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.maxLines;\n};\n\nvar getTextOverflow = function getTextOverflow(node) {\n  var _node$style2;\n\n  return (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.textOverflow;\n};\n/**\n * Get layout container for specific text node\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Object} node\n * @returns {Object} layout container\n */\n\n\nvar getContainer = function getContainer(width, height, node) {\n  var maxLines = getMaxLines(node);\n  var textOverflow = getTextOverflow(node);\n  return {\n    x: 0,\n    y: 0,\n    width: width,\n    maxLines: maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow\n  };\n};\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\n\n\nvar getLayoutOptions = function getLayoutOptions(fontStore, node) {\n  return {\n    hyphenationPenalty: node.props.hyphenationPenalty,\n    shrinkWhitespaceFactor: {\n      before: -0.5,\n      after: -0.5\n    },\n    hyphenationCallback: node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null\n  };\n};\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @param {Number} fontStore font store\n * @returns {Array} layout lines\n */\n\n\nvar layoutText = function layoutText(node, width, height, fontStore) {\n  var attributedString = getAttributedString(fontStore, node);\n  var container = getContainer(width, height, node);\n  var options = getLayoutOptions(fontStore, node);\n  var lines = engine(attributedString, container, options);\n  return lines.reduce(function (acc, line) {\n    return [].concat(acc, line);\n  }, []);\n};\n\nvar isType$2 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\n\nvar isSvg$2 = isType$2(P.Svg);\nvar isText$3 = isType$2(P.Text);\n\nvar shouldIterate = function shouldIterate(node) {\n  return !isSvg$2(node) && !isText$3(node);\n};\n\nvar shouldLayoutText = function shouldLayoutText(node) {\n  return isText$3(node) && !node.lines;\n};\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layout node\n */\n\n\nvar resolveTextLayout = function resolveTextLayout(node, fontStore) {\n  if (shouldLayoutText(node)) {\n    var width = node.box.width - (node.box.paddingRight + node.box.paddingLeft);\n    var height = node.box.height - (node.box.paddingTop + node.box.paddingBottom); // eslint-disable-next-line no-param-reassign\n\n    node.lines = layoutText(node, width, height, fontStore);\n  }\n\n  if (shouldIterate(node)) {\n    if (!node.children) return node;\n\n    var mapChild = function mapChild(child) {\n      return resolveTextLayout(child, fontStore);\n    };\n\n    var children = node.children.map(mapChild);\n    return Object.assign({}, node, {\n      children: children\n    });\n  }\n\n  return node;\n};\n\nvar INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\n\nvar isSvg$1 = function isSvg(node) {\n  return node.type === P.Svg;\n}; // Merge style values\n\n\nvar mergeValues = function mergeValues(styleName, value, inheritedValue) {\n  switch (styleName) {\n    case 'textDecoration':\n      {\n        // merge not none and not false textDecoration values to one rule\n        return [inheritedValue, value].filter(function (v) {\n          return v && v !== 'none';\n        }).join(' ');\n      }\n\n    default:\n      return value;\n  }\n}; // Merge inherited and node styles\n\n\nvar merge = function merge(inheritedStyles, style) {\n  var mergedStyles = _extends({}, inheritedStyles);\n\n  Object.entries(style).forEach(function (_ref) {\n    var styleName = _ref[0],\n        value = _ref[1];\n    mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n  });\n  return mergedStyles;\n};\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\n\n\nvar mergeStyles = function mergeStyles(inheritedStyles) {\n  return function (node) {\n    var style = merge(inheritedStyles, node.style || {});\n    return Object.assign({}, node, {\n      style: style\n    });\n  };\n};\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\n\n\nvar resolveInheritance = function resolveInheritance(node) {\n  if (isSvg$1(node)) return node;\n  if (!node.children) return node;\n  var inheritStyles = pick(INHERITED_PROPERTIES, node.style || {});\n  var resolveChild = compose(resolveInheritance, mergeStyles(inheritStyles));\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar getComputedMargin = function getComputedMargin(node, edge) {\n  var yogaNode = node.yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\n\n\nvar getMargin = function getMargin(node) {\n  var style = node.style,\n      box = node.box;\n  var marginTop = getComputedMargin(node, Yoga.EDGE_TOP) || (box === null || box === void 0 ? void 0 : box.marginTop) || (style === null || style === void 0 ? void 0 : style.marginTop) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginRight = getComputedMargin(node, Yoga.EDGE_RIGHT) || (box === null || box === void 0 ? void 0 : box.marginRight) || (style === null || style === void 0 ? void 0 : style.marginRight) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginBottom = getComputedMargin(node, Yoga.EDGE_BOTTOM) || (box === null || box === void 0 ? void 0 : box.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginLeft = getComputedMargin(node, Yoga.EDGE_LEFT) || (box === null || box === void 0 ? void 0 : box.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  return {\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom,\n    marginLeft: marginLeft\n  };\n};\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\n\n\nvar getPosition = function getPosition(node) {\n  var yogaNode = node.yogaNode;\n  return {\n    top: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedTop()) || 0,\n    right: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedRight()) || 0,\n    bottom: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedBottom()) || 0,\n    left: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedLeft()) || 0\n  };\n};\n\nvar DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0\n};\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\n\nvar getDimension = function getDimension(node) {\n  var yogaNode = node.yogaNode;\n  if (!yogaNode) return DEFAULT_DIMENSION;\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight()\n  };\n};\n\nvar getComputedBorder = function getComputedBorder(yogaNode, edge) {\n  return yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n};\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\n\n\nvar getBorderWidth = function getBorderWidth(node) {\n  var yogaNode = node.yogaNode;\n  return {\n    borderTopWidth: getComputedBorder(yogaNode, Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(yogaNode, Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(yogaNode, Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(yogaNode, Yoga.EDGE_LEFT)\n  };\n};\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setDisplay = function setDisplay(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX);\n    }\n\n    return node;\n  };\n};\n\nvar OVERFLOW = {\n  hidden: Yoga.OVERFLOW_HIDDEN,\n  scroll: Yoga.OVERFLOW_SCROLL\n};\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setOverflow = function setOverflow(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      var overflow = OVERFLOW[value] || Yoga.OVERFLOW_VISIBLE;\n      yogaNode.setOverflow(overflow);\n    }\n\n    return node;\n  };\n};\n\nvar FLEX_WRAP = {\n  wrap: Yoga.WRAP_WRAP,\n  'wrap-reverse': Yoga.WRAP_WRAP_REVERSE\n};\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setFlexWrap = function setFlexWrap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (yogaNode) {\n      var flexWrap = FLEX_WRAP[value] || Yoga.WRAP_NO_WRAP;\n      yogaNode.setFlexWrap(flexWrap);\n    }\n\n    return node;\n  };\n};\n/* eslint-disable no-unused-expressions */\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node.yogaNode;\n\n      if (!isNil(value) && yogaNode) {\n        var hasEdge = !isNil(edge);\n        var fixedMethod = \"set\" + upperFirst(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = matchPercent(value);\n\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else {\n            var _yogaNode$autoMethod2;\n\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n\n      return node;\n    };\n  };\n};\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setFlexGrow = function setFlexGrow(value) {\n  return function (node) {\n    return setYogaValue('flexGrow')(value || 0)(node);\n  };\n};\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setFlexBasis = setYogaValue('flexBasis');\nvar ALIGN = {\n  'flex-start': Yoga.ALIGN_FLEX_START,\n  center: Yoga.ALIGN_CENTER,\n  'flex-end': Yoga.ALIGN_FLEX_END,\n  stretch: Yoga.ALIGN_STRETCH,\n  baseline: Yoga.ALIGN_BASELINE,\n  'space-between': Yoga.ALIGN_SPACE_BETWEEN,\n  'space-around': Yoga.ALIGN_SPACE_AROUND\n};\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setAlign = function setAlign(attr) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node.yogaNode;\n      var defaultValue = attr === 'items' ? Yoga.ALIGN_STRETCH : Yoga.ALIGN_AUTO;\n\n      if (yogaNode) {\n        var align = ALIGN[value] || defaultValue;\n        yogaNode[\"setAlign\" + upperFirst(attr)](align);\n      }\n\n      return node;\n    };\n  };\n};\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setAlignSelf = setAlign('self');\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setAlignItems = setAlign('items');\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setFlexShrink = function setFlexShrink(value) {\n  return function (node) {\n    return setYogaValue('flexShrink')(value || 1)(node);\n  };\n};\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setAspectRatio = function setAspectRatio(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n\n    return node;\n  };\n};\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setAlignContent = setAlign('content');\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPositionType = function setPositionType(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      yogaNode.setPositionType(value === 'absolute' ? Yoga.POSITION_TYPE_ABSOLUTE : Yoga.POSITION_TYPE_RELATIVE);\n    }\n\n    return node;\n  };\n};\n\nvar FLEX_DIRECTIONS = {\n  row: Yoga.FLEX_DIRECTION_ROW,\n  'row-reverse': Yoga.FLEX_DIRECTION_ROW_REVERSE,\n  'column-reverse': Yoga.FLEX_DIRECTION_COLUMN_REVERSE\n};\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setFlexDirection = function setFlexDirection(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (yogaNode) {\n      var flexDirection = FLEX_DIRECTIONS[value] || Yoga.FLEX_DIRECTION_COLUMN;\n      yogaNode.setFlexDirection(flexDirection);\n    }\n\n    return node;\n  };\n};\n\nvar JUSTIFY_CONTENT = {\n  center: Yoga.JUSTIFY_CENTER,\n  'flex-end': Yoga.JUSTIFY_FLEX_END,\n  'space-between': Yoga.JUSTIFY_SPACE_BETWEEN,\n  'space-around': Yoga.JUSTIFY_SPACE_AROUND,\n  'space-evenly': Yoga.JUSTIFY_SPACE_EVENLY\n};\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setJustifyContent = function setJustifyContent(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      var justifyContent = JUSTIFY_CONTENT[value] || Yoga.JUSTIFY_FLEX_START;\n      yogaNode.setJustifyContent(justifyContent);\n    }\n\n    return node;\n  };\n};\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setWidth = setYogaValue('width');\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMinWidth = setYogaValue('minWidth');\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMaxWidth = setYogaValue('maxWidth');\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setHeight = setYogaValue('height');\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMinHeight = setYogaValue('minHeight');\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\nvar setMaxHeight = setYogaValue('maxHeight');\n\nvar checkPercents = function checkPercents(attr, value) {\n  var percent = matchPercent(value);\n\n  if (percent) {\n    throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n  }\n};\n/**\n * Set rowGap value to node's Yoga instance\n *\n * @param {Number} gap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setRowGap = function setRowGap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      checkPercents('rowGap', value);\n      yogaNode.setGap(Yoga.GUTTER_ROW, value);\n    }\n\n    return node;\n  };\n};\n/**\n * Set columnGap value to node's Yoga instance\n *\n * @param {Number} gap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\n\n\nvar setColumnGap = function setColumnGap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n\n    if (!isNil(value) && yogaNode) {\n      checkPercents('columnGap', value);\n      yogaNode.setGap(Yoga.GUTTER_COLUMN, value);\n    }\n\n    return node;\n  };\n};\n\nvar getAspectRatio = function getAspectRatio(viewbox) {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas$1 = function measureCanvas(page, node) {\n  return function (width, widthMode, height, heightMode) {\n    var aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY || widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      return {\n        width: width,\n        height: width / aspectRatio\n      };\n    }\n\n    if (heightMode === Yoga.MEASURE_MODE_EXACTLY) {\n      return {\n        width: height * aspectRatio\n      };\n    }\n\n    return {};\n  };\n};\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\n\n\nvar linesWidth = function linesWidth(node) {\n  if (!node.lines) return 0;\n  return Math.max.apply(Math, [0].concat(node.lines.map(function (line) {\n    return line.xAdvance;\n  })));\n};\n/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\n\n\nvar linesHeight = function linesHeight(node) {\n  if (!node.lines) return -1;\n  return node.lines.reduce(function (acc, line) {\n    return acc + line.box.height;\n  }, 0);\n};\n/* eslint-disable no-param-reassign */\n\n\nvar ALIGNMENT_FACTORS = {\n  center: 0.5,\n  right: 1\n};\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\n\nvar measureText = function measureText(page, node, fontStore) {\n  return function (width, widthMode, height) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      if (!node.lines) node.lines = layoutText(node, width, height, fontStore);\n      return {\n        height: linesHeight(node)\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      var _node$style;\n\n      var alignFactor = ALIGNMENT_FACTORS[(_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.textAlign] || 0;\n\n      if (!node.lines) {\n        node.lines = layoutText(node, width, height, fontStore);\n        node.alignOffset = (width - linesWidth(node)) * alignFactor; // Compensate align in variable width containers\n      }\n\n      return {\n        height: linesHeight(node),\n        width: Math.min(width, linesWidth(node))\n      };\n    }\n\n    return {};\n  };\n};\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\n\n\nvar getRatio = function getRatio(node) {\n  var _node$image;\n\n  return (_node$image = node.image) !== null && _node$image !== void 0 && _node$image.data ? node.image.width / node.image.height : 1;\n};\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\n\n\nvar isHeightAuto = function isHeightAuto(page) {\n  var _page$box;\n\n  return isNil((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.height);\n};\n\nvar SAFETY_HEIGHT$1 = 10;\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\n\nvar measureImage = function measureImage(page, node) {\n  return function (width, widthMode, height, heightMode) {\n    var imageRatio = getRatio(node);\n    var imageMargin = getMargin(node);\n    var pagePadding = getPadding(page);\n    var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT$1; // Skip measure if image data not present yet\n\n    if (!node.image) return {\n      width: 0,\n      height: 0\n    };\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_UNDEFINED) {\n      var scaledHeight = width / imageRatio;\n      return {\n        height: Math.min(pageArea, scaledHeight)\n      };\n    }\n\n    if (heightMode === Yoga.MEASURE_MODE_EXACTLY && (widthMode === Yoga.MEASURE_MODE_AT_MOST || widthMode === Yoga.MEASURE_MODE_UNDEFINED)) {\n      return {\n        width: Math.min(height * imageRatio, width)\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      var _scaledHeight = width / imageRatio;\n\n      return {\n        height: Math.min(height, pageArea, _scaledHeight)\n      };\n    }\n\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      if (imageRatio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / imageRatio, height)\n        };\n      }\n\n      return {\n        height: height,\n        width: Math.min(height * imageRatio, width)\n      };\n    }\n\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n/* eslint-disable no-param-reassign */\n\n\nvar SAFETY_HEIGHT = 10;\n\nvar getMax = function getMax(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\n\n\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n\n  var nil = function nil() {\n    return ctx;\n  };\n\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n\n  var moveTo = function moveTo() {\n    addPoint.apply(void 0, arguments);\n    return ctx;\n  };\n\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return ctx;\n  }; // Change dimensions\n\n\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect; // To be implemented\n\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil; // These don't change dimensions\n\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = function () {\n    return getMax(points.map(function (p) {\n      return p[0];\n    }));\n  };\n\n  ctx.getHeight = function () {\n    return getMax(points.map(function (p) {\n      return p[1];\n    }));\n  };\n\n  return ctx;\n};\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\n\n\nvar measureCanvas = function measureCanvas(page, node) {\n  return function () {\n    var imageMargin = getMargin(node);\n    var pagePadding = getPadding(page);\n    var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n    var ctx = measureCtx();\n    node.props.paint(ctx);\n    var width = ctx.getWidth();\n    var height = Math.min(pageArea, ctx.getHeight());\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n\nvar YOGA_CONFIG = Yoga.Config.create();\nYOGA_CONFIG.setPointScaleFactor(0);\n\nvar isType$1 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\n\nvar isSvg = isType$1(P.Svg);\nvar isText$2 = isType$1(P.Text);\nvar isNote = isType$1(P.Note);\nvar isPage = isType$1(P.Page);\nvar isImage = isType$1(P.Image);\nvar isCanvas = isType$1(P.Canvas);\nvar isTextInstance$1 = isType$1(P.TextInstance);\n\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return setHeight(value);\n};\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar setYogaValues = function setYogaValues(node) {\n  compose(setNodeHeight(node), setWidth(node.style.width), setMinWidth(node.style.minWidth), setMaxWidth(node.style.maxWidth), setMinHeight(node.style.minHeight), setMaxHeight(node.style.maxHeight), setMarginTop(node.style.marginTop), setMarginRight(node.style.marginRight), setMarginBottom(node.style.marginBottom), setMarginLeft(node.style.marginLeft), setPaddingTop(node.style.paddingTop), setPaddingRight(node.style.paddingRight), setPaddingBottom(node.style.paddingBottom), setPaddingLeft(node.style.paddingLeft), setPositionType(node.style.position), setPositionTop(node.style.top), setPositionRight(node.style.right), setPositionBottom(node.style.bottom), setPositionLeft(node.style.left), setBorderTop(node.style.borderTopWidth), setBorderRight(node.style.borderRightWidth), setBorderBottom(node.style.borderBottomWidth), setBorderLeft(node.style.borderLeftWidth), setDisplay(node.style.display), setFlexDirection(node.style.flexDirection), setAlignSelf(node.style.alignSelf), setAlignContent(node.style.alignContent), setAlignItems(node.style.alignItems), setJustifyContent(node.style.justifyContent), setFlexWrap(node.style.flexWrap), setOverflow(node.style.overflow), setAspectRatio(node.style.aspectRatio), setFlexBasis(node.style.flexBasis), setFlexGrow(node.style.flexGrow), setFlexShrink(node.style.flexShrink), setRowGap(node.style.rowGap), setColumnGap(node.style.columnGap))(node);\n};\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\n\n\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return function (child) {\n    parent.insertChild(child.yogaNode, parent.getChildCount());\n    return child;\n  };\n};\n\nvar setMeasureFunc = function setMeasureFunc(node, page, fontStore) {\n  var yogaNode = node.yogaNode;\n\n  if (isText$2(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node, fontStore));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  if (isSvg(node)) {\n    yogaNode.setMeasureFunc(measureCanvas$1(page, node));\n  }\n\n  return node;\n};\n\nvar isLayoutElement = function isLayoutElement(node) {\n  return !isText$2(node) && !isNote(node) && !isSvg(node);\n};\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\n\n\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n    var result = Object.assign({}, node, {\n      yogaNode: yogaNode\n    });\n    setYogaValues(result);\n\n    if (isLayoutElement(node) && node.children) {\n      var resolveChild = compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore));\n      result.children = node.children.map(resolveChild);\n    }\n\n    setMeasureFunc(result, page, fontStore);\n    return result;\n  };\n};\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar calculateLayout = function calculateLayout(page) {\n  page.yogaNode.calculateLayout();\n  return page;\n};\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\n\n\nvar persistDimensions = function persistDimensions(node) {\n  if (isTextInstance$1(node)) return node;\n  var box = Object.assign(getPadding(node), getMargin(node), getBorderWidth(node), getPosition(node), getDimension(node));\n  var newNode = Object.assign({}, node, {\n    box: box\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(persistDimensions);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  var newNode = Object.assign({}, node);\n  delete newNode.yogaNode;\n  if (!node.children) return newNode;\n  var children = node.children.map(destroyYogaNodes);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\n\n\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node.yogaNode) node.yogaNode.freeRecursive();\n  return node;\n};\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\n\n\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  if (isNil(page)) return null;\n  return compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore))(page);\n};\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\n\n\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  if (!node.children) return node;\n\n  var resolveChild = function resolveChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar isText$1 = function isText(node) {\n  return node.type === P.Text;\n}; // Prevent splitting elements by low decimal numbers\n\n\nvar SAFTY_THRESHOLD = 0.001;\n\nvar assingChildren = function assingChildren(children, node) {\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar getTop = function getTop(node) {\n  var _node$box;\n\n  return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\n\nvar allFixed = function allFixed(nodes) {\n  return nodes.every(isFixed);\n};\n\nvar isDynamic = function isDynamic(node) {\n  var _node$props;\n\n  return !isNil((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.render);\n};\n\nvar relayoutPage = compose(resolveTextLayout, resolveInheritance, resolvePageDimensions);\n\nvar warnUnavailableSpace = function warnUnavailableSpace(node) {\n  console.warn(\"Node of type \" + node.type + \" can't wrap between pages and it's bigger than available page height\");\n};\n\nvar splitNodes = function splitNodes(height, contentArea, nodes) {\n  var currentChildren = [];\n  var nextChildren = [];\n\n  for (var i = 0; i < nodes.length; i += 1) {\n    var child = nodes[i];\n    var futureNodes = nodes.slice(i + 1);\n    var futureFixedNodes = futureNodes.filter(isFixed);\n    var nodeTop = getTop(child);\n    var nodeHeight = child.box.height;\n    var isOutside = height <= nodeTop;\n    var shouldBreak$1 = shouldBreak(child, futureNodes, height);\n    var shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n    var canWrap = getWrap(child);\n    var fitsInsidePage = nodeHeight <= contentArea;\n\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n\n    if (isOutside) {\n      var box = Object.assign({}, child.box, {\n        top: child.box.top - height\n      });\n      var next = Object.assign({}, child, {\n        box: box\n      });\n      nextChildren.push(next);\n      continue;\n    }\n\n    if (!fitsInsidePage && !canWrap) {\n      currentChildren.push(child);\n      nextChildren.push.apply(nextChildren, futureNodes);\n      warnUnavailableSpace(child);\n      break;\n    }\n\n    if (shouldBreak$1) {\n      var _box = Object.assign({}, child.box, {\n        top: child.box.top - height\n      });\n\n      var props = Object.assign({}, child.props, {\n        wrap: true,\n        break: false\n      });\n\n      var _next = Object.assign({}, child, {\n        box: _box,\n        props: props\n      });\n\n      currentChildren.push.apply(currentChildren, futureFixedNodes);\n      nextChildren.push.apply(nextChildren, [_next].concat(futureNodes));\n      break;\n    }\n\n    if (shouldSplit) {\n      var _split = split(child, height, contentArea),\n          currentChild = _split[0],\n          nextChild = _split[1]; // All children are moved to the next page, it doesn't make sense to show the parent on the current page\n\n\n      if (child.children.length > 0 && currentChild.children.length === 0) {\n        var _box2 = Object.assign({}, child.box, {\n          top: child.box.top - height\n        });\n\n        var _next2 = Object.assign({}, child, {\n          box: _box2\n        });\n\n        currentChildren.push.apply(currentChildren, futureFixedNodes);\n        nextChildren.push.apply(nextChildren, [_next2].concat(futureNodes));\n        break;\n      }\n\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n\n    currentChildren.push(child);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nvar splitChildren = function splitChildren(height, contentArea, node) {\n  var children = node.children || [];\n  var availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, contentArea, children);\n};\n\nvar splitView = function splitView(node, height, contentArea) {\n  var _splitNode = splitNode(node, height),\n      currentNode = _splitNode[0],\n      nextNode = _splitNode[1];\n\n  var _splitChildren = splitChildren(height, contentArea, node),\n      currentChilds = _splitChildren[0],\n      nextChildren = _splitChildren[1];\n\n  return [assingChildren(currentChilds, currentNode), assingChildren(nextChildren, nextNode)];\n};\n\nvar split = function split(node, height, contentArea) {\n  return isText$1(node) ? splitText(node, height) : splitView(node, height, contentArea);\n};\n\nvar shouldResolveDynamicNodes = function shouldResolveDynamicNodes(node) {\n  var children = node.children || [];\n  return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\n\nvar resolveDynamicNodes = function resolveDynamicNodes(props, node) {\n  var isNodeDynamic = isDynamic(node); // Call render prop on dynamic nodes and append result to children\n\n  var resolveChildren = function resolveChildren(children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    if (isNodeDynamic) {\n      var res = node.props.render(props);\n      return createInstances(res).filter(Boolean).map(function (n) {\n        return resolveDynamicNodes(props, n);\n      });\n    }\n\n    return children.map(function (c) {\n      return resolveDynamicNodes(props, c);\n    });\n  }; // We reset dynamic text box so it can be computed again later on\n\n\n  var resetHeight = isNodeDynamic && isText$1(node);\n  var box = resetHeight ? _extends({}, node.box, {\n    height: 0\n  }) : node.box;\n  var children = resolveChildren(node.children);\n  var lines = isNodeDynamic ? null : node.lines;\n  return Object.assign({}, node, {\n    box: box,\n    lines: lines,\n    children: children\n  });\n};\n\nvar resolveDynamicPage = function resolveDynamicPage(props, page, fontStore) {\n  if (shouldResolveDynamicNodes(page)) {\n    var resolvedPage = resolveDynamicNodes(props, page);\n    return relayoutPage(resolvedPage, fontStore);\n  }\n\n  return page;\n};\n\nvar splitPage = function splitPage(page, pageNumber, fontStore) {\n  var wrapArea = getWrapArea(page);\n  var contentArea = getContentArea(page);\n  var dynamicPage = resolveDynamicPage({\n    pageNumber: pageNumber\n  }, page, fontStore);\n  var height = page.style.height;\n\n  var _splitNodes = splitNodes(wrapArea, contentArea, dynamicPage.children),\n      currentChilds = _splitNodes[0],\n      nextChilds = _splitNodes[1];\n\n  var relayout = function relayout(node) {\n    return relayoutPage(node, fontStore);\n  };\n\n  var currentBox = _extends({}, page.box, {\n    height: height\n  });\n\n  var currentPage = relayout(Object.assign({}, page, {\n    box: currentBox,\n    children: currentChilds\n  }));\n  if (nextChilds.length === 0 || allFixed(nextChilds)) return [currentPage, null];\n  var nextBox = omit('height', page.box);\n  var nextProps = omit('bookmark', page.props);\n  var nextPage = relayout(Object.assign({}, page, {\n    props: nextProps,\n    box: nextBox,\n    children: nextChilds\n  }));\n  return [currentPage, nextPage];\n};\n\nvar resolvePageIndices = function resolvePageIndices(fontStore, page, pageNumber, pages) {\n  var totalPages = pages.length;\n  var props = {\n    totalPages: totalPages,\n    pageNumber: pageNumber + 1,\n    subPageNumber: page.subPageNumber + 1,\n    subPageTotalPages: page.subPageTotalPages\n  };\n  return resolveDynamicPage(props, page, fontStore);\n};\n\nvar assocSubPageData = function assocSubPageData(subpages) {\n  return subpages.map(function (page, i) {\n    return _extends({}, page, {\n      subPageNumber: i,\n      subPageTotalPages: subpages.length\n    });\n  });\n};\n\nvar dissocSubPageData = function dissocSubPageData(page) {\n  return omit(['subPageNumber', 'subPageTotalPages'], page);\n};\n\nvar paginate = function paginate(page, pageNumber, fontStore) {\n  var _page$props;\n\n  if (!page) return [];\n  if (((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.wrap) === false) return [page];\n  var splittedPage = splitPage(page, pageNumber, fontStore);\n  var pages = [splittedPage[0]];\n  var nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param {Object} node\n * @param {Object} fontStore font store\n * @returns {Object} layout node\n */\n\n\nvar resolvePagination = function resolvePagination(doc, fontStore) {\n  var pages = [];\n  var pageNumber = 1;\n\n  for (var i = 0; i < doc.children.length; i += 1) {\n    var page = doc.children[i];\n    var subpages = paginate(page, pageNumber, fontStore);\n    subpages = assocSubPageData(subpages);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n\n  pages = pages.map(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return dissocSubPageData(resolvePageIndices.apply(void 0, [fontStore].concat(args)));\n  });\n  return assingChildren(pages, doc);\n};\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\n\n\nvar resolvePageHorizontalPadding = function resolvePageHorizontalPadding(container) {\n  return function (value) {\n    var match = matchPercent(value);\n    return match ? match.percent * container.width : value;\n  };\n};\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\n\n\nvar resolvePageVerticalPadding = function resolvePageVerticalPadding(container) {\n  return function (value) {\n    var match = matchPercent(value);\n    return match ? match.percent * container.height : value;\n  };\n};\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\n\n\nvar resolvePagePaddings = function resolvePagePaddings(page) {\n  var container = page.style;\n  var style = evolve({\n    paddingTop: resolvePageVerticalPadding(container),\n    paddingLeft: resolvePageHorizontalPadding(container),\n    paddingRight: resolvePageHorizontalPadding(container),\n    paddingBottom: resolvePageVerticalPadding(container)\n  }, page.style);\n  return Object.assign({}, page, {\n    style: style\n  });\n};\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\n\n\nvar resolvePagesPaddings = function resolvePagesPaddings(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePagePaddings);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\n\n\nvar resolveRadius = function resolveRadius(container) {\n  return function (value) {\n    if (!value) return undefined;\n    var match = matchPercent(value);\n    return match ? match.percent * Math.min(container.width, container.height) : value;\n  };\n};\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\n\n\nvar resolvePercentRadius = function resolvePercentRadius(node) {\n  var style = evolve({\n    borderTopLeftRadius: resolveRadius(node.box),\n    borderTopRightRadius: resolveRadius(node.box),\n    borderBottomRightRadius: resolveRadius(node.box),\n    borderBottomLeftRadius: resolveRadius(node.box)\n  }, node.style || {});\n  var newNode = Object.assign({}, node, {\n    style: style\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(resolvePercentRadius);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\n\n\nvar transformHeight = function transformHeight(pageArea, height) {\n  var match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\n\n\nvar getPageArea = function getPageArea(page) {\n  var _page$style, _page$style2;\n\n  var pageHeight = page.style.height;\n  var pagePaddingTop = ((_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.paddingTop) || 0;\n  var pagePaddingBottom = ((_page$style2 = page.style) === null || _page$style2 === void 0 ? void 0 : _page$style2.paddingBottom) || 0;\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\n\n\nvar resolveNodePercentHeight = function resolveNodePercentHeight(page, node) {\n  var _page$style3, _node$style;\n\n  if (isNil((_page$style3 = page.style) === null || _page$style3 === void 0 ? void 0 : _page$style3.height)) return node;\n  if (isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height)) return node;\n  var pageArea = getPageArea(page);\n  var height = transformHeight(pageArea, node.style.height);\n  var style = Object.assign({}, node.style, {\n    height: height\n  });\n  return Object.assign({}, node, {\n    style: style\n  });\n};\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\n\n\nvar resolvePagePercentHeight = function resolvePagePercentHeight(page) {\n  if (!page.children) return page;\n\n  var resolveChild = function resolveChild(child) {\n    return resolveNodePercentHeight(page, child);\n  };\n\n  var children = page.children.map(resolveChild);\n  return Object.assign({}, page, {\n    children: children\n  });\n};\n/**\n * Transform all page immediate children with percent height to fixed.\n * This is needed for computing correct dimensions on pre-pagination layout.\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\n\n\nvar resolvePercentHeight = function resolvePercentHeight(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePagePercentHeight);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar isType = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\n\nvar isLink = isType(P.Link);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\n\nvar hasRenderProp = function hasRenderProp(node) {\n  var _node$props;\n\n  return !!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.render);\n};\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\n\nvar isTextType = function isTextType(node) {\n  return isText(node) || isTextInstance(node);\n};\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\n\n\nvar isTextLink = function isTextLink(node) {\n  var children = node.children || []; // Text string inside a Link\n\n  if (children.every(isTextInstance)) return true; // Text node inside a Link\n\n  if (children.every(isText)) return false;\n  return children.every(isTextType);\n};\n/**\n * Wraps node children inside Text node\n *\n * @param {Object} node\n * @returns {Boolean} node with intermediate Text child\n */\n\n\nvar wrapText = function wrapText(node) {\n  var textElement = {\n    type: P.Text,\n    props: {},\n    style: {},\n    box: {},\n    children: node.children\n  };\n  return Object.assign({}, node, {\n    children: [textElement]\n  });\n};\n\nvar transformLink = function transformLink(node) {\n  if (!isLink(node)) return node; // If has render prop substitute the instance by a Text, that will\n  // ultimately render the inline Link via the textkit PDF renderer.\n\n  if (hasRenderProp(node)) return Object.assign({}, node, {\n    type: P.Text\n  }); // If is a text link (either contains Text or TextInstalce), wrap it\n  // inside a Text element so styles are applied correctly\n\n  if (isTextLink(node)) return wrapText(node);\n  return node;\n};\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\n\n\nvar resolveLinkSubstitution = function resolveLinkSubstitution(node) {\n  if (!node.children) return node;\n  var resolveChild = compose(transformLink, resolveLinkSubstitution);\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar layout = asyncCompose(resolveZIndex, resolveOrigin, resolvePagination, resolveTextLayout, resolvePercentRadius, resolveDimensions, resolveSvg, resolveAssets, resolveInheritance, resolvePercentHeight, resolvePagesPaddings, resolveStyles, resolveLinkSubstitution, resolveBookmarks, resolvePageSizes);\nexport { layout as default };","map":{"version":3,"sources":["D:/review center/client/node_modules/@react-pdf/layout/lib/index.es.js"],"names":["upperFirst","capitalize","last","pick","compose","mapValues","matchPercent","evolve","isNil","get","castArray","omit","asyncCompose","P","TextInstance","stylesheet","transformColor","processTransform","flatten","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","_createClass","PDFFont","_regeneratorRuntime","_asyncToGenerator","_extends","emojiRegex","resolveImage","Yoga","_objectWithoutPropertiesLoose","fromFragments","fragments","offset","string","runs","forEach","fragment","push","start","end","length","attributes","transformText","text","transformation","toUpperCase","toLowerCase","StandardFont","src","name","open","_proto","prototype","encode","str","layout","_this","_this$encode","encoded","positions","stringIndices","map","_","i","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","font","characterToGlyph","hasGlyphForCodePoint","key","fontCache","IGNORED_CODE_POINTS","getFontSize","node","fontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","includes","fontSubstitution","_ref","lastFont","lastFontSize","lastIndex","index","res","run","defaultFont","chars","slice","j","char","codePointAt","shouldFallback","unitsPerEm","scale","_fontSize","isTextInstance$4","isTextInstance","type","engines$1","engine$1","getFragments$1","getFragments","fontStore","instance","_instance$props","props","_instance$props$fill","fill","_instance$props$fontF","fontFamily","fontWeight","fontStyle","_instance$props$fontS","textDecorationColor","textDecorationStyle","textTransform","opacity","_textDecoration","obj","getFont","data","color","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","children","child","value","apply","getAttributedString$1","getAttributedString","AlmostInfinity","shrinkWhitespaceFactor","before","after","layoutTspan","_node$props","_node$props2","attributedString","x","y","container","width","height","hyphenationCallback","getHyphenationCallback","layoutOptions","lines","flat","Object","assign","layoutText$1","layoutText","isDefs","Defs","getDefs","defs","find","values","reduce","acc","_value$props","isNotDefs","detachDefs","filter","URL_REGEX","replaceDef","undefined","test","match","parseNodeDefs","clipPath","parseDefs","root","replaceDefs","parseViewbox","split","parseFloat","minX","minY","maxX","maxY","getContainer$1","getContainer","viewbox","viewBox","SVG_INHERITED_PROPS","getInheritProps","inheritProps","inheritedProps","newChild","parseAspectRatio","replace","align","meetOrSlice","STYLE_PROPS","VERTICAL_PROPS","HORIZONTAL_PROPS","isType$3","isType","isSvg$3","Svg","isText$4","Text","isTextInstance$3","transformPercent","percent","parsePercent","parseProps","x1","x2","y1","y2","r","rx","ry","cx","cy","stroke","stopOpacity","stopColor","transform","mergeStyles$1","mergeStyles","style","removeNoneValues","removeNone","pickStyleProps","styleProps","parseSvgProps","preserveAspectRatio","wrapBetweenTspan","Tspan","addMissingTspan","resolveChild","parseText","resolveSvgNode","resolveChildren","resolveSvgRoot","resolveSvg","getZIndex","zIndex","shouldSort","Document","sortZIndex","a","b","za","zb","resolveZIndex","sortedChildren","sort","emojis","regex","reflect","promise","arguments","then","v","e","makeFetchEmojiImage","_removeNoColor","getCodePoints","Array","from","toString","join","buildEmojiUrl","emoji","source","url","format","builder","fetchEmojis","promises","matchAll","loading","emojiUrl","fetchEmojiImage","uri","image","embedEmojis","result","_loop","emojiSize","chunk","String","fromCharCode","attachment","yOffset","Math","floor","getSource","_node$props3","href","resolveSource","mark","_callee","wrap","_callee$","_context","prev","next","t0","sent","abrupt","stop","_x","fetchImage","cache","console","warn","Error","message","isImage$2","isImage","Image","fetchAssets","_node$children","listToExplore","emojiSource","getEmojiSource","_n$style","n","shift","load","childNode","resolveAssets","Promise","all","_x2","isLink$1","isLink","Link","DEFAULT_LINK_STYLES","computeStyle","baseStyle","isArray","concat","resolveNodeStyles","resolvePageStyles","page","_page$props","_page$box","_page$box2","_page$props2","dpi","box","orientation","resolveStyles","getTransformStyle","s","_node$style","_node$style2","getOrigin","_node$box","left","top","transformOriginX","transformOriginY","percentX","percentY","offsetX","offsetY","resolveNodeOrigin","origin","newNode","resolveOrigin","getBookmarkValue","title","fit","expanded","resolveBookmarks","refs","parent","_child$props","element","bookmark","_parent","ref","newHierarchy","VALID_ORIENTATIONS","getOrientation","isLandscape","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","ID1","toSizeObject","flipSizeObject","adjustDpi","getStringSize","getNumberSize","getSize","size","resolvePageSize","resolvePageSizes","isFixed","fixed","lineIndexAtHeight","line","heightAtLineIndex","counter","getLineBreak","widows","orphans","linesQuantity","slicedLine","splitText","slicedLineIndex","currentHeight","nextHeight","current","borderBottomWidth","marginBottom","paddingBottom","borderBottomLeftRadius","borderBottomRightRadius","borderTopWidth","marginTop","paddingTop","borderTopLeftRadius","borderTopRightRadius","getTop$1","getTop","hasFixedHeight","splitNode","nodeTop","NON_WRAP_TYPES","Note","Canvas","getWrap","getComputedPadding","edge","yogaNode","getPadding","EDGE_TOP","paddingVertical","padding","paddingRight","EDGE_RIGHT","paddingHorizontal","EDGE_BOTTOM","paddingLeft","EDGE_LEFT","getWrapArea","_page$style","_getPadding","getContentArea","_excluded","isString","isNumber","isFragment","Symbol","for","createInstances","el","_element$props","_element$props$style","_element$props$childr","nextChildren","getNodesHeight","nodes","max","min","Infinity","getBreak","break","getMinPresenceAhead","minPresenceAhead","defaultPresenceAhead","getPresenceAhead","elements","isElementInside","presenceAhead","shouldBreak","futureElements","futureHeight","shouldSplit","shouldWrap","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","isImage$1","isTextInstance$2","parentLink","level","_instance$props2","_instance$style","_instance$style$color","_instance$style$fontF","_instance$style$fontS","_instance$style$textA","textAlign","lineHeight","letterSpacing","textIndent","verticalAlign","opts","backgroundColor","indent","characterSpacing","link","_fragments","_i","preprocessor","engines","engine","getMaxLines","maxLines","getTextOverflow","textOverflow","truncateMode","getLayoutOptions","hyphenationPenalty","options","isType$2","isSvg$2","isText$3","shouldIterate","shouldLayoutText","resolveTextLayout","mapChild","INHERITED_PROPERTIES","isSvg$1","isSvg","mergeValues","styleName","inheritedValue","merge","inheritedStyles","mergedStyles","entries","resolveInheritance","inheritStyles","getComputedMargin","getMargin","marginVertical","margin","marginRight","marginHorizontal","marginLeft","getPosition","getComputedTop","right","getComputedRight","bottom","getComputedBottom","getComputedLeft","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","borderRightWidth","borderLeftWidth","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","OVERFLOW","hidden","OVERFLOW_HIDDEN","scroll","OVERFLOW_SCROLL","setOverflow","overflow","OVERFLOW_VISIBLE","FLEX_WRAP","WRAP_WRAP","WRAP_WRAP_REVERSE","setFlexWrap","flexWrap","WRAP_NO_WRAP","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","_yogaNode$percentMeth","call","_yogaNode$percentMeth2","_yogaNode$autoMethod","_yogaNode$autoMethod2","_yogaNode$fixedMethod","_yogaNode$fixedMethod2","setFlexGrow","setFlexBasis","ALIGN","ALIGN_FLEX_START","center","ALIGN_CENTER","ALIGN_FLEX_END","stretch","ALIGN_STRETCH","baseline","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","setAlign","defaultValue","ALIGN_AUTO","setAlignSelf","setAlignItems","setFlexShrink","setAspectRatio","setAlignContent","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","FLEX_DIRECTIONS","row","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","setFlexDirection","flexDirection","FLEX_DIRECTION_COLUMN","JUSTIFY_CONTENT","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","setJustifyContent","justifyContent","JUSTIFY_FLEX_START","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","checkPercents","setRowGap","setGap","GUTTER_ROW","setColumnGap","GUTTER_COLUMN","getAspectRatio","measureCanvas$1","measureCanvas","widthMode","heightMode","aspectRatio","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","linesWidth","xAdvance","linesHeight","ALIGNMENT_FACTORS","measureText","alignFactor","alignOffset","getRatio","_node$image","isHeightAuto","SAFETY_HEIGHT$1","measureImage","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","_scaledHeight","SAFETY_HEIGHT","getMax","measureCtx","ctx","points","nil","addPoint","moveTo","rect","w","h","ellipse","polygon","lineTo","circle","roundedRect","path","lineWidth","bezierCurveTo","quadraticCurveTo","rotate","translate","dash","clip","save","lineCap","restore","lineJoin","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","p","getHeight","paint","YOGA_CONFIG","Config","create","setPointScaleFactor","isType$1","isText$2","isNote","isPage","Page","isCanvas","isTextInstance$1","setNodeHeight","setYogaValues","minWidth","maxWidth","minHeight","maxHeight","position","display","alignSelf","alignContent","alignItems","flexBasis","flexGrow","flexShrink","rowGap","columnGap","insertYogaNodes","insertChild","getChildCount","setMeasureFunc","isLayoutElement","createYogaNodes","Node","createWithConfig","calculateLayout","persistDimensions","destroyYogaNodes","freeYogaNodes","freeRecursive","resolvePageDimensions","resolveDimensions","isText$1","isText","SAFTY_THRESHOLD","assingChildren","allFixed","every","isDynamic","render","relayoutPage","warnUnavailableSpace","splitNodes","contentArea","currentChildren","futureNodes","futureFixedNodes","nodeHeight","isOutside","shouldBreak$1","canWrap","fitsInsidePage","_box","_next","_split","currentChild","nextChild","_box2","_next2","splitChildren","availableHeight","splitView","_splitNode","currentNode","nextNode","_splitChildren","currentChilds","shouldResolveDynamicNodes","some","resolveDynamicNodes","isNodeDynamic","Boolean","c","resetHeight","resolveDynamicPage","resolvedPage","splitPage","pageNumber","wrapArea","dynamicPage","_splitNodes","nextChilds","relayout","currentBox","currentPage","nextBox","nextProps","nextPage","resolvePageIndices","pages","totalPages","subPageNumber","subPageTotalPages","assocSubPageData","subpages","dissocSubPageData","paginate","splittedPage","resolvePagination","doc","_len","args","_key","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolvePagePaddings","resolvePagesPaddings","resolveRadius","resolvePercentRadius","transformHeight","getPageArea","_page$style2","pageHeight","pagePaddingTop","pagePaddingBottom","resolveNodePercentHeight","_page$style3","resolvePagePercentHeight","resolvePercentHeight","hasRenderProp","isTextType","isTextLink","wrapText","textElement","transformLink","resolveLinkSubstitution","default"],"mappings":"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","sourcesContent":["import { upperFirst, capitalize, last, pick, compose, mapValues, matchPercent, evolve, isNil, get, castArray, omit, asyncCompose } from '@react-pdf/fns';\nimport * as P from '@react-pdf/primitives';\nimport { TextInstance } from '@react-pdf/primitives';\nimport stylesheet, { transformColor, processTransform, flatten } from '@react-pdf/stylesheet';\nimport layoutEngine, { linebreaker, justification, textDecoration, scriptItemizer, wordHyphenation } from '@react-pdf/textkit';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport { PDFFont } from '@react-pdf/pdfkit';\nimport _regeneratorRuntime from '@babel/runtime/helpers/regeneratorRuntime';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _extends from '@babel/runtime/helpers/extends';\nimport emojiRegex from 'emoji-regex';\nimport resolveImage from '@react-pdf/image';\nimport Yoga from '@react-pdf/yoga';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/objectWithoutPropertiesLoose';\n\n/**\n * Create attributed string from text fragments\n *\n * @param  {Array}  fragments\n * @return {Object} attributed string\n */\nvar fromFragments = function fromFragments(fragments) {\n  var offset = 0;\n  var string = '';\n  var runs = [];\n  fragments.forEach(function (fragment) {\n    string += fragment.string;\n    runs.push({\n      start: offset,\n      end: offset + fragment.string.length,\n      attributes: fragment.attributes || {}\n    });\n    offset += fragment.string.length;\n  });\n  return {\n    string: string,\n    runs: runs\n  };\n};\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nvar transformText = function transformText(text, transformation) {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\nvar StandardFont = /*#__PURE__*/function () {\n  function StandardFont(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n  var _proto = StandardFont.prototype;\n  _proto.encode = function encode(str) {\n    return this.src.encode(str);\n  };\n  _proto.layout = function layout(str) {\n    var _this = this;\n    var _this$encode = this.encode(str),\n      encoded = _this$encode[0],\n      positions = _this$encode[1];\n    return {\n      positions: positions,\n      stringIndices: positions.map(function (_, i) {\n        return i;\n      }),\n      glyphs: encoded.map(function (g, i) {\n        var glyph = _this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      })\n    };\n  };\n  _proto.glyphForCodePoint = function glyphForCodePoint(codePoint) {\n    var glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  };\n  _proto.getGlyph = function getGlyph(id) {\n    return {\n      id: id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id)\n    };\n  };\n  _proto.hasGlyphForCodePoint = function hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  ;\n  _createClass(StandardFont, [{\n    key: \"ascent\",\n    get: function get() {\n      return 900;\n    }\n\n    // Based on empirical observation\n  }, {\n    key: \"capHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return 650;\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return 550;\n        default:\n          return 690;\n      }\n    }\n\n    // Based on empirical observation\n  }, {\n    key: \"xHeight\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return 440;\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return 390;\n        default:\n          return 490;\n      }\n    }\n\n    // Based on empirical observation\n  }, {\n    key: \"descent\",\n    get: function get() {\n      switch (this.name) {\n        case 'Times-Roman':\n        case 'Times-Bold':\n        case 'Times-Italic':\n        case 'Times-BoldItalic':\n          return -220;\n        case 'Courier':\n        case 'Courier-Bold':\n        case 'Courier-Oblique':\n        case 'Courier-BoldOblique':\n          return -230;\n        default:\n          return -200;\n      }\n    }\n  }, {\n    key: \"lineGap\",\n    get: function get() {\n      return 0;\n    }\n  }, {\n    key: \"unitsPerEm\",\n    get: function get() {\n      return 1000;\n    }\n  }]);\n  return StandardFont;\n}();\n\nvar fontCache = {};\nvar IGNORED_CODE_POINTS = [173];\nvar getFontSize = function getFontSize(node) {\n  return node.attributes.fontSize || 12;\n};\nvar getOrCreateFont = function getOrCreateFont(name) {\n  if (fontCache[name]) return fontCache[name];\n  var font = new StandardFont(name);\n  fontCache[name] = font;\n  return font;\n};\nvar getFallbackFont = function getFallbackFont() {\n  return getOrCreateFont('Helvetica');\n};\nvar shouldFallbackToFont = function shouldFallbackToFont(codePoint, font) {\n  return !font || !IGNORED_CODE_POINTS.includes(codePoint) && !font.hasGlyphForCodePoint(codePoint) && getFallbackFont().hasGlyphForCodePoint(codePoint);\n};\nvar fontSubstitution = function fontSubstitution() {\n  return function (_ref) {\n    var string = _ref.string,\n      runs = _ref.runs;\n    var lastFont = null;\n    var lastFontSize = null;\n    var lastIndex = 0;\n    var index = 0;\n    var res = [];\n    for (var i = 0; i < runs.length; i += 1) {\n      var run = runs[i];\n      var defaultFont = typeof run.attributes.font === 'string' ? getOrCreateFont(run.attributes.font) : run.attributes.font;\n      if (string.length === 0) {\n        res.push({\n          start: 0,\n          end: 0,\n          attributes: {\n            font: defaultFont\n          }\n        });\n        break;\n      }\n      var chars = string.slice(run.start, run.end);\n      for (var j = 0; j < chars.length; j += 1) {\n        var char = chars[j];\n        var codePoint = char.codePointAt();\n        var shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n        // If the default font does not have a glyph and the fallback font does, we use it\n        var font = shouldFallback ? getFallbackFont() : defaultFont;\n        var fontSize = getFontSize(run);\n\n        // If anything that would impact res has changed, update it\n        if (font !== lastFont || fontSize !== lastFontSize || font.unitsPerEm !== lastFont.unitsPerEm) {\n          if (lastFont) {\n            res.push({\n              start: lastIndex,\n              end: index,\n              attributes: {\n                font: lastFont,\n                scale: lastFontSize / lastFont.unitsPerEm\n              }\n            });\n          }\n          lastFont = font;\n          lastFontSize = fontSize;\n          lastIndex = index;\n        }\n        index += char.length;\n      }\n    }\n    if (lastIndex < string.length) {\n      var _fontSize = getFontSize(last(runs));\n      res.push({\n        start: lastIndex,\n        end: string.length,\n        attributes: {\n          font: lastFont,\n          scale: _fontSize / lastFont.unitsPerEm\n        }\n      });\n    }\n    return {\n      string: string,\n      runs: res\n    };\n  };\n};\n\nvar isTextInstance$4 = function isTextInstance(node) {\n  return node.type === P.TextInstance;\n};\nvar engines$1 = {\n  linebreaker: linebreaker,\n  justification: justification,\n  textDecoration: textDecoration,\n  scriptItemizer: scriptItemizer,\n  wordHyphenation: wordHyphenation,\n  fontSubstitution: fontSubstitution\n};\nvar engine$1 = layoutEngine(engines$1);\nvar getFragments$1 = function getFragments(fontStore, instance) {\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$props = instance.props,\n    _instance$props$fill = _instance$props.fill,\n    fill = _instance$props$fill === void 0 ? 'black' : _instance$props$fill,\n    _instance$props$fontF = _instance$props.fontFamily,\n    fontFamily = _instance$props$fontF === void 0 ? 'Helvetica' : _instance$props$fontF,\n    fontWeight = _instance$props.fontWeight,\n    fontStyle = _instance$props.fontStyle,\n    _instance$props$fontS = _instance$props.fontSize,\n    fontSize = _instance$props$fontS === void 0 ? 18 : _instance$props$fontS,\n    textDecorationColor = _instance$props.textDecorationColor,\n    textDecorationStyle = _instance$props.textDecorationStyle,\n    textTransform = _instance$props.textTransform,\n    opacity = _instance$props.opacity;\n  var _textDecoration = instance.props.textDecoration;\n  var obj = fontStore ? fontStore.getFont({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  }) : null;\n  var font = obj ? obj.data : fontFamily;\n  var attributes = {\n    font: font,\n    opacity: opacity,\n    fontSize: fontSize,\n    color: fill,\n    underlineStyle: textDecorationStyle,\n    underline: _textDecoration === 'underline' || _textDecoration === 'underline line-through' || _textDecoration === 'line-through underline',\n    underlineColor: textDecorationColor || fill,\n    strike: _textDecoration === 'line-through' || _textDecoration === 'underline line-through' || _textDecoration === 'line-through underline',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || fill\n  };\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n    if (isTextInstance$4(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      fragments.push.apply(fragments, getFragments(child));\n    }\n  }\n  return fragments;\n};\nvar getAttributedString$1 = function getAttributedString(fontStore, instance) {\n  return fromFragments(getFragments$1(fontStore, instance));\n};\nvar AlmostInfinity = 999999999999;\nvar shrinkWhitespaceFactor = {\n  before: -0.5,\n  after: -0.5\n};\nvar layoutTspan = function layoutTspan(fontStore) {\n  return function (node) {\n    var _node$props, _node$props2;\n    var attributedString = getAttributedString$1(fontStore, node);\n    var x = ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.x) || 0;\n    var y = ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.y) || 0;\n    var container = {\n      x: x,\n      y: y,\n      width: AlmostInfinity,\n      height: AlmostInfinity\n    };\n    var hyphenationCallback = node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null;\n    var layoutOptions = {\n      hyphenationCallback: hyphenationCallback,\n      shrinkWhitespaceFactor: shrinkWhitespaceFactor\n    };\n    var lines = engine$1(attributedString, container, layoutOptions).flat();\n    return Object.assign({}, node, {\n      lines: lines\n    });\n  };\n};\nvar layoutText$1 = function layoutText(fontStore, node) {\n  if (!node.children) return node;\n  var children = node.children.map(layoutTspan(fontStore));\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar isDefs = function isDefs(node) {\n  return node.type === P.Defs;\n};\nvar getDefs = function getDefs(node) {\n  var children = node.children || [];\n  var defs = children.find(isDefs) || {};\n  var values = defs.children || [];\n  return values.reduce(function (acc, value) {\n    var _value$props;\n    var id = (_value$props = value.props) === null || _value$props === void 0 ? void 0 : _value$props.id;\n    if (id) acc[id] = value;\n    return acc;\n  }, {});\n};\n\nvar isNotDefs = function isNotDefs(node) {\n  return node.type !== P.Defs;\n};\nvar detachDefs = function detachDefs(node) {\n  if (!node.children) return node;\n  var children = node.children.filter(isNotDefs);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\nvar URL_REGEX = /url\\(['\"]?#([^'\"]+)['\"]?\\)/;\nvar replaceDef = function replaceDef(defs, value) {\n  if (!value) return undefined;\n  if (!URL_REGEX.test(value)) return value;\n  var match = value.match(URL_REGEX);\n  return defs[match[1]];\n};\nvar parseNodeDefs = function parseNodeDefs(defs) {\n  return function (node) {\n    var _node$props, _node$props2;\n    var fill = replaceDef(defs, (_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fill);\n    var clipPath = replaceDef(defs, (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.clipPath);\n    var props = Object.assign({}, node.props, {\n      fill: fill,\n      clipPath: clipPath\n    });\n    var children = node.children ? node.children.map(parseNodeDefs(defs)) : undefined;\n    return Object.assign({}, node, {\n      props: props,\n      children: children\n    });\n  };\n};\nvar parseDefs = function parseDefs(root) {\n  if (!root.children) return root;\n  var defs = getDefs(root);\n  var children = root.children.map(parseNodeDefs(defs));\n  return Object.assign({}, root, {\n    children: children\n  });\n};\nvar replaceDefs = function replaceDefs(node) {\n  return detachDefs(parseDefs(node));\n};\n\nvar parseViewbox = function parseViewbox(value) {\n  if (!value) return null;\n  var values = value.split(/[,\\s]+/).map(parseFloat);\n  if (values.length !== 4) return null;\n  return {\n    minX: values[0],\n    minY: values[1],\n    maxX: values[2],\n    maxY: values[3]\n  };\n};\n\nvar getContainer$1 = function getContainer(node) {\n  var viewbox = parseViewbox(node.props.viewBox);\n  if (viewbox) {\n    return {\n      width: viewbox.maxX,\n      height: viewbox.maxY\n    };\n  }\n  if (node.props.width && node.props.height) {\n    return {\n      width: parseFloat(node.props.width),\n      height: parseFloat(node.props.height)\n    };\n  }\n  return {\n    width: 0,\n    height: 0\n  };\n};\n\nvar SVG_INHERITED_PROPS = ['x', 'y', 'clipPath', 'clipRule', 'opacity', 'fill', 'fillOpacity', 'fillRule', 'stroke', 'strokeLinecap', 'strokeLinejoin', 'strokeOpacity', 'strokeWidth', 'textAnchor', 'dominantBaseline', 'color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nvar getInheritProps = function getInheritProps(node) {\n  var props = node.props || {};\n  return pick(SVG_INHERITED_PROPS, props);\n};\nvar inheritProps = function inheritProps(node) {\n  if (!node.children) return node;\n  var inheritedProps = getInheritProps(node);\n  var children = node.children.map(function (child) {\n    var props = Object.assign({}, inheritedProps, child.props || {});\n    var newChild = Object.assign({}, child, {\n      props: props\n    });\n    return inheritProps(newChild);\n  });\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar parseAspectRatio = function parseAspectRatio(value) {\n  var match = value.replace(/[\\s\\r\\t\\n]+/gm, ' ').replace(/^defer\\s/, '').split(' ');\n  var align = match[0] || 'xMidYMid';\n  var meetOrSlice = match[1] || 'meet';\n  return {\n    align: align,\n    meetOrSlice: meetOrSlice\n  };\n};\n\nvar STYLE_PROPS = ['width', 'height', 'color', 'stroke', 'strokeWidth', 'opacity', 'fillOpacity', 'strokeOpacity', 'fill', 'fillRule', 'clipPath', 'offset', 'transform', 'strokeLinejoin', 'strokeLinecap', 'strokeDasharray'];\nvar VERTICAL_PROPS = ['y', 'y1', 'y2', 'height', 'cy', 'ry'];\nvar HORIZONTAL_PROPS = ['x', 'x1', 'x2', 'width', 'cx', 'rx'];\nvar isType$3 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\nvar isSvg$3 = isType$3(P.Svg);\nvar isText$4 = isType$3(P.Text);\nvar isTextInstance$3 = isType$3(P.TextInstance);\nvar transformPercent = function transformPercent(container) {\n  return function (props) {\n    return mapValues(props, function (value, key) {\n      var match = matchPercent(value);\n      if (match && VERTICAL_PROPS.includes(key)) {\n        return match.percent * container.height;\n      }\n      if (match && HORIZONTAL_PROPS.includes(key)) {\n        return match.percent * container.width;\n      }\n      return value;\n    });\n  };\n};\nvar parsePercent = function parsePercent(value) {\n  var match = matchPercent(value);\n  return match ? match.percent : parseFloat(value);\n};\nvar parseProps = function parseProps(container) {\n  return function (node) {\n    var props = transformPercent(container)(node.props);\n    props = evolve({\n      x: parseFloat,\n      x1: parseFloat,\n      x2: parseFloat,\n      y: parseFloat,\n      y1: parseFloat,\n      y2: parseFloat,\n      r: parseFloat,\n      rx: parseFloat,\n      ry: parseFloat,\n      cx: parseFloat,\n      cy: parseFloat,\n      width: parseFloat,\n      height: parseFloat,\n      offset: parsePercent,\n      fill: transformColor,\n      opacity: parsePercent,\n      stroke: transformColor,\n      stopOpacity: parsePercent,\n      stopColor: transformColor,\n      transform: processTransform\n    }, props);\n    return Object.assign({}, node, {\n      props: props\n    });\n  };\n};\nvar mergeStyles$1 = function mergeStyles(node) {\n  var style = node.style || {};\n  var props = Object.assign({}, style, node.props);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\nvar removeNoneValues = function removeNoneValues(node) {\n  var removeNone = function removeNone(value) {\n    return value === 'none' ? null : value;\n  };\n  var props = mapValues(node.props, removeNone);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\nvar pickStyleProps = function pickStyleProps(node) {\n  var props = node.props || {};\n  var styleProps = pick(STYLE_PROPS, props);\n  var style = Object.assign({}, styleProps, node.style || {});\n  return Object.assign({}, node, {\n    style: style\n  });\n};\nvar parseSvgProps = function parseSvgProps(node) {\n  var props = evolve({\n    width: parseFloat,\n    height: parseFloat,\n    viewBox: parseViewbox,\n    preserveAspectRatio: parseAspectRatio\n  }, node.props);\n  return Object.assign({}, node, {\n    props: props\n  });\n};\nvar wrapBetweenTspan = function wrapBetweenTspan(node) {\n  return {\n    type: P.Tspan,\n    props: {},\n    children: [node]\n  };\n};\nvar addMissingTspan = function addMissingTspan(node) {\n  if (!isText$4(node)) return node;\n  if (!node.children) return node;\n  var resolveChild = function resolveChild(child) {\n    return isTextInstance$3(child) ? wrapBetweenTspan(child) : child;\n  };\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\nvar parseText = function parseText(fontStore) {\n  return function (node) {\n    if (isText$4(node)) return layoutText$1(fontStore, node);\n    if (!node.children) return node;\n    var children = node.children.map(parseText(fontStore));\n    return Object.assign({}, node, {\n      children: children\n    });\n  };\n};\nvar resolveSvgNode = function resolveSvgNode(container) {\n  return compose(parseProps(container), addMissingTspan, removeNoneValues, mergeStyles$1);\n};\nvar resolveChildren = function resolveChildren(container) {\n  return function (node) {\n    if (!node.children) return node;\n    var resolveChild = compose(resolveChildren(container), resolveSvgNode(container));\n    var children = node.children.map(resolveChild);\n    return Object.assign({}, node, {\n      children: children\n    });\n  };\n};\nvar resolveSvgRoot = function resolveSvgRoot(node, fontStore) {\n  var container = getContainer$1(node);\n  return compose(replaceDefs, parseText(fontStore), parseSvgProps, pickStyleProps, inheritProps, resolveChildren(container))(node);\n};\n\n/**\n * Pre-process SVG nodes so they can be rendered in the next steps\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\nvar resolveSvg = function resolveSvg(node, fontStore) {\n  if (!node.children) return node;\n  var resolveChild = function resolveChild(child) {\n    return resolveSvg(child, fontStore);\n  };\n  var root = isSvg$3(node) ? resolveSvgRoot(node, fontStore) : node;\n  var children = root.children.map(resolveChild);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar getZIndex = function getZIndex(node) {\n  return node.style.zIndex;\n};\nvar shouldSort = function shouldSort(node) {\n  return node.type !== P.Document && node.type !== P.Svg;\n};\nvar sortZIndex = function sortZIndex(a, b) {\n  var za = getZIndex(a);\n  var zb = getZIndex(b);\n  if (!za && !zb) return 0;\n  if (!za) return 1;\n  if (!zb) return -1;\n  return zb - za;\n};\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nvar resolveZIndex = function resolveZIndex(node) {\n  if (!node.children) return node;\n  var sortedChildren = shouldSort(node) ? node.children.sort(sortZIndex) : node.children;\n  var children = sortedChildren.map(resolveZIndex);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\n// Caches emoji images data\nvar emojis = {};\nvar regex = emojiRegex();\nvar reflect = function reflect(promise) {\n  return function () {\n    return promise.apply(void 0, arguments).then(function (v) {\n      return v;\n    }, function (e) {\n      return e;\n    });\n  };\n};\n\n// Returns a function to be able to mock resolveImage.\nvar makeFetchEmojiImage = function makeFetchEmojiImage() {\n  return reflect(resolveImage);\n};\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nvar _removeNoColor = function _removeNoColor(x) {\n  return x !== '️';\n};\nvar getCodePoints = function getCodePoints(string) {\n  return Array.from(string).filter(_removeNoColor).map(function (char) {\n    return char.codePointAt(0).toString(16);\n  }).join('-');\n};\nvar buildEmojiUrl = function buildEmojiUrl(emoji, source) {\n  var url = source.url,\n    format = source.format,\n    builder = source.builder;\n  if (typeof builder === 'function') {\n    return builder(getCodePoints(emoji));\n  }\n  return \"\" + url + getCodePoints(emoji) + \".\" + format;\n};\nvar fetchEmojis = function fetchEmojis(string, source) {\n  if (!source || !source.url && !source.builder) return [];\n  var promises = [];\n  Array.from(string.matchAll(regex)).forEach(function (match) {\n    var emoji = match[0];\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      var emojiUrl = buildEmojiUrl(emoji, source);\n      emojis[emoji] = {\n        loading: true\n      };\n      var fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(fetchEmojiImage({\n        uri: emojiUrl\n      }).then(function (image) {\n        emojis[emoji].loading = false;\n        emojis[emoji].data = image.data;\n      }));\n    }\n  });\n  return promises;\n};\nvar embedEmojis = function embedEmojis(fragments) {\n  var result = [];\n  var _loop = function _loop() {\n    var fragment = fragments[i];\n    var lastIndex = 0;\n    Array.from(fragment.string.matchAll(regex)).forEach(function (match) {\n      var index = match.index;\n      var emoji = match[0];\n      var emojiSize = fragment.attributes.fontSize;\n      var chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: _extends({}, fragment.attributes, {\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data\n            }\n          })\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes\n        });\n      }\n      lastIndex = index + emoji.length;\n    });\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes\n      });\n    }\n  };\n  for (var i = 0; i < fragments.length; i += 1) {\n    _loop();\n  }\n  return result;\n};\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String | Object} image src\n */\nvar getSource = function getSource(node) {\n  var _node$props, _node$props2, _node$props3;\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.src) || ((_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.source) || ((_node$props3 = node.props) === null || _node$props3 === void 0 ? void 0 : _node$props3.href);\n};\n\n/**\n * Resolves `src` to `@react-pdf/image` interface.\n *\n * Also it handles factories and async sources.\n *\n * @param {string | Object | Function} src\n * @returns {object} resolved src\n */\nvar resolveSource = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(src) {\n    var source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(typeof src === 'function')) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 3;\n          return src();\n        case 3:\n          _context.t0 = _context.sent;\n          _context.next = 9;\n          break;\n        case 6:\n          _context.next = 8;\n          return src;\n        case 8:\n          _context.t0 = _context.sent;\n        case 9:\n          source = _context.t0;\n          return _context.abrupt(\"return\", typeof source === 'string' ? {\n            uri: source\n          } : source);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function resolveSource(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n/**\n * Fetches image and append data to node\n * Ideally this fn should be immutable.\n *\n * @param {Object} node\n */\nvar fetchImage = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node) {\n    var src, cache, source;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          src = getSource(node);\n          cache = node.props.cache;\n          if (src) {\n            _context.next = 5;\n            break;\n          }\n          console.warn(false, 'Image should receive either a \"src\" or \"source\" prop');\n          return _context.abrupt(\"return\");\n        case 5:\n          _context.prev = 5;\n          _context.next = 8;\n          return resolveSource(src);\n        case 8:\n          source = _context.sent;\n          if (source) {\n            _context.next = 11;\n            break;\n          }\n          throw new Error(\"Image's \\\"src\\\" or \\\"source\\\" prop returned \" + source);\n        case 11:\n          _context.next = 13;\n          return resolveImage(source, {\n            cache: cache\n          });\n        case 13:\n          node.image = _context.sent;\n          node.image.key = source.data ? source.data.toString() : source.uri;\n          _context.next = 21;\n          break;\n        case 17:\n          _context.prev = 17;\n          _context.t0 = _context[\"catch\"](5);\n          node.image = {\n            width: 0,\n            height: 0,\n            key: null\n          };\n          console.warn(_context.t0.message);\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[5, 17]]);\n  }));\n  return function fetchImage(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isImage$2 = function isImage(node) {\n  return node.type === P.Image;\n};\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nvar fetchAssets = function fetchAssets(fontStore, node) {\n  var _node$children;\n  var promises = [];\n  var listToExplore = ((_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.slice(0)) || [];\n  var emojiSource = fontStore ? fontStore.getEmojiSource() : null;\n  while (listToExplore.length > 0) {\n    var _n$style;\n    var n = listToExplore.shift();\n    if (isImage$2(n)) {\n      promises.push(fetchImage(n));\n    }\n    if (fontStore && (_n$style = n.style) !== null && _n$style !== void 0 && _n$style.fontFamily) {\n      promises.push(fontStore.load(n.style));\n    }\n    if (typeof n === 'string') {\n      promises.push.apply(promises, fetchEmojis(n, emojiSource));\n    }\n    if (typeof n.value === 'string') {\n      promises.push.apply(promises, fetchEmojis(n.value, emojiSource));\n    }\n    if (n.children) {\n      n.children.forEach(function (childNode) {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @param {Object} fontStore font store\n * @returns {Object} root node\n */\nvar resolveAssets = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(node, fontStore) {\n    var promises;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          promises = fetchAssets(fontStore, node);\n          _context.next = 3;\n          return Promise.all(promises);\n        case 3:\n          return _context.abrupt(\"return\", node);\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function resolveAssets(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar isLink$1 = function isLink(node) {\n  return node.type === P.Link;\n};\nvar DEFAULT_LINK_STYLES = {\n  color: 'blue',\n  textDecoration: 'underline'\n};\n\n/**\n * Computes styles using stylesheet\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} computed styles\n */\nvar computeStyle = function computeStyle(container, node) {\n  var baseStyle = node.style;\n  if (isLink$1(node)) {\n    baseStyle = Array.isArray(node.style) ? [DEFAULT_LINK_STYLES].concat(node.style) : [DEFAULT_LINK_STYLES, node.style];\n  }\n  return stylesheet(container, baseStyle);\n};\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nvar resolveNodeStyles = function resolveNodeStyles(container) {\n  return function (node) {\n    var style = computeStyle(container, node);\n    if (!node.children) return Object.assign({}, node, {\n      style: style\n    });\n    var children = node.children.map(resolveNodeStyles(container));\n    return Object.assign({}, node, {\n      style: style,\n      children: children\n    });\n  };\n};\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nvar resolvePageStyles = function resolvePageStyles(page) {\n  var _page$props, _page$box, _page$box2, _page$props2;\n  var dpi = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.dpi) || 72;\n  var width = ((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.width) || page.style.width;\n  var height = ((_page$box2 = page.box) === null || _page$box2 === void 0 ? void 0 : _page$box2.height) || page.style.height;\n  var orientation = ((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.orientation) || 'portrait';\n  var container = {\n    width: width,\n    height: height,\n    orientation: orientation,\n    dpi: dpi\n  };\n  return resolveNodeStyles(container)(page);\n};\n\n/**\n * Resolves document styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nvar resolveStyles = function resolveStyles(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePageStyles);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar getTransformStyle = function getTransformStyle(s) {\n  return function (node) {\n    var _node$style, _node$style2;\n    return isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style[s]) ? '50%' : (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2[s];\n  };\n};\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nvar getOrigin = function getOrigin(node) {\n  if (!node.box) return {};\n  var _node$box = node.box,\n    left = _node$box.left,\n    top = _node$box.top,\n    width = _node$box.width,\n    height = _node$box.height;\n  var transformOriginX = getTransformStyle('transformOriginX')(node);\n  var transformOriginY = getTransformStyle('transformOriginY')(node);\n  var percentX = matchPercent(transformOriginX);\n  var percentY = matchPercent(transformOriginY);\n  var offsetX = percentX ? width * percentX.percent : transformOriginX;\n  var offsetY = percentY ? height * percentY.percent : transformOriginY;\n  return {\n    left: left + offsetX,\n    top: top + offsetY\n  };\n};\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nvar resolveNodeOrigin = function resolveNodeOrigin(node) {\n  var origin = getOrigin(node);\n  var newNode = Object.assign({}, node, {\n    origin: origin\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(resolveNodeOrigin);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\n\nvar resolveOrigin = function resolveOrigin(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolveNodeOrigin);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\n/* eslint-disable no-plusplus */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n\nvar getBookmarkValue = function getBookmarkValue(title) {\n  return typeof title === 'string' ? {\n    title: title,\n    fit: false,\n    expanded: false\n  } : title;\n};\nvar resolveBookmarks = function resolveBookmarks(node) {\n  var refs = 0;\n  var children = (node.children || []).slice(0);\n  var listToExplore = children.map(function (value) {\n    return {\n      value: value,\n      parent: null\n    };\n  });\n  var _loop = function _loop() {\n    var _child$props;\n    var element = listToExplore.shift();\n    var child = element.value;\n    var parent = element.parent;\n    if ((_child$props = child.props) !== null && _child$props !== void 0 && _child$props.bookmark) {\n      var _parent;\n      var bookmark = getBookmarkValue(child.props.bookmark);\n      var ref = refs++;\n      var newHierarchy = _extends({\n        ref: ref,\n        parent: (_parent = parent) === null || _parent === void 0 ? void 0 : _parent.ref\n      }, bookmark);\n      child.props.bookmark = newHierarchy;\n      parent = newHierarchy;\n    }\n    if (child.children) {\n      child.children.forEach(function (childNode) {\n        listToExplore.push({\n          value: childNode,\n          parent: parent\n        });\n      });\n    }\n  };\n  while (listToExplore.length > 0) {\n    _loop();\n  }\n  return node;\n};\n\nvar VALID_ORIENTATIONS = ['portrait', 'landscape'];\n\n/**\n * Get page orientation. Defaults to portrait\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nvar getOrientation = function getOrientation(page) {\n  var _page$props;\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.orientation) || 'portrait';\n  return VALID_ORIENTATIONS.includes(value) ? value : 'portrait';\n};\n\n/**\n * Return true if page is landscape\n *\n * @param {Object} page instance\n * @returns {Boolean} is page landscape\n */\nvar isLandscape = function isLandscape(page) {\n  return getOrientation(page) === 'landscape';\n};\n\nvar PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n  ID1: [153, 243]\n};\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nvar toSizeObject = function toSizeObject(v) {\n  return {\n    width: v[0],\n    height: v[1]\n  };\n};\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nvar flipSizeObject = function flipSizeObject(v) {\n  return {\n    width: v.height,\n    height: v.width\n  };\n};\n\n/**\n * Adjust page size to passed DPI\n *\n * @param {Object} size object\n * @param {number} dpi\n * @returns {Object} adjusted size object\n */\nvar adjustDpi = function adjustDpi(v, dpi) {\n  return {\n    width: v.width ? v.width * dpi : v.width,\n    height: v.height ? v.height * dpi : v.height\n  };\n};\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nvar getStringSize = function getStringSize(v) {\n  return toSizeObject(PAGE_SIZES[v.toUpperCase()]);\n};\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nvar getNumberSize = function getNumberSize(n) {\n  return toSizeObject([n]);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nvar getSize = function getSize(page) {\n  var _page$props, _page$props2;\n  var value = ((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.size) || 'A4';\n  var dpi = parseFloat(((_page$props2 = page.props) === null || _page$props2 === void 0 ? void 0 : _page$props2.dpi) || 72);\n  var type = typeof value;\n  var size = value;\n  if (type === 'string') {\n    size = getStringSize(value);\n  } else if (Array.isArray(value)) {\n    size = toSizeObject(value);\n  } else if (type === 'number') {\n    size = getNumberSize(value);\n  }\n  size = adjustDpi(size, dpi / 72);\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nvar resolvePageSize = function resolvePageSize(page) {\n  var size = getSize(page);\n  var style = flatten(page.style || {});\n  return _extends({}, page, {\n    style: _extends({}, style, size)\n  });\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nvar resolvePageSizes = function resolvePageSizes(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePageSize);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar isFixed = function isFixed(node) {\n  var _node$props;\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.fixed) === true;\n};\n\n/**\n * Get line index at given height\n *\n * @param {Object} node\n * @param {Number} height\n */\nvar lineIndexAtHeight = function lineIndexAtHeight(node, height) {\n  var y = 0;\n  if (!node.lines) return 0;\n  for (var i = 0; i < node.lines.length; i += 1) {\n    var line = node.lines[i];\n    if (y + line.box.height > height) return i;\n    y += line.box.height;\n  }\n  return node.lines.length;\n};\n\n/**\n * Get height for given text line index\n *\n * @param {Object} node\n * @param {Number} index\n */\nvar heightAtLineIndex = function heightAtLineIndex(node, index) {\n  var counter = 0;\n  if (!node.lines) return counter;\n  for (var i = 0; i < index; i += 1) {\n    var line = node.lines[i];\n    if (!line) break;\n    counter += line.box.height;\n  }\n  return counter;\n};\n\nvar getLineBreak = function getLineBreak(node, height) {\n  var top = get(node, ['box', 'top'], 0);\n  var widows = get(node, ['props', 'widows'], 2);\n  var orphans = get(node, ['props', 'orphans'], 2);\n  var linesQuantity = node.lines.length;\n  var slicedLine = lineIndexAtHeight(node, height - top);\n  if (slicedLine === 0) {\n    return 0;\n  }\n  if (linesQuantity < orphans) {\n    return linesQuantity;\n  }\n  if (slicedLine < orphans || linesQuantity < orphans + widows) {\n    return 0;\n  }\n  if (linesQuantity === orphans + widows) {\n    return orphans;\n  }\n  if (linesQuantity - slicedLine < widows) {\n    return linesQuantity - widows;\n  }\n  return slicedLine;\n};\n\n// Also receives contentArea in case it's needed\nvar splitText = function splitText(node, height) {\n  var slicedLineIndex = getLineBreak(node, height);\n  var currentHeight = heightAtLineIndex(node, slicedLineIndex);\n  var nextHeight = node.box.height - currentHeight;\n  var current = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      height: currentHeight,\n      borderBottomWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginBottom: 0,\n      paddingBottom: 0,\n      borderBottomWidth: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    }),\n    lines: node.lines.slice(0, slicedLineIndex)\n  });\n  var next = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      top: 0,\n      height: nextHeight,\n      borderTopWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginTop: 0,\n      paddingTop: 0,\n      borderTopWidth: 0,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    }),\n    lines: node.lines.slice(slicedLineIndex)\n  });\n  return [current, next];\n};\n\nvar getTop$1 = function getTop(node) {\n  var _node$box;\n  return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\nvar hasFixedHeight = function hasFixedHeight(node) {\n  var _node$style;\n  return !isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height);\n};\nvar splitNode = function splitNode(node, height) {\n  if (!node) return [null, null];\n  var nodeTop = getTop$1(node);\n  var current = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      borderBottomWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginBottom: 0,\n      paddingBottom: 0,\n      borderBottomWidth: 0,\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    })\n  });\n  current.style.height = height - nodeTop;\n  var nextHeight = hasFixedHeight(node) ? node.box.height - (height - nodeTop) : null;\n  var next = Object.assign({}, node, {\n    box: _extends({}, node.box, {\n      top: 0,\n      borderTopWidth: 0\n    }),\n    style: _extends({}, node.style, {\n      marginTop: 0,\n      paddingTop: 0,\n      borderTopWidth: 0,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    })\n  });\n  if (nextHeight) {\n    next.style.height = nextHeight;\n  }\n  return [current, next];\n};\n\nvar NON_WRAP_TYPES = [P.Svg, P.Note, P.Image, P.Canvas];\nvar getWrap = function getWrap(node) {\n  var _node$props;\n  if (NON_WRAP_TYPES.includes(node.type)) return false;\n  return isNil((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.wrap) ? true : node.props.wrap;\n};\n\nvar getComputedPadding = function getComputedPadding(node, edge) {\n  var yogaNode = node.yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed paddings. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nvar getPadding = function getPadding(node) {\n  var style = node.style,\n    box = node.box;\n  var paddingTop = getComputedPadding(node, Yoga.EDGE_TOP) || (box === null || box === void 0 ? void 0 : box.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingTop) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingRight = getComputedPadding(node, Yoga.EDGE_RIGHT) || (box === null || box === void 0 ? void 0 : box.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingRight) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingBottom = getComputedPadding(node, Yoga.EDGE_BOTTOM) || (box === null || box === void 0 ? void 0 : box.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingBottom) || (style === null || style === void 0 ? void 0 : style.paddingVertical) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  var paddingLeft = getComputedPadding(node, Yoga.EDGE_LEFT) || (box === null || box === void 0 ? void 0 : box.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingLeft) || (style === null || style === void 0 ? void 0 : style.paddingHorizontal) || (style === null || style === void 0 ? void 0 : style.padding) || 0;\n  return {\n    paddingTop: paddingTop,\n    paddingRight: paddingRight,\n    paddingBottom: paddingBottom,\n    paddingLeft: paddingLeft\n  };\n};\n\nvar getWrapArea = function getWrapArea(page) {\n  var _page$style;\n  var _getPadding = getPadding(page),\n    paddingBottom = _getPadding.paddingBottom;\n  var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n  return height - paddingBottom;\n};\n\nvar getContentArea = function getContentArea(page) {\n  var _page$style;\n  var height = (_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.height;\n  var _getPadding = getPadding(page),\n    paddingTop = _getPadding.paddingTop,\n    paddingBottom = _getPadding.paddingBottom;\n  return height - paddingBottom - paddingTop;\n};\n\nvar _excluded = [\"style\", \"children\"];\nvar isString = function isString(value) {\n  return typeof value === 'string';\n};\nvar isNumber = function isNumber(value) {\n  return typeof value === 'number';\n};\nvar isFragment = function isFragment(value) {\n  return value && value.type === Symbol.for('react.fragment');\n};\n\n/**\n * Transforms a react element instance to internal element format.\n *\n * Can return multiple instances in the case of arrays or fragments.\n *\n * @param {Object} React element\n * @returns {Array} parsed react elements\n */\nvar createInstances = function createInstances(element) {\n  if (!element) return [];\n  if (isString(element) || isNumber(element)) {\n    return [{\n      type: TextInstance,\n      value: \"\" + element\n    }];\n  }\n  if (isFragment(element)) {\n    return createInstances(element.props.children);\n  }\n  if (Array.isArray(element)) {\n    return element.reduce(function (acc, el) {\n      return acc.concat(createInstances(el));\n    }, []);\n  }\n  if (!isString(element.type)) {\n    return createInstances(element.type(element.props));\n  }\n  var type = element.type,\n    _element$props = element.props,\n    _element$props$style = _element$props.style,\n    style = _element$props$style === void 0 ? {} : _element$props$style,\n    _element$props$childr = _element$props.children,\n    children = _element$props$childr === void 0 ? [] : _element$props$childr,\n    props = _objectWithoutPropertiesLoose(_element$props, _excluded);\n  var nextChildren = castArray(children).reduce(function (acc, child) {\n    return acc.concat(createInstances(child));\n  }, []);\n  return [{\n    type: type,\n    style: style,\n    props: props,\n    box: {},\n    children: nextChildren\n  }];\n};\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nvar getNodesHeight = function getNodesHeight(nodes) {\n  var max = 0;\n  var min = Infinity;\n  if (!nodes || nodes.length === 0) return 0;\n  for (var i = 0; i < nodes.length; i += 1) {\n    var node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n  return max - min;\n};\n\n/* eslint-disable no-continue */\nvar getBreak = function getBreak(node) {\n  var _node$props;\n  return ((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.break) || false;\n};\nvar getMinPresenceAhead = function getMinPresenceAhead(node) {\n  var _node$props2;\n  return (_node$props2 = node.props) === null || _node$props2 === void 0 ? void 0 : _node$props2.minPresenceAhead;\n};\nvar defaultPresenceAhead = function defaultPresenceAhead(element) {\n  return function (height) {\n    return Math.min(element.box.height, height);\n  };\n};\nvar getPresenceAhead = function getPresenceAhead(elements, height) {\n  var result = 0;\n  for (var i = 0; i < elements.length; i += 1) {\n    var element = elements[i];\n    if (!element.box) continue;\n    var isElementInside = height > element.box.top;\n    var presenceAhead = element.props.presenceAhead || defaultPresenceAhead(element);\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n  return result;\n};\nvar shouldBreak = function shouldBreak(child, futureElements, height) {\n  var minPresenceAhead = getMinPresenceAhead(child);\n  var presenceAhead = getPresenceAhead(futureElements, height);\n  var futureHeight = getNodesHeight(futureElements);\n  var shouldSplit = height < child.box.top + child.box.height;\n  var shouldWrap = getWrap(child);\n  return getBreak(child) || !shouldWrap && shouldSplit || minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead;\n};\n\nvar IGNORABLE_CODEPOINTS = [8232,\n// LINE_SEPARATOR\n8233 // PARAGRAPH_SEPARATOR\n];\n\nvar buildSubsetForFont = function buildSubsetForFont(font) {\n  return IGNORABLE_CODEPOINTS.reduce(function (acc, codePoint) {\n    if (font && font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [].concat(acc, [String.fromCharCode(codePoint)]);\n  }, []);\n};\nvar ignoreChars = function ignoreChars(fragments) {\n  return fragments.map(function (fragment) {\n    var charSubset = buildSubsetForFont(fragment.attributes.font);\n    var subsetRegex = new RegExp(charSubset.join('|'));\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes\n    };\n  });\n};\n\nvar PREPROCESSORS = [ignoreChars, embedEmojis];\nvar isImage$1 = function isImage(node) {\n  return node.type === P.Image;\n};\nvar isTextInstance$2 = function isTextInstance(node) {\n  return node.type === P.TextInstance;\n};\n\n/**\n * Get textkit fragments of given node object\n *\n * @param {Object} font store\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nvar getFragments = function getFragments(fontStore, instance, parentLink, level) {\n  var _instance$props, _instance$props2;\n  if (level === void 0) {\n    level = 0;\n  }\n  if (!instance) return [{\n    string: ''\n  }];\n  var fragments = [];\n  var _instance$style = instance.style,\n    _instance$style$color = _instance$style.color,\n    color = _instance$style$color === void 0 ? 'black' : _instance$style$color,\n    _instance$style$fontF = _instance$style.fontFamily,\n    fontFamily = _instance$style$fontF === void 0 ? 'Helvetica' : _instance$style$fontF,\n    fontWeight = _instance$style.fontWeight,\n    fontStyle = _instance$style.fontStyle,\n    _instance$style$fontS = _instance$style.fontSize,\n    fontSize = _instance$style$fontS === void 0 ? 18 : _instance$style$fontS,\n    _instance$style$textA = _instance$style.textAlign,\n    textAlign = _instance$style$textA === void 0 ? 'left' : _instance$style$textA,\n    lineHeight = _instance$style.lineHeight,\n    textDecoration = _instance$style.textDecoration,\n    textDecorationColor = _instance$style.textDecorationColor,\n    textDecorationStyle = _instance$style.textDecorationStyle,\n    textTransform = _instance$style.textTransform,\n    letterSpacing = _instance$style.letterSpacing,\n    textIndent = _instance$style.textIndent,\n    opacity = _instance$style.opacity,\n    verticalAlign = _instance$style.verticalAlign;\n  var opts = {\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle\n  };\n  var obj = fontStore ? fontStore.getFont(opts) : null;\n  var font = obj ? obj.data : fontFamily;\n\n  // Don't pass main background color to textkit. Will be rendered by the render package instead\n  var backgroundColor = level === 0 ? null : instance.style.backgroundColor;\n  var attributes = {\n    font: font,\n    color: color,\n    opacity: opacity,\n    fontSize: fontSize,\n    backgroundColor: backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    characterSpacing: letterSpacing,\n    strikeStyle: textDecorationStyle,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strike: textDecoration === 'line-through' || textDecoration === 'underline line-through' || textDecoration === 'line-through underline',\n    strikeColor: textDecorationColor || color,\n    underlineColor: textDecorationColor || color,\n    link: parentLink || ((_instance$props = instance.props) === null || _instance$props === void 0 ? void 0 : _instance$props.src) || ((_instance$props2 = instance.props) === null || _instance$props2 === void 0 ? void 0 : _instance$props2.href),\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n    verticalAlign: verticalAlign\n  };\n  for (var i = 0; i < instance.children.length; i += 1) {\n    var child = instance.children[i];\n    if (isImage$1(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: _extends({}, attributes, {\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data\n          }\n        })\n      });\n    } else if (isTextInstance$2(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes: attributes\n      });\n    } else if (child) {\n      var _fragments;\n      (_fragments = fragments).push.apply(_fragments, getFragments(fontStore, child, attributes.link, level + 1));\n    }\n  }\n  for (var _i = 0; _i < PREPROCESSORS.length; _i += 1) {\n    var preprocessor = PREPROCESSORS[_i];\n    fragments = preprocessor(fragments);\n  }\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} font store\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nvar getAttributedString = function getAttributedString(fontStore, instance) {\n  var fragments = getFragments(fontStore, instance);\n  return fromFragments(fragments);\n};\n\nvar engines = {\n  linebreaker: linebreaker,\n  justification: justification,\n  textDecoration: textDecoration,\n  scriptItemizer: scriptItemizer,\n  wordHyphenation: wordHyphenation,\n  fontSubstitution: fontSubstitution\n};\nvar engine = layoutEngine(engines);\nvar getMaxLines = function getMaxLines(node) {\n  var _node$style;\n  return (_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.maxLines;\n};\nvar getTextOverflow = function getTextOverflow(node) {\n  var _node$style2;\n  return (_node$style2 = node.style) === null || _node$style2 === void 0 ? void 0 : _node$style2.textOverflow;\n};\n\n/**\n * Get layout container for specific text node\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Object} node\n * @returns {Object} layout container\n */\nvar getContainer = function getContainer(width, height, node) {\n  var maxLines = getMaxLines(node);\n  var textOverflow = getTextOverflow(node);\n  return {\n    x: 0,\n    y: 0,\n    width: width,\n    maxLines: maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nvar getLayoutOptions = function getLayoutOptions(fontStore, node) {\n  return {\n    hyphenationPenalty: node.props.hyphenationPenalty,\n    shrinkWhitespaceFactor: {\n      before: -0.5,\n      after: -0.5\n    },\n    hyphenationCallback: node.props.hyphenationCallback || (fontStore === null || fontStore === void 0 ? void 0 : fontStore.getHyphenationCallback()) || null\n  };\n};\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @param {Number} fontStore font store\n * @returns {Array} layout lines\n */\nvar layoutText = function layoutText(node, width, height, fontStore) {\n  var attributedString = getAttributedString(fontStore, node);\n  var container = getContainer(width, height, node);\n  var options = getLayoutOptions(fontStore, node);\n  var lines = engine(attributedString, container, options);\n  return lines.reduce(function (acc, line) {\n    return [].concat(acc, line);\n  }, []);\n};\n\nvar isType$2 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\nvar isSvg$2 = isType$2(P.Svg);\nvar isText$3 = isType$2(P.Text);\nvar shouldIterate = function shouldIterate(node) {\n  return !isSvg$2(node) && !isText$3(node);\n};\nvar shouldLayoutText = function shouldLayoutText(node) {\n  return isText$3(node) && !node.lines;\n};\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layout node\n */\nvar resolveTextLayout = function resolveTextLayout(node, fontStore) {\n  if (shouldLayoutText(node)) {\n    var width = node.box.width - (node.box.paddingRight + node.box.paddingLeft);\n    var height = node.box.height - (node.box.paddingTop + node.box.paddingBottom);\n\n    // eslint-disable-next-line no-param-reassign\n    node.lines = layoutText(node, width, height, fontStore);\n  }\n  if (shouldIterate(node)) {\n    if (!node.children) return node;\n    var mapChild = function mapChild(child) {\n      return resolveTextLayout(child, fontStore);\n    };\n    var children = node.children.map(mapChild);\n    return Object.assign({}, node, {\n      children: children\n    });\n  }\n  return node;\n};\n\nvar INHERITED_PROPERTIES = ['color', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'opacity', 'textDecoration', 'textTransform', 'lineHeight', 'textAlign', 'visibility', 'wordSpacing'];\nvar isSvg$1 = function isSvg(node) {\n  return node.type === P.Svg;\n};\n\n// Merge style values\nvar mergeValues = function mergeValues(styleName, value, inheritedValue) {\n  switch (styleName) {\n    case 'textDecoration':\n      {\n        // merge not none and not false textDecoration values to one rule\n        return [inheritedValue, value].filter(function (v) {\n          return v && v !== 'none';\n        }).join(' ');\n      }\n    default:\n      return value;\n  }\n};\n\n// Merge inherited and node styles\nvar merge = function merge(inheritedStyles, style) {\n  var mergedStyles = _extends({}, inheritedStyles);\n  Object.entries(style).forEach(function (_ref) {\n    var styleName = _ref[0],\n      value = _ref[1];\n    mergedStyles[styleName] = mergeValues(styleName, value, inheritedStyles[styleName]);\n  });\n  return mergedStyles;\n};\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nvar mergeStyles = function mergeStyles(inheritedStyles) {\n  return function (node) {\n    var style = merge(inheritedStyles, node.style || {});\n    return Object.assign({}, node, {\n      style: style\n    });\n  };\n};\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nvar resolveInheritance = function resolveInheritance(node) {\n  if (isSvg$1(node)) return node;\n  if (!node.children) return node;\n  var inheritStyles = pick(INHERITED_PROPERTIES, node.style || {});\n  var resolveChild = compose(resolveInheritance, mergeStyles(inheritStyles));\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar getComputedMargin = function getComputedMargin(node, edge) {\n  var yogaNode = node.yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nvar getMargin = function getMargin(node) {\n  var style = node.style,\n    box = node.box;\n  var marginTop = getComputedMargin(node, Yoga.EDGE_TOP) || (box === null || box === void 0 ? void 0 : box.marginTop) || (style === null || style === void 0 ? void 0 : style.marginTop) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginRight = getComputedMargin(node, Yoga.EDGE_RIGHT) || (box === null || box === void 0 ? void 0 : box.marginRight) || (style === null || style === void 0 ? void 0 : style.marginRight) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginBottom = getComputedMargin(node, Yoga.EDGE_BOTTOM) || (box === null || box === void 0 ? void 0 : box.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginBottom) || (style === null || style === void 0 ? void 0 : style.marginVertical) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  var marginLeft = getComputedMargin(node, Yoga.EDGE_LEFT) || (box === null || box === void 0 ? void 0 : box.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginLeft) || (style === null || style === void 0 ? void 0 : style.marginHorizontal) || (style === null || style === void 0 ? void 0 : style.margin) || 0;\n  return {\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom,\n    marginLeft: marginLeft\n  };\n};\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nvar getPosition = function getPosition(node) {\n  var yogaNode = node.yogaNode;\n  return {\n    top: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedTop()) || 0,\n    right: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedRight()) || 0,\n    bottom: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedBottom()) || 0,\n    left: (yogaNode === null || yogaNode === void 0 ? void 0 : yogaNode.getComputedLeft()) || 0\n  };\n};\n\nvar DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nvar getDimension = function getDimension(node) {\n  var yogaNode = node.yogaNode;\n  if (!yogaNode) return DEFAULT_DIMENSION;\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight()\n  };\n};\n\nvar getComputedBorder = function getComputedBorder(yogaNode, edge) {\n  return yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n};\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nvar getBorderWidth = function getBorderWidth(node) {\n  var yogaNode = node.yogaNode;\n  return {\n    borderTopWidth: getComputedBorder(yogaNode, Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(yogaNode, Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(yogaNode, Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(yogaNode, Yoga.EDGE_LEFT)\n  };\n};\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setDisplay = function setDisplay(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (yogaNode) {\n      yogaNode.setDisplay(value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX);\n    }\n    return node;\n  };\n};\n\nvar OVERFLOW = {\n  hidden: Yoga.OVERFLOW_HIDDEN,\n  scroll: Yoga.OVERFLOW_SCROLL\n};\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setOverflow = function setOverflow(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      var overflow = OVERFLOW[value] || Yoga.OVERFLOW_VISIBLE;\n      yogaNode.setOverflow(overflow);\n    }\n    return node;\n  };\n};\n\nvar FLEX_WRAP = {\n  wrap: Yoga.WRAP_WRAP,\n  'wrap-reverse': Yoga.WRAP_WRAP_REVERSE\n};\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setFlexWrap = function setFlexWrap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (yogaNode) {\n      var flexWrap = FLEX_WRAP[value] || Yoga.WRAP_NO_WRAP;\n      yogaNode.setFlexWrap(flexWrap);\n    }\n    return node;\n  };\n};\n\n/* eslint-disable no-unused-expressions */\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setYogaValue = function setYogaValue(attr, edge) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node.yogaNode;\n      if (!isNil(value) && yogaNode) {\n        var hasEdge = !isNil(edge);\n        var fixedMethod = \"set\" + upperFirst(attr);\n        var autoMethod = fixedMethod + \"Auto\";\n        var percentMethod = fixedMethod + \"Percent\";\n        var percent = matchPercent(value);\n        if (percent && !yogaNode[percentMethod]) {\n          throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n        }\n        if (percent) {\n          if (hasEdge) {\n            var _yogaNode$percentMeth;\n            (_yogaNode$percentMeth = yogaNode[percentMethod]) === null || _yogaNode$percentMeth === void 0 ? void 0 : _yogaNode$percentMeth.call(yogaNode, edge, percent.value);\n          } else {\n            var _yogaNode$percentMeth2;\n            (_yogaNode$percentMeth2 = yogaNode[percentMethod]) === null || _yogaNode$percentMeth2 === void 0 ? void 0 : _yogaNode$percentMeth2.call(yogaNode, percent.value);\n          }\n        } else if (value === 'auto') {\n          if (hasEdge) {\n            var _yogaNode$autoMethod;\n            (_yogaNode$autoMethod = yogaNode[autoMethod]) === null || _yogaNode$autoMethod === void 0 ? void 0 : _yogaNode$autoMethod.call(yogaNode, edge);\n          } else {\n            var _yogaNode$autoMethod2;\n            (_yogaNode$autoMethod2 = yogaNode[autoMethod]) === null || _yogaNode$autoMethod2 === void 0 ? void 0 : _yogaNode$autoMethod2.call(yogaNode);\n          }\n        } else if (hasEdge) {\n          var _yogaNode$fixedMethod;\n          (_yogaNode$fixedMethod = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod === void 0 ? void 0 : _yogaNode$fixedMethod.call(yogaNode, edge, value);\n        } else {\n          var _yogaNode$fixedMethod2;\n          (_yogaNode$fixedMethod2 = yogaNode[fixedMethod]) === null || _yogaNode$fixedMethod2 === void 0 ? void 0 : _yogaNode$fixedMethod2.call(yogaNode, value);\n        }\n      }\n      return node;\n    };\n  };\n};\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setFlexGrow = function setFlexGrow(value) {\n  return function (node) {\n    return setYogaValue('flexGrow')(value || 0)(node);\n  };\n};\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setFlexBasis = setYogaValue('flexBasis');\n\nvar ALIGN = {\n  'flex-start': Yoga.ALIGN_FLEX_START,\n  center: Yoga.ALIGN_CENTER,\n  'flex-end': Yoga.ALIGN_FLEX_END,\n  stretch: Yoga.ALIGN_STRETCH,\n  baseline: Yoga.ALIGN_BASELINE,\n  'space-between': Yoga.ALIGN_SPACE_BETWEEN,\n  'space-around': Yoga.ALIGN_SPACE_AROUND\n};\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setAlign = function setAlign(attr) {\n  return function (value) {\n    return function (node) {\n      var yogaNode = node.yogaNode;\n      var defaultValue = attr === 'items' ? Yoga.ALIGN_STRETCH : Yoga.ALIGN_AUTO;\n      if (yogaNode) {\n        var align = ALIGN[value] || defaultValue;\n        yogaNode[\"setAlign\" + upperFirst(attr)](align);\n      }\n      return node;\n    };\n  };\n};\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setAlignSelf = setAlign('self');\n\n/**\n * Set align items attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setAlignItems = setAlign('items');\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setFlexShrink = function setFlexShrink(value) {\n  return function (node) {\n    return setYogaValue('flexShrink')(value || 1)(node);\n  };\n};\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setAspectRatio = function setAspectRatio(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n    return node;\n  };\n};\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setAlignContent = setAlign('content');\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPositionType = function setPositionType(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      yogaNode.setPositionType(value === 'absolute' ? Yoga.POSITION_TYPE_ABSOLUTE : Yoga.POSITION_TYPE_RELATIVE);\n    }\n    return node;\n  };\n};\n\nvar FLEX_DIRECTIONS = {\n  row: Yoga.FLEX_DIRECTION_ROW,\n  'row-reverse': Yoga.FLEX_DIRECTION_ROW_REVERSE,\n  'column-reverse': Yoga.FLEX_DIRECTION_COLUMN_REVERSE\n};\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setFlexDirection = function setFlexDirection(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (yogaNode) {\n      var flexDirection = FLEX_DIRECTIONS[value] || Yoga.FLEX_DIRECTION_COLUMN;\n      yogaNode.setFlexDirection(flexDirection);\n    }\n    return node;\n  };\n};\n\nvar JUSTIFY_CONTENT = {\n  center: Yoga.JUSTIFY_CENTER,\n  'flex-end': Yoga.JUSTIFY_FLEX_END,\n  'space-between': Yoga.JUSTIFY_SPACE_BETWEEN,\n  'space-around': Yoga.JUSTIFY_SPACE_AROUND,\n  'space-evenly': Yoga.JUSTIFY_SPACE_EVENLY\n};\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setJustifyContent = function setJustifyContent(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      var justifyContent = JUSTIFY_CONTENT[value] || Yoga.JUSTIFY_FLEX_START;\n      yogaNode.setJustifyContent(justifyContent);\n    }\n    return node;\n  };\n};\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setMaxHeight = setYogaValue('maxHeight');\n\nvar checkPercents = function checkPercents(attr, value) {\n  var percent = matchPercent(value);\n  if (percent) {\n    throw new Error(\"You can't pass percentage values to \" + attr + \" property\");\n  }\n};\n\n/**\n * Set rowGap value to node's Yoga instance\n *\n * @param {Number} gap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setRowGap = function setRowGap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      checkPercents('rowGap', value);\n      yogaNode.setGap(Yoga.GUTTER_ROW, value);\n    }\n    return node;\n  };\n};\n\n/**\n * Set columnGap value to node's Yoga instance\n *\n * @param {Number} gap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nvar setColumnGap = function setColumnGap(value) {\n  return function (node) {\n    var yogaNode = node.yogaNode;\n    if (!isNil(value) && yogaNode) {\n      checkPercents('columnGap', value);\n      yogaNode.setGap(Yoga.GUTTER_COLUMN, value);\n    }\n    return node;\n  };\n};\n\nvar getAspectRatio = function getAspectRatio(viewbox) {\n  if (!viewbox) return null;\n  return (viewbox.maxX - viewbox.minX) / (viewbox.maxY - viewbox.minY);\n};\n\n/**\n * Yoga svg measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nvar measureCanvas$1 = function measureCanvas(page, node) {\n  return function (width, widthMode, height, heightMode) {\n    var aspectRatio = getAspectRatio(node.props.viewBox) || 1;\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY || widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      return {\n        width: width,\n        height: width / aspectRatio\n      };\n    }\n    if (heightMode === Yoga.MEASURE_MODE_EXACTLY) {\n      return {\n        width: height * aspectRatio\n      };\n    }\n    return {};\n  };\n};\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nvar linesWidth = function linesWidth(node) {\n  if (!node.lines) return 0;\n  return Math.max.apply(Math, [0].concat(node.lines.map(function (line) {\n    return line.xAdvance;\n  })));\n};\n\n/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nvar linesHeight = function linesHeight(node) {\n  if (!node.lines) return -1;\n  return node.lines.reduce(function (acc, line) {\n    return acc + line.box.height;\n  }, 0);\n};\n\n/* eslint-disable no-param-reassign */\nvar ALIGNMENT_FACTORS = {\n  center: 0.5,\n  right: 1\n};\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nvar measureText = function measureText(page, node, fontStore) {\n  return function (width, widthMode, height) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      if (!node.lines) node.lines = layoutText(node, width, height, fontStore);\n      return {\n        height: linesHeight(node)\n      };\n    }\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n      var _node$style;\n      var alignFactor = ALIGNMENT_FACTORS[(_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.textAlign] || 0;\n      if (!node.lines) {\n        node.lines = layoutText(node, width, height, fontStore);\n        node.alignOffset = (width - linesWidth(node)) * alignFactor; // Compensate align in variable width containers\n      }\n\n      return {\n        height: linesHeight(node),\n        width: Math.min(width, linesWidth(node))\n      };\n    }\n    return {};\n  };\n};\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nvar getRatio = function getRatio(node) {\n  var _node$image;\n  return (_node$image = node.image) !== null && _node$image !== void 0 && _node$image.data ? node.image.width / node.image.height : 1;\n};\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nvar isHeightAuto = function isHeightAuto(page) {\n  var _page$box;\n  return isNil((_page$box = page.box) === null || _page$box === void 0 ? void 0 : _page$box.height);\n};\n\nvar SAFETY_HEIGHT$1 = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nvar measureImage = function measureImage(page, node) {\n  return function (width, widthMode, height, heightMode) {\n    var imageRatio = getRatio(node);\n    var imageMargin = getMargin(node);\n    var pagePadding = getPadding(page);\n    var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT$1;\n\n    // Skip measure if image data not present yet\n    if (!node.image) return {\n      width: 0,\n      height: 0\n    };\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_UNDEFINED) {\n      var scaledHeight = width / imageRatio;\n      return {\n        height: Math.min(pageArea, scaledHeight)\n      };\n    }\n    if (heightMode === Yoga.MEASURE_MODE_EXACTLY && (widthMode === Yoga.MEASURE_MODE_AT_MOST || widthMode === Yoga.MEASURE_MODE_UNDEFINED)) {\n      return {\n        width: Math.min(height * imageRatio, width)\n      };\n    }\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      var _scaledHeight = width / imageRatio;\n      return {\n        height: Math.min(height, pageArea, _scaledHeight)\n      };\n    }\n    if (widthMode === Yoga.MEASURE_MODE_AT_MOST && heightMode === Yoga.MEASURE_MODE_AT_MOST) {\n      if (imageRatio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / imageRatio, height)\n        };\n      }\n      return {\n        height: height,\n        width: Math.min(height * imageRatio, width)\n      };\n    }\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n\n/* eslint-disable no-param-reassign */\nvar SAFETY_HEIGHT = 10;\nvar getMax = function getMax(values) {\n  return Math.max.apply(Math, [-Infinity].concat(values));\n};\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nvar measureCtx = function measureCtx() {\n  var ctx = {};\n  var points = [];\n  var nil = function nil() {\n    return ctx;\n  };\n  var addPoint = function addPoint(x, y) {\n    return points.push([x, y]);\n  };\n  var moveTo = function moveTo() {\n    addPoint.apply(void 0, arguments);\n    return ctx;\n  };\n  var rect = function rect(x, y, w, h) {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n  var ellipse = function ellipse(x, y, rx, ry) {\n    ry = ry || rx;\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n    return ctx;\n  };\n  var polygon = function polygon() {\n    points.push.apply(points, arguments);\n    return ctx;\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n  ctx.getWidth = function () {\n    return getMax(points.map(function (p) {\n      return p[0];\n    }));\n  };\n  ctx.getHeight = function () {\n    return getMax(points.map(function (p) {\n      return p[1];\n    }));\n  };\n  return ctx;\n};\n\n/**\n * Yoga canvas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nvar measureCanvas = function measureCanvas(page, node) {\n  return function () {\n    var imageMargin = getMargin(node);\n    var pagePadding = getPadding(page);\n    var pageArea = isHeightAuto(page) ? Infinity : page.box.height - pagePadding.paddingTop - pagePadding.paddingBottom - imageMargin.marginTop - imageMargin.marginBottom - SAFETY_HEIGHT;\n    var ctx = measureCtx();\n    node.props.paint(ctx);\n    var width = ctx.getWidth();\n    var height = Math.min(pageArea, ctx.getHeight());\n    return {\n      height: height,\n      width: width\n    };\n  };\n};\n\nvar YOGA_CONFIG = Yoga.Config.create();\nYOGA_CONFIG.setPointScaleFactor(0);\nvar isType$1 = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\nvar isSvg = isType$1(P.Svg);\nvar isText$2 = isType$1(P.Text);\nvar isNote = isType$1(P.Note);\nvar isPage = isType$1(P.Page);\nvar isImage = isType$1(P.Image);\nvar isCanvas = isType$1(P.Canvas);\nvar isTextInstance$1 = isType$1(P.TextInstance);\nvar setNodeHeight = function setNodeHeight(node) {\n  var value = isPage(node) ? node.box.height : node.style.height;\n  return setHeight(value);\n};\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nvar setYogaValues = function setYogaValues(node) {\n  compose(setNodeHeight(node), setWidth(node.style.width), setMinWidth(node.style.minWidth), setMaxWidth(node.style.maxWidth), setMinHeight(node.style.minHeight), setMaxHeight(node.style.maxHeight), setMarginTop(node.style.marginTop), setMarginRight(node.style.marginRight), setMarginBottom(node.style.marginBottom), setMarginLeft(node.style.marginLeft), setPaddingTop(node.style.paddingTop), setPaddingRight(node.style.paddingRight), setPaddingBottom(node.style.paddingBottom), setPaddingLeft(node.style.paddingLeft), setPositionType(node.style.position), setPositionTop(node.style.top), setPositionRight(node.style.right), setPositionBottom(node.style.bottom), setPositionLeft(node.style.left), setBorderTop(node.style.borderTopWidth), setBorderRight(node.style.borderRightWidth), setBorderBottom(node.style.borderBottomWidth), setBorderLeft(node.style.borderLeftWidth), setDisplay(node.style.display), setFlexDirection(node.style.flexDirection), setAlignSelf(node.style.alignSelf), setAlignContent(node.style.alignContent), setAlignItems(node.style.alignItems), setJustifyContent(node.style.justifyContent), setFlexWrap(node.style.flexWrap), setOverflow(node.style.overflow), setAspectRatio(node.style.aspectRatio), setFlexBasis(node.style.flexBasis), setFlexGrow(node.style.flexGrow), setFlexShrink(node.style.flexShrink), setRowGap(node.style.rowGap), setColumnGap(node.style.columnGap))(node);\n};\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nvar insertYogaNodes = function insertYogaNodes(parent) {\n  return function (child) {\n    parent.insertChild(child.yogaNode, parent.getChildCount());\n    return child;\n  };\n};\nvar setMeasureFunc = function setMeasureFunc(node, page, fontStore) {\n  var yogaNode = node.yogaNode;\n  if (isText$2(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node, fontStore));\n  }\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n  if (isSvg(node)) {\n    yogaNode.setMeasureFunc(measureCanvas$1(page, node));\n  }\n  return node;\n};\nvar isLayoutElement = function isLayoutElement(node) {\n  return !isText$2(node) && !isNote(node) && !isSvg(node);\n};\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nvar createYogaNodes = function createYogaNodes(page, fontStore) {\n  return function (node) {\n    var yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n    var result = Object.assign({}, node, {\n      yogaNode: yogaNode\n    });\n    setYogaValues(result);\n    if (isLayoutElement(node) && node.children) {\n      var resolveChild = compose(insertYogaNodes(yogaNode), createYogaNodes(page, fontStore));\n      result.children = node.children.map(resolveChild);\n    }\n    setMeasureFunc(result, page, fontStore);\n    return result;\n  };\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nvar calculateLayout = function calculateLayout(page) {\n  page.yogaNode.calculateLayout();\n  return page;\n};\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nvar persistDimensions = function persistDimensions(node) {\n  if (isTextInstance$1(node)) return node;\n  var box = Object.assign(getPadding(node), getMargin(node), getBorderWidth(node), getPosition(node), getDimension(node));\n  var newNode = Object.assign({}, node, {\n    box: box\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(persistDimensions);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n\n/**\n * Removes yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nvar destroyYogaNodes = function destroyYogaNodes(node) {\n  var newNode = Object.assign({}, node);\n  delete newNode.yogaNode;\n  if (!node.children) return newNode;\n  var children = node.children.map(destroyYogaNodes);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n\n/**\n * Free yoga node from document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nvar freeYogaNodes = function freeYogaNodes(node) {\n  if (node.yogaNode) node.yogaNode.freeRecursive();\n  return node;\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nvar resolvePageDimensions = function resolvePageDimensions(page, fontStore) {\n  if (isNil(page)) return null;\n  return compose(destroyYogaNodes, freeYogaNodes, persistDimensions, calculateLayout, createYogaNodes(page, fontStore))(page);\n};\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nvar resolveDimensions = function resolveDimensions(node, fontStore) {\n  if (!node.children) return node;\n  var resolveChild = function resolveChild(child) {\n    return resolvePageDimensions(child, fontStore);\n  };\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar isText$1 = function isText(node) {\n  return node.type === P.Text;\n};\n\n// Prevent splitting elements by low decimal numbers\nvar SAFTY_THRESHOLD = 0.001;\nvar assingChildren = function assingChildren(children, node) {\n  return Object.assign({}, node, {\n    children: children\n  });\n};\nvar getTop = function getTop(node) {\n  var _node$box;\n  return ((_node$box = node.box) === null || _node$box === void 0 ? void 0 : _node$box.top) || 0;\n};\nvar allFixed = function allFixed(nodes) {\n  return nodes.every(isFixed);\n};\nvar isDynamic = function isDynamic(node) {\n  var _node$props;\n  return !isNil((_node$props = node.props) === null || _node$props === void 0 ? void 0 : _node$props.render);\n};\nvar relayoutPage = compose(resolveTextLayout, resolveInheritance, resolvePageDimensions);\nvar warnUnavailableSpace = function warnUnavailableSpace(node) {\n  console.warn(\"Node of type \" + node.type + \" can't wrap between pages and it's bigger than available page height\");\n};\nvar splitNodes = function splitNodes(height, contentArea, nodes) {\n  var currentChildren = [];\n  var nextChildren = [];\n  for (var i = 0; i < nodes.length; i += 1) {\n    var child = nodes[i];\n    var futureNodes = nodes.slice(i + 1);\n    var futureFixedNodes = futureNodes.filter(isFixed);\n    var nodeTop = getTop(child);\n    var nodeHeight = child.box.height;\n    var isOutside = height <= nodeTop;\n    var shouldBreak$1 = shouldBreak(child, futureNodes, height);\n    var shouldSplit = height + SAFTY_THRESHOLD < nodeTop + nodeHeight;\n    var canWrap = getWrap(child);\n    var fitsInsidePage = nodeHeight <= contentArea;\n    if (isFixed(child)) {\n      nextChildren.push(child);\n      currentChildren.push(child);\n      continue;\n    }\n    if (isOutside) {\n      var box = Object.assign({}, child.box, {\n        top: child.box.top - height\n      });\n      var next = Object.assign({}, child, {\n        box: box\n      });\n      nextChildren.push(next);\n      continue;\n    }\n    if (!fitsInsidePage && !canWrap) {\n      currentChildren.push(child);\n      nextChildren.push.apply(nextChildren, futureNodes);\n      warnUnavailableSpace(child);\n      break;\n    }\n    if (shouldBreak$1) {\n      var _box = Object.assign({}, child.box, {\n        top: child.box.top - height\n      });\n      var props = Object.assign({}, child.props, {\n        wrap: true,\n        break: false\n      });\n      var _next = Object.assign({}, child, {\n        box: _box,\n        props: props\n      });\n      currentChildren.push.apply(currentChildren, futureFixedNodes);\n      nextChildren.push.apply(nextChildren, [_next].concat(futureNodes));\n      break;\n    }\n    if (shouldSplit) {\n      var _split = split(child, height, contentArea),\n        currentChild = _split[0],\n        nextChild = _split[1];\n\n      // All children are moved to the next page, it doesn't make sense to show the parent on the current page\n      if (child.children.length > 0 && currentChild.children.length === 0) {\n        var _box2 = Object.assign({}, child.box, {\n          top: child.box.top - height\n        });\n        var _next2 = Object.assign({}, child, {\n          box: _box2\n        });\n        currentChildren.push.apply(currentChildren, futureFixedNodes);\n        nextChildren.push.apply(nextChildren, [_next2].concat(futureNodes));\n        break;\n      }\n      if (currentChild) currentChildren.push(currentChild);\n      if (nextChild) nextChildren.push(nextChild);\n      continue;\n    }\n    currentChildren.push(child);\n  }\n  return [currentChildren, nextChildren];\n};\nvar splitChildren = function splitChildren(height, contentArea, node) {\n  var children = node.children || [];\n  var availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, contentArea, children);\n};\nvar splitView = function splitView(node, height, contentArea) {\n  var _splitNode = splitNode(node, height),\n    currentNode = _splitNode[0],\n    nextNode = _splitNode[1];\n  var _splitChildren = splitChildren(height, contentArea, node),\n    currentChilds = _splitChildren[0],\n    nextChildren = _splitChildren[1];\n  return [assingChildren(currentChilds, currentNode), assingChildren(nextChildren, nextNode)];\n};\nvar split = function split(node, height, contentArea) {\n  return isText$1(node) ? splitText(node, height) : splitView(node, height, contentArea);\n};\nvar shouldResolveDynamicNodes = function shouldResolveDynamicNodes(node) {\n  var children = node.children || [];\n  return isDynamic(node) || children.some(shouldResolveDynamicNodes);\n};\nvar resolveDynamicNodes = function resolveDynamicNodes(props, node) {\n  var isNodeDynamic = isDynamic(node);\n\n  // Call render prop on dynamic nodes and append result to children\n  var resolveChildren = function resolveChildren(children) {\n    if (children === void 0) {\n      children = [];\n    }\n    if (isNodeDynamic) {\n      var res = node.props.render(props);\n      return createInstances(res).filter(Boolean).map(function (n) {\n        return resolveDynamicNodes(props, n);\n      });\n    }\n    return children.map(function (c) {\n      return resolveDynamicNodes(props, c);\n    });\n  };\n\n  // We reset dynamic text box so it can be computed again later on\n  var resetHeight = isNodeDynamic && isText$1(node);\n  var box = resetHeight ? _extends({}, node.box, {\n    height: 0\n  }) : node.box;\n  var children = resolveChildren(node.children);\n  var lines = isNodeDynamic ? null : node.lines;\n  return Object.assign({}, node, {\n    box: box,\n    lines: lines,\n    children: children\n  });\n};\nvar resolveDynamicPage = function resolveDynamicPage(props, page, fontStore) {\n  if (shouldResolveDynamicNodes(page)) {\n    var resolvedPage = resolveDynamicNodes(props, page);\n    return relayoutPage(resolvedPage, fontStore);\n  }\n  return page;\n};\nvar splitPage = function splitPage(page, pageNumber, fontStore) {\n  var wrapArea = getWrapArea(page);\n  var contentArea = getContentArea(page);\n  var dynamicPage = resolveDynamicPage({\n    pageNumber: pageNumber\n  }, page, fontStore);\n  var height = page.style.height;\n  var _splitNodes = splitNodes(wrapArea, contentArea, dynamicPage.children),\n    currentChilds = _splitNodes[0],\n    nextChilds = _splitNodes[1];\n  var relayout = function relayout(node) {\n    return relayoutPage(node, fontStore);\n  };\n  var currentBox = _extends({}, page.box, {\n    height: height\n  });\n  var currentPage = relayout(Object.assign({}, page, {\n    box: currentBox,\n    children: currentChilds\n  }));\n  if (nextChilds.length === 0 || allFixed(nextChilds)) return [currentPage, null];\n  var nextBox = omit('height', page.box);\n  var nextProps = omit('bookmark', page.props);\n  var nextPage = relayout(Object.assign({}, page, {\n    props: nextProps,\n    box: nextBox,\n    children: nextChilds\n  }));\n  return [currentPage, nextPage];\n};\nvar resolvePageIndices = function resolvePageIndices(fontStore, page, pageNumber, pages) {\n  var totalPages = pages.length;\n  var props = {\n    totalPages: totalPages,\n    pageNumber: pageNumber + 1,\n    subPageNumber: page.subPageNumber + 1,\n    subPageTotalPages: page.subPageTotalPages\n  };\n  return resolveDynamicPage(props, page, fontStore);\n};\nvar assocSubPageData = function assocSubPageData(subpages) {\n  return subpages.map(function (page, i) {\n    return _extends({}, page, {\n      subPageNumber: i,\n      subPageTotalPages: subpages.length\n    });\n  });\n};\nvar dissocSubPageData = function dissocSubPageData(page) {\n  return omit(['subPageNumber', 'subPageTotalPages'], page);\n};\nvar paginate = function paginate(page, pageNumber, fontStore) {\n  var _page$props;\n  if (!page) return [];\n  if (((_page$props = page.props) === null || _page$props === void 0 ? void 0 : _page$props.wrap) === false) return [page];\n  var splittedPage = splitPage(page, pageNumber, fontStore);\n  var pages = [splittedPage[0]];\n  var nextPage = splittedPage[1];\n  while (nextPage !== null) {\n    splittedPage = splitPage(nextPage, pageNumber + pages.length, fontStore);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n  return pages;\n};\n\n/**\n * Performs pagination. This is the step responsible of breaking the whole document\n * into pages following pagiation rules, such as `fixed`, `break` and dynamic nodes.\n *\n * @param {Object} node\n * @param {Object} fontStore font store\n * @returns {Object} layout node\n */\nvar resolvePagination = function resolvePagination(doc, fontStore) {\n  var pages = [];\n  var pageNumber = 1;\n  for (var i = 0; i < doc.children.length; i += 1) {\n    var page = doc.children[i];\n    var subpages = paginate(page, pageNumber, fontStore);\n    subpages = assocSubPageData(subpages);\n    pageNumber += subpages.length;\n    pages = pages.concat(subpages);\n  }\n  pages = pages.map(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return dissocSubPageData(resolvePageIndices.apply(void 0, [fontStore].concat(args)));\n  });\n  return assingChildren(pages, doc);\n};\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nvar resolvePageHorizontalPadding = function resolvePageHorizontalPadding(container) {\n  return function (value) {\n    var match = matchPercent(value);\n    return match ? match.percent * container.width : value;\n  };\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nvar resolvePageVerticalPadding = function resolvePageVerticalPadding(container) {\n  return function (value) {\n    var match = matchPercent(value);\n    return match ? match.percent * container.height : value;\n  };\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nvar resolvePagePaddings = function resolvePagePaddings(page) {\n  var container = page.style;\n  var style = evolve({\n    paddingTop: resolvePageVerticalPadding(container),\n    paddingLeft: resolvePageHorizontalPadding(container),\n    paddingRight: resolvePageHorizontalPadding(container),\n    paddingBottom: resolvePageVerticalPadding(container)\n  }, page.style);\n  return Object.assign({}, page, {\n    style: style\n  });\n};\n\n/**\n * Translates all pages percentage paddings in fixed ones\n * This has to be computed from pages calculated size and not by Yoga\n * because at this point we didn't performed pagination yet.\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nvar resolvePagesPaddings = function resolvePagesPaddings(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePagePaddings);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nvar resolveRadius = function resolveRadius(container) {\n  return function (value) {\n    if (!value) return undefined;\n    var match = matchPercent(value);\n    return match ? match.percent * Math.min(container.width, container.height) : value;\n  };\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nvar resolvePercentRadius = function resolvePercentRadius(node) {\n  var style = evolve({\n    borderTopLeftRadius: resolveRadius(node.box),\n    borderTopRightRadius: resolveRadius(node.box),\n    borderBottomRightRadius: resolveRadius(node.box),\n    borderBottomLeftRadius: resolveRadius(node.box)\n  }, node.style || {});\n  var newNode = Object.assign({}, node, {\n    style: style\n  });\n  if (!node.children) return newNode;\n  var children = node.children.map(resolvePercentRadius);\n  return Object.assign({}, newNode, {\n    children: children\n  });\n};\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nvar transformHeight = function transformHeight(pageArea, height) {\n  var match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nvar getPageArea = function getPageArea(page) {\n  var _page$style, _page$style2;\n  var pageHeight = page.style.height;\n  var pagePaddingTop = ((_page$style = page.style) === null || _page$style === void 0 ? void 0 : _page$style.paddingTop) || 0;\n  var pagePaddingBottom = ((_page$style2 = page.style) === null || _page$style2 === void 0 ? void 0 : _page$style2.paddingBottom) || 0;\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nvar resolveNodePercentHeight = function resolveNodePercentHeight(page, node) {\n  var _page$style3, _node$style;\n  if (isNil((_page$style3 = page.style) === null || _page$style3 === void 0 ? void 0 : _page$style3.height)) return node;\n  if (isNil((_node$style = node.style) === null || _node$style === void 0 ? void 0 : _node$style.height)) return node;\n  var pageArea = getPageArea(page);\n  var height = transformHeight(pageArea, node.style.height);\n  var style = Object.assign({}, node.style, {\n    height: height\n  });\n  return Object.assign({}, node, {\n    style: style\n  });\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nvar resolvePagePercentHeight = function resolvePagePercentHeight(page) {\n  if (!page.children) return page;\n  var resolveChild = function resolveChild(child) {\n    return resolveNodePercentHeight(page, child);\n  };\n  var children = page.children.map(resolveChild);\n  return Object.assign({}, page, {\n    children: children\n  });\n};\n\n/**\n * Transform all page immediate children with percent height to fixed.\n * This is needed for computing correct dimensions on pre-pagination layout.\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nvar resolvePercentHeight = function resolvePercentHeight(root) {\n  if (!root.children) return root;\n  var children = root.children.map(resolvePagePercentHeight);\n  return Object.assign({}, root, {\n    children: children\n  });\n};\n\nvar isType = function isType(type) {\n  return function (node) {\n    return node.type === type;\n  };\n};\nvar isLink = isType(P.Link);\nvar isText = isType(P.Text);\nvar isTextInstance = isType(P.TextInstance);\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nvar hasRenderProp = function hasRenderProp(node) {\n  var _node$props;\n  return !!((_node$props = node.props) !== null && _node$props !== void 0 && _node$props.render);\n};\n\n/**\n * Checks if node is text type (Text or TextInstance)\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nvar isTextType = function isTextType(node) {\n  return isText(node) || isTextInstance(node);\n};\n\n/**\n * Checks if is tet link that needs to be wrapped in Text\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nvar isTextLink = function isTextLink(node) {\n  var children = node.children || [];\n\n  // Text string inside a Link\n  if (children.every(isTextInstance)) return true;\n\n  // Text node inside a Link\n  if (children.every(isText)) return false;\n  return children.every(isTextType);\n};\n\n/**\n * Wraps node children inside Text node\n *\n * @param {Object} node\n * @returns {Boolean} node with intermediate Text child\n */\nvar wrapText = function wrapText(node) {\n  var textElement = {\n    type: P.Text,\n    props: {},\n    style: {},\n    box: {},\n    children: node.children\n  };\n  return Object.assign({}, node, {\n    children: [textElement]\n  });\n};\nvar transformLink = function transformLink(node) {\n  if (!isLink(node)) return node;\n\n  // If has render prop substitute the instance by a Text, that will\n  // ultimately render the inline Link via the textkit PDF renderer.\n  if (hasRenderProp(node)) return Object.assign({}, node, {\n    type: P.Text\n  });\n\n  // If is a text link (either contains Text or TextInstalce), wrap it\n  // inside a Text element so styles are applied correctly\n\n  if (isTextLink(node)) return wrapText(node);\n  return node;\n};\n\n/**\n * Transforms Link layout to correctly render text and dynamic rendered links\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nvar resolveLinkSubstitution = function resolveLinkSubstitution(node) {\n  if (!node.children) return node;\n  var resolveChild = compose(transformLink, resolveLinkSubstitution);\n  var children = node.children.map(resolveChild);\n  return Object.assign({}, node, {\n    children: children\n  });\n};\n\nvar layout = asyncCompose(resolveZIndex, resolveOrigin, resolvePagination, resolveTextLayout, resolvePercentRadius, resolveDimensions, resolveSvg, resolveAssets, resolveInheritance, resolvePercentHeight, resolvePagesPaddings, resolveStyles, resolveLinkSubstitution, resolveBookmarks, resolvePageSizes);\n\nexport { layout as default };\n"]},"metadata":{},"sourceType":"module"}