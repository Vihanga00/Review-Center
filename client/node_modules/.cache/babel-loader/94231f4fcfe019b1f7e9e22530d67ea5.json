{"ast":null,"code":"import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR, GET_TOP_POSTS, GET_TOP_POSTS_SUCCESS, GET_TOP_POSTS_FAILURE } from '../constants/actionTypes';\nimport * as api from '../api/index';\nexport const getTopPosts = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsByCreator = name => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsByCreator(name);\n    dispatch({\n      type: FETCH_BY_CREATOR,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/review center/client/src/actions/getTopPosts.js"],"names":["START_LOADING","END_LOADING","FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","COMMENT","FETCH_BY_CREATOR","GET_TOP_POSTS","GET_TOP_POSTS_SUCCESS","GET_TOP_POSTS_FAILURE","api","getTopPosts","id","dispatch","type","data","fetchPost","payload","post","error","console","log","getPosts","page","currentPage","numberOfPages","fetchPosts","getPostsByCreator","name","fetchPostsByCreator"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,eAA5D,EAA6EC,MAA7E,EAAqFC,MAArF,EAA6FC,MAA7F,EAAqGC,IAArG,EAA2GC,OAA3G,EAAoHC,gBAApH,EAAqIC,aAArI,EAAmJC,qBAAnJ,EAAyKC,qBAAzK,QAAsM,0BAAtM;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;AAIA,OAAO,MAAMC,WAAW,GAAIC,EAAD,IAAQ,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEmB,MAAAA;AAAF,QAAW,MAAML,GAAG,CAACM,SAAJ,CAAcJ,EAAd,CAAvB;AAEAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEf,UAAR;AAAoBkB,MAAAA,OAAO,EAAE;AAAEC,QAAAA,IAAI,EAAEH;AAAR;AAA7B,KAAD,CAAR;AACD,GAND,CAME,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMG,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACA,UAAM;AAAEmB,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAF;AAAQS,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAAR,QAAiD,MAAMf,GAAG,CAACgB,UAAJ,CAAeH,IAAf,CAA7D;AAEAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEhB,SAAR;AAAmBmB,MAAAA,OAAO,EAAE;AAAEF,QAAAA,IAAF;AAAQS,QAAAA,WAAR;AAAqBC,QAAAA;AAArB;AAA5B,KAAD,CAAR;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOsB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMQ,iBAAiB,GAAIC,IAAD,IAAU,MAAOf,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACA,UAAM;AAAEmB,MAAAA,IAAI,EAAE;AAAEA,QAAAA;AAAF;AAAR,QAAqB,MAAML,GAAG,CAACmB,mBAAJ,CAAwBD,IAAxB,CAAjC;AAEAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,gBAAR;AAA0BW,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAAnC,KAAD,CAAR;AACAF,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AACD,GAND,CAME,OAAOsB,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAVM","sourcesContent":["import { START_LOADING, END_LOADING, FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, COMMENT, FETCH_BY_CREATOR,GET_TOP_POSTS,GET_TOP_POSTS_SUCCESS,GET_TOP_POSTS_FAILURE } from '../constants/actionTypes';\r\nimport * as api from '../api/index';\r\n\r\n\r\n\r\nexport const getTopPosts = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data, currentPage, numberOfPages } } = await api.fetchPosts(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsByCreator = (name) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsByCreator(name);\r\n\r\n    dispatch({ type: FETCH_BY_CREATOR, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}