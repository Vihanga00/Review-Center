{"ast":null,"code":"var _jsxFileName = \"D:\\\\review center\\\\client\\\\src\\\\components\\\\Posts\\\\TopPosts.js\";\nimport React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst TopPost = ({\n  topPost,\n  setCurrentId\n}) => {\n  var _user$result, _user$result2, _user$result3, _user$result4;\n\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleLike = () => {\n    dispatch(likePost(topPost._id));\n  };\n\n  const openPost = () => {\n    history.push(`/posts/${topPost._id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    raised: true,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonBase, {\n    component: \"span\",\n    className: classes.cardAction,\n    onClick: openPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: topPost.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n    title: topPost.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, topPost.name), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, moment(topPost.createdAt).fromNow())), ((user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.googleId) === (topPost === null || topPost === void 0 ? void 0 : topPost.creator) || (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2._id) === (topPost === null || topPost === void 0 ? void 0 : topPost.creator)) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.overlay2,\n    name: \"edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      e.stopPropagation();\n      setCurrentId(topPost._id);\n    },\n    style: {\n      color: 'white'\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    fontSize: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), \" Edit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, topPost.tags.map(tag => `#${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, topPost.title), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, topPost.message.split(' ').splice(0, 20).join(' '), \"...\"))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: !(user === null || user === void 0 ? void 0 : user.result),\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), \"\\xA0 Like \\xA0\", topPost.likeCount), ((user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.googleId) === (topPost === null || topPost === void 0 ? void 0 : topPost.creator) || (user === null || user === void 0 ? void 0 : (_user$result4 = user.result) === null || _user$result4 === void 0 ? void 0 : _user$result4._id) === (topPost === null || topPost === void 0 ? void 0 : topPost.creator)) && /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => dispatch(deletePost(topPost._id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default TopPost;","map":{"version":3,"sources":["D:/review center/client/src/components/Posts/TopPosts.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","ButtonBase","ThumbUpAltIcon","DeleteIcon","useDispatch","moment","useHistory","EditIcon","likePost","deletePost","useStyles","TopPost","topPost","setCurrentId","user","JSON","parse","localStorage","getItem","dispatch","history","classes","handleLike","_id","openPost","push","card","cardAction","media","selectedFile","title","overlay","name","createdAt","fromNow","result","googleId","creator","overlay2","e","stopPropagation","color","details","tags","map","tag","message","split","splice","join","cardActions","likeCount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst TopPost = ({ topPost, setCurrentId }) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleLike = () => {\r\n    dispatch(likePost(topPost._id));\r\n  };\r\n\r\n  const openPost = () => {\r\n    history.push(`/posts/${topPost._id}`);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n      <ButtonBase component=\"span\" className={classes.cardAction} onClick={openPost}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={topPost.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\r\n          title={topPost.title}\r\n        />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{topPost.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(topPost.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        {(user?.result?.googleId === topPost?.creator || user?.result?._id === topPost?.creator) && (\r\n          <div className={classes.overlay2} name=\"edit\">\r\n            <Button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setCurrentId(topPost._id);\r\n              }}\r\n              style={{ color: 'white' }}\r\n              size=\"small\"\r\n            >\r\n              <EditIcon fontSize=\"default\" /> Edit\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n            {topPost.tags.map((tag) => `#${tag} `)}\r\n          </Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\r\n          {topPost.title}\r\n        </Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {topPost.message.split(' ').splice(0, 20).join(' ')}...\r\n          </Typography>\r\n        </CardContent>\r\n      </ButtonBase>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\r\n          <ThumbUpAltIcon fontSize=\"small\" />\r\n          &nbsp; Like &nbsp;\r\n          {topPost.likeCount}\r\n        </Button>\r\n        {(user?.result?.googleId === topPost?.creator || user?.result?._id === topPost?.creator) && (\r\n          <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(topPost._id))}>\r\n            <DeleteIcon fontSize=\"small\" />\r\n            </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TopPost;\r\n"]},"metadata":{},"sourceType":"module"}