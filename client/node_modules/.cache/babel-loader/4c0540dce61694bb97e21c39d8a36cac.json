{"ast":null,"code":"export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const FETCH_POST = 'FETCH_POST';\nexport const LIKE = 'LIKE';\nexport const COMMENT = 'COMMENT';\nexport const END_LOADING = 'END_LOADING';\nexport const START_LOADING = 'START_LOADING';\nexport const FETCH_BY_CREATOR = 'FETCH_BY_CREATOR';\nexport const GET_TOP_POSTS = 'GET_TOP_POSTS';\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_TOP_POSTS_SUCCESS = 'GET_TOP_POSTS_SUCCESS';\nexport const GET_TOP_POSTS_FAILURE = 'GET_TOP_POSTS_FAILURE';\nexport const getTopPosts = () => async dispatch => {\n  try {\n    // Make the API request to fetch the top posts\n    const {\n      data\n    } = await api.fetchTopPosts(); // Dispatch the action with the fetched top posts data\n\n    dispatch({\n      type: GET_TOP_POSTS,\n      payload: data\n    });\n  } catch (error) {\n    // Handle any errors\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["D:/review center/client/src/constants/actionTypes.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","LIKE","COMMENT","END_LOADING","START_LOADING","FETCH_BY_CREATOR","GET_TOP_POSTS","AUTH","LOGOUT","GET_TOP_POSTS_SUCCESS","GET_TOP_POSTS_FAILURE","getTopPosts","dispatch","data","api","fetchTopPosts","type","payload","error","console","log"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,IAAI,GAAG,MAAb;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACF;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMC,GAAG,CAACC,aAAJ,EAAvB,CAFE,CAIF;;AACAH,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAEV,aAAR;AAAuBW,MAAAA,OAAO,EAAEJ;AAAhC,KAAD,CAAR;AACD,GAND,CAME,OAAOK,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXI","sourcesContent":["export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH';\nexport const FETCH_POST = 'FETCH_POST';\nexport const LIKE = 'LIKE';\nexport const COMMENT = 'COMMENT';\nexport const END_LOADING = 'END_LOADING';\nexport const START_LOADING = 'START_LOADING';\nexport const FETCH_BY_CREATOR = 'FETCH_BY_CREATOR';\nexport const GET_TOP_POSTS = 'GET_TOP_POSTS';\nexport const AUTH = 'AUTH';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_TOP_POSTS_SUCCESS = 'GET_TOP_POSTS_SUCCESS';\nexport const GET_TOP_POSTS_FAILURE = 'GET_TOP_POSTS_FAILURE';\nexport const getTopPosts = () => async (dispatch) => {\n    try {\n      // Make the API request to fetch the top posts\n      const { data } = await api.fetchTopPosts();\n  \n      // Dispatch the action with the fetched top posts data\n      dispatch({ type: GET_TOP_POSTS, payload: data });\n    } catch (error) {\n      // Handle any errors\n      console.log(error);\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}